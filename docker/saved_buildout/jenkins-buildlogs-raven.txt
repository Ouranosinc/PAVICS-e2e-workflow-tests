Started by user Long Vu
 > git rev-parse --is-inside-work-tree # timeout=10
Setting origin to https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git
 > git config remote.origin.url https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git # timeout=10
Fetching origin...
Fetching upstream changes from origin
 > git --version # timeout=10
 > git config --get remote.origin.url # timeout=10
 > git fetch --tags --progress -- origin +refs/heads/*:refs/remotes/origin/* # timeout=10
Seen branch in repository origin/current-production-version
Seen branch in repository origin/devel-new-extensions
Seen branch in repository origin/extended_tests
Seen branch in repository origin/make-it-easier-to-add-new-nb-or-repos
Seen branch in repository origin/master
Seen branch in repository origin/new-docker-build
Seen branch in repository origin/test-dockerhub-build
Seen branch in repository origin/twitcher_perf_test_notebook
Seen 8 remote branches
Obtained Jenkinsfile from b0f972ccad161d4cc4c107776cb68d29f02ef00b
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on linux1 in /home/jenkins/agent/workspace/_workflow-tests_new-docker-build
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
No credentials specified
Fetching changes from the remote Git repository
Fetching without tags
Checking out Revision b0f972ccad161d4cc4c107776cb68d29f02ef00b (new-docker-build)
Commit message: "docker: py311-241008: initial jenkins build, default nb, 4+ errors, lots of output change"
 > git rev-parse --is-inside-work-tree # timeout=10
 > git config remote.origin.url https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git # timeout=10
Fetching upstream changes from https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git
 > git --version # timeout=10
 > git fetch --no-tags --progress -- https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f b0f972ccad161d4cc4c107776cb68d29f02ef00b # timeout=10
 > git rev-list --no-walk 8eb5ac32d9a847126754530a1cd3b84a1cb8527b # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker inspect -f . pavics/workflow-tests:py311-241008
.
[Pipeline] withDockerContainer
linux1 seems to be running inside container 6ca2491e7f43a3bf757202f625309feff7bf027df899f42e43bc71ba740ac9b6
$ docker run -t -d -u 1000:1000 -w /home/jenkins/agent/workspace/_workflow-tests_new-docker-build --volumes-from 6ca2491e7f43a3bf757202f625309feff7bf027df899f42e43bc71ba740ac9b6 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** pavics/workflow-tests:py311-241008 cat
$ docker top 5e1e47b2540886b9adf4cb0e42f943da4d3903db68bbb584fed71c4bef5a243d -eo pid,comm
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] timeout
[2024-10-08T19:26:47.705Z] Timeout set to expire in 2 hr 0 min
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Run tests)
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2024-10-08T19:26:48.585Z] Masking supported pattern matches of $ESGF_AUTH_USERNAME or $ESGF_AUTH_PASSWORD or $ESGF_AUTH_TOKEN or $COMPUTE_TOKEN
[Pipeline] {
[Pipeline] sh
[2024-10-08T19:26:48.930Z] + VERIFY_SSL=true SAVE_RESULTING_NOTEBOOK=true ./testall
[2024-10-08T19:26:48.930Z] TEST_PAVICS_SDI_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] PAVICS_SDI_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] PAVICS_SDI_REPO has been set to 'Ouranosinc/pavics-sdi'
[2024-10-08T19:26:48.930Z] TEST_FINCH_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] FINCH_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] FINCH_REPO has been set to 'bird-house/finch'
[2024-10-08T19:26:48.930Z] TEST_PAVICS_LANDING_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] PAVICS_LANDING_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] PAVICS_LANDING_REPO has been set to 'Ouranosinc/PAVICS-landing'
[2024-10-08T19:26:48.930Z] TEST_RAVEN_REPO has been set to 'true'
[2024-10-08T19:26:48.930Z] RAVEN_BRANCH has been set to 'main'
[2024-10-08T19:26:48.930Z] RAVEN_REPO has been set to 'Ouranosinc/raven'
[2024-10-08T19:26:48.930Z] TEST_RAVENPY_REPO has been set to 'true'
[2024-10-08T19:26:48.930Z] RAVENPY_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] RAVENPY_REPO has been set to 'CSHS-CWRA/RavenPy'
[2024-10-08T19:26:48.930Z] TEST_ESGF_COMPUTE_API_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] ESGF_COMPUTE_API_BRANCH has been set to 'devel'
[2024-10-08T19:26:48.930Z] ESGF_COMPUTE_API_REPO has been set to 'ESGF/esgf-compute-api'
[2024-10-08T19:26:48.930Z] TEST_LOCAL_NOTEBOOKS has been set to 'false'
[2024-10-08T19:26:48.930Z] + [ -n  ]
[2024-10-08T19:26:48.930Z] + git clean -fdx
[2024-10-08T19:26:48.930Z] Removing .pytest_cache/
[2024-10-08T19:26:48.930Z] Removing PAVICS-landing-master/
[2024-10-08T19:26:48.930Z] Removing RavenPy-master/
[2024-10-08T19:26:48.930Z] Removing __pycache__/
[2024-10-08T19:26:48.930Z] Removing buildout/
[2024-10-08T19:26:48.930Z] Removing esgf-compute-api-devel/
[2024-10-08T19:26:48.930Z] Removing finch-master/
[2024-10-08T19:26:48.930Z] Removing pavics-sdi-master/
[2024-10-08T19:26:48.930Z] Removing raven-main/
[2024-10-08T19:26:48.930Z] + ./downloadrepos
[2024-10-08T19:26:48.930Z] TEST_PAVICS_SDI_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] PAVICS_SDI_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] PAVICS_SDI_REPO has been set to 'Ouranosinc/pavics-sdi'
[2024-10-08T19:26:48.930Z] TEST_FINCH_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] FINCH_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] FINCH_REPO has been set to 'bird-house/finch'
[2024-10-08T19:26:48.930Z] TEST_PAVICS_LANDING_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] PAVICS_LANDING_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] PAVICS_LANDING_REPO has been set to 'Ouranosinc/PAVICS-landing'
[2024-10-08T19:26:48.930Z] TEST_RAVEN_REPO has been set to 'true'
[2024-10-08T19:26:48.930Z] RAVEN_BRANCH has been set to 'main'
[2024-10-08T19:26:48.930Z] RAVEN_REPO has been set to 'Ouranosinc/raven'
[2024-10-08T19:26:48.930Z] TEST_RAVENPY_REPO has been set to 'true'
[2024-10-08T19:26:48.930Z] RAVENPY_BRANCH has been set to 'master'
[2024-10-08T19:26:48.930Z] RAVENPY_REPO has been set to 'CSHS-CWRA/RavenPy'
[2024-10-08T19:26:48.930Z] TEST_ESGF_COMPUTE_API_REPO has been set to 'false'
[2024-10-08T19:26:48.930Z] ESGF_COMPUTE_API_BRANCH has been set to 'devel'
[2024-10-08T19:26:48.930Z] ESGF_COMPUTE_API_REPO has been set to 'ESGF/esgf-compute-api'
[2024-10-08T19:26:48.930Z] TEST_LOCAL_NOTEBOOKS has been set to 'false'
[2024-10-08T19:26:48.930Z] + rm -rf pavics-sdi-*
[2024-10-08T19:26:48.930Z] + ls
[2024-10-08T19:26:48.930Z] + grep pavics-sdi
[2024-10-08T19:26:48.930Z] + downloadrepos https://github.com/Ouranosinc/pavics-sdi master
[2024-10-08T19:26:48.930Z] + github_repo=https://github.com/Ouranosinc/pavics-sdi
[2024-10-08T19:26:48.930Z] + shift
[2024-10-08T19:26:48.930Z] + branch=master
[2024-10-08T19:26:48.930Z] + shift
[2024-10-08T19:26:48.930Z] + wget --quiet --output-document - https://github.com/Ouranosinc/pavics-sdi/archive/master.tar.gz
[2024-10-08T19:26:48.930Z] + tar xz
[2024-10-08T19:26:51.444Z] + ls
[2024-10-08T19:26:51.444Z] + grep pavics-sdi
[2024-10-08T19:26:51.444Z] pavics-sdi-master
[2024-10-08T19:26:51.444Z] + set +x
[2024-10-08T19:26:51.444Z] + rm -rf finch-*
[2024-10-08T19:26:51.444Z] + ls
[2024-10-08T19:26:51.444Z] + grep finch
[2024-10-08T19:26:51.444Z] + downloadrepos https://github.com/bird-house/finch master
[2024-10-08T19:26:51.444Z] + github_repo=https://github.com/bird-house/finch
[2024-10-08T19:26:51.444Z] + shift
[2024-10-08T19:26:51.444Z] + branch=master
[2024-10-08T19:26:51.444Z] + shift
[2024-10-08T19:26:51.444Z] + wget --quiet --output-document+  - https://github.com/bird-house/finch/archive/master.tar.gz
[2024-10-08T19:26:51.444Z] tar xz
[2024-10-08T19:26:53.337Z] + ls
[2024-10-08T19:26:53.337Z] + grep finch
[2024-10-08T19:26:53.337Z] finch-master
[2024-10-08T19:26:53.337Z] + set +x
[2024-10-08T19:26:53.337Z] + rm -rf PAVICS-landing-*
[2024-10-08T19:26:53.337Z] + ls
[2024-10-08T19:26:53.337Z] + grep PAVICS-landing
[2024-10-08T19:26:53.337Z] + downloadrepos https://github.com/Ouranosinc/PAVICS-landing master
[2024-10-08T19:26:53.337Z] + github_repo=https://github.com/Ouranosinc/PAVICS-landing
[2024-10-08T19:26:53.337Z] + shift
[2024-10-08T19:26:53.337Z] + branch=master
[2024-10-08T19:26:53.337Z] + shift
[2024-10-08T19:26:53.337Z] + wget --quiet --output-document - https://github.com/Ouranosinc/PAVICS-landing/archive/master.tar.gz
[2024-10-08T19:26:53.337Z] + tar xz
[2024-10-08T19:27:03.686Z] + ls
[2024-10-08T19:27:03.686Z] + grep PAVICS-landing
[2024-10-08T19:27:03.686Z] PAVICS-landing-master
[2024-10-08T19:27:03.686Z] + set +x
[2024-10-08T19:27:03.686Z] + rm -rf raven-*
[2024-10-08T19:27:03.686Z] + ls
[2024-10-08T19:27:03.686Z] + grep raven
[2024-10-08T19:27:03.686Z] + downloadrepos https://github.com/Ouranosinc/raven main
[2024-10-08T19:27:03.686Z] + github_repo=https://github.com/Ouranosinc/raven
[2024-10-08T19:27:03.686Z] + shift
[2024-10-08T19:27:03.686Z] + branch=main
[2024-10-08T19:27:03.686Z] + shift
[2024-10-08T19:27:03.686Z] + wget --quiet --output-document - https://github.com/Ouranosinc/raven/archive/main.tar.gz
[2024-10-08T19:27:03.686Z] + tar xz
[2024-10-08T19:27:04.609Z] + + ls
[2024-10-08T19:27:04.609Z] grep raven
[2024-10-08T19:27:04.609Z] raven-main
[2024-10-08T19:27:04.609Z] + set +x
[2024-10-08T19:27:04.609Z] + rm -rf RavenPy-*
[2024-10-08T19:27:04.609Z] + ls
[2024-10-08T19:27:04.609Z] + grep RavenPy
[2024-10-08T19:27:04.609Z] + downloadrepos https://github.com/CSHS-CWRA/RavenPy master
[2024-10-08T19:27:04.609Z] + github_repo=https://github.com/CSHS-CWRA/RavenPy
[2024-10-08T19:27:04.609Z] + shift
[2024-10-08T19:27:04.609Z] + branch=master
[2024-10-08T19:27:04.609Z] + shift
[2024-10-08T19:27:04.609Z] + wget --quiet --output-document - https://github.com/CSHS-CWRA/RavenPy/archive/master.tar.gz
[2024-10-08T19:27:04.609Z] + tar xz
[2024-10-08T19:27:06.493Z] + ls
[2024-10-08T19:27:06.493Z] + grep RavenPy
[2024-10-08T19:27:06.493Z] RavenPy-master
[2024-10-08T19:27:06.493Z] + set +x
[2024-10-08T19:27:06.493Z] + rm -rf esgf-compute-api-*
[2024-10-08T19:27:06.493Z] + ls
[2024-10-08T19:27:06.493Z] + grep esgf-compute-api
[2024-10-08T19:27:06.493Z] + downloadrepos https://github.com/ESGF/esgf-compute-api devel
[2024-10-08T19:27:06.493Z] + github_repo=https://github.com/ESGF/esgf-compute-api
[2024-10-08T19:27:06.493Z] + shift
[2024-10-08T19:27:06.493Z] + branch=devel
[2024-10-08T19:27:06.493Z] + shift
[2024-10-08T19:27:06.493Z] + wget --quiet --output-document - https://github.com/ESGF/esgf-compute-api/archive/devel.tar.gz
[2024-10-08T19:27:06.493Z] + tar xz
[2024-10-08T19:27:07.418Z] + + ls
[2024-10-08T19:27:07.418Z] grep esgf-compute-api
[2024-10-08T19:27:07.418Z] esgf-compute-api-devel
[2024-10-08T19:27:07.418Z] + set +x
[2024-10-08T19:27:07.418Z] + echo master
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export PAVICS_SDI_BRANCH=master
[2024-10-08T19:27:07.418Z] + echo Ouranosinc/pavics-sdi
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export PAVICS_SDI_REPO_NAME=pavics-sdi
[2024-10-08T19:27:07.418Z] + echo master
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export FINCH_BRANCH=master
[2024-10-08T19:27:07.418Z] + echo bird-house/finch
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export FINCH_REPO_NAME=finch
[2024-10-08T19:27:07.418Z] + echo master
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export PAVICS_LANDING_BRANCH=master
[2024-10-08T19:27:07.418Z] + echo Ouranosinc/PAVICS-landing
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export PAVICS_LANDING_REPO_NAME=PAVICS-landing
[2024-10-08T19:27:07.418Z] + echo main
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export RAVEN_BRANCH=main
[2024-10-08T19:27:07.418Z] + echo Ouranosinc/raven
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export RAVEN_REPO_NAME=raven
[2024-10-08T19:27:07.418Z] + echo master
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export RAVENPY_BRANCH=master
[2024-10-08T19:27:07.418Z] + echo CSHS-CWRA/RavenPy
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export RAVENPY_REPO_NAME=RavenPy
[2024-10-08T19:27:07.418Z] + echo devel
[2024-10-08T19:27:07.418Z] + sed s@/@-@g
[2024-10-08T19:27:07.418Z] + export ESGF_COMPUTE_API_BRANCH=devel
[2024-10-08T19:27:07.418Z] + echo ESGF/esgf-compute-api
[2024-10-08T19:27:07.418Z] + sed s@^.*/@@g
[2024-10-08T19:27:07.418Z] + export ESGF_COMPUTE_API_REPO_NAME=esgf-compute-api
[2024-10-08T19:27:07.418Z] + echo pavics-sdi-master
[2024-10-08T19:27:07.418Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.418Z] + export PAVICS_SDI_DIR=pavics-sdi-master
[2024-10-08T19:27:07.418Z] + echo finch-master
[2024-10-08T19:27:07.418Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.418Z] + export FINCH_DIR=finch-master
[2024-10-08T19:27:07.418Z] + echo PAVICS-landing-master
[2024-10-08T19:27:07.418Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.418Z] + export PAVICS_LANDING_DIR=PAVICS-landing-master
[2024-10-08T19:27:07.418Z] + echo raven-main
[2024-10-08T19:27:07.419Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.419Z] + export RAVEN_DIR=raven-main
[2024-10-08T19:27:07.419Z] + echo RavenPy-master
[2024-10-08T19:27:07.419Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.419Z] + export RAVENPY_DIR=RavenPy-master
[2024-10-08T19:27:07.419Z] + echo esgf-compute-api-devel
[2024-10-08T19:27:07.419Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-10-08T19:27:07.419Z] + export ESGF_COMPUTE_API_DIR=esgf-compute-api-devel
[2024-10-08T19:27:07.419Z] + echo true
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + VERIFY_SSL=true
[2024-10-08T19:27:07.419Z] + [ xtrue = xfalse ]
[2024-10-08T19:27:07.419Z] + rm -v finch-master/setup.cfg
[2024-10-08T19:27:07.419Z] removed 'finch-master/setup.cfg'
[2024-10-08T19:27:07.419Z] + rm -v raven-main/setup.cfg
[2024-10-08T19:27:07.419Z] removed 'raven-main/setup.cfg'
[2024-10-08T19:27:07.419Z] + rm -v raven-main/pyproject.toml
[2024-10-08T19:27:07.419Z] removed 'raven-main/pyproject.toml'
[2024-10-08T19:27:07.419Z] + rm -v RavenPy-master/setup.cfg
[2024-10-08T19:27:07.419Z] rm: cannot remove 'RavenPy-master/setup.cfg': No such file or directory
[2024-10-08T19:27:07.419Z] + rm -v RavenPy-master/tox.ini
[2024-10-08T19:27:07.419Z] removed 'RavenPy-master/tox.ini'
[2024-10-08T19:27:07.419Z] + rm -v RavenPy-master/pyproject.toml
[2024-10-08T19:27:07.419Z] removed 'RavenPy-master/pyproject.toml'
[2024-10-08T19:27:07.419Z] + rm -v esgf-compute-api-devel/setup.cfg
[2024-10-08T19:27:07.419Z] rm: cannot remove 'esgf-compute-api-devel/setup.cfg': No such file or directory
[2024-10-08T19:27:07.419Z] + rm -v esgf-compute-api-devel/tox.ini
[2024-10-08T19:27:07.419Z] rm: cannot remove 'esgf-compute-api-devel/tox.ini': No such file or directory
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_MAGPIE_AUTH=false
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_PAVICS_SDI_REPO=false
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_PAVICS_SDI_WEAVER=false
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_FINCH_REPO=false
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_PAVICS_LANDING_REPO=false
[2024-10-08T19:27:07.419Z] + echo true
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_RAVEN_REPO=true
[2024-10-08T19:27:07.419Z] + echo true
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_RAVENPY_REPO=true
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_ESGF_COMPUTE_API_REPO=false
[2024-10-08T19:27:07.419Z] + echo false
[2024-10-08T19:27:07.419Z] + tr [:upper:] [:lower:]
[2024-10-08T19:27:07.419Z] + TEST_LOCAL_NOTEBOOKS=false
[2024-10-08T19:27:07.419Z] + NOTEBOOKS_TO_TEST=
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + [ xtrue = xtrue ]
[2024-10-08T19:27:07.419Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb
[2024-10-08T19:27:07.419Z] + [ xtrue = xtrue ]
[2024-10-08T19:27:07.419Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb
[2024-10-08T19:27:07.419Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb RavenPy-master/docs/notebooks/paper/*.ipynb
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + [ xfalse = xtrue ]
[2024-10-08T19:27:07.419Z] + ./runtest  raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb RavenPy-master/docs/notebooks/paper/*.ipynb
[2024-10-08T19:27:07.419Z] + [ -n  ]
[2024-10-08T19:27:07.419Z] + [ ! -z pavics.ouranos.ca ]
[2024-10-08T19:27:07.419Z] + echo Will run notebooks against pavics.ouranos.ca
[2024-10-08T19:27:07.419Z] Will run notebooks against pavics.ouranos.ca
[2024-10-08T19:27:07.419Z] + [ -z  ]
[2024-10-08T19:27:07.419Z] + sed -i /\(\.ncml\|TEST_USE_PROD_DATA\)/!s/pavics.ouranos.ca/pavics.ouranos.ca/g raven-main/docs/source/notebooks/Region_selection.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-10-08T19:27:07.419Z] + git diff
[2024-10-08T19:27:07.419Z] + export PYTHONWARNINGS=ignore:Unverified HTTPS request
[2024-10-08T19:27:07.419Z] + [ -n  ]
[2024-10-08T19:27:07.420Z] + py.test --nbval raven-main/docs/source/notebooks/Region_selection.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb --nbval-sanitize-with notebooks/output-sanitize.cfg --dist=loadscope --numprocesses=0 --nbval-lax
[2024-10-08T19:27:11.579Z] ============================= test session starts ==============================
[2024-10-08T19:27:11.579Z] platform linux -- Python 3.11.10, pytest-8.3.3, pluggy-1.5.0
[2024-10-08T19:27:11.579Z] rootdir: /home/jenkins/agent/workspace/_workflow-tests_new-docker-build
[2024-10-08T19:27:11.579Z] plugins: anyio-4.6.0, dash-2.18.1, nbval-0.11.0, tornasync-0.6.0.post2, xdist-3.6.1
[2024-10-08T19:27:11.579Z] collected 243 items
[2024-10-08T19:27:11.579Z] 
[2024-10-08T19:27:22.057Z] raven-main/docs/source/notebooks/Region_selection.ipynb .........        [  3%]
[2024-10-08T19:27:23.943Z] raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb . [  4%]
[2024-10-08T19:27:37.248Z] ......                                                                   [  6%]
[2024-10-08T19:27:38.617Z] RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb ...... [  9%]
[2024-10-08T19:27:38.617Z]                                                                          [  9%]
[2024-10-08T19:27:41.129Z] RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb .... [ 10%]
[2024-10-08T19:27:49.276Z] ....                                                                     [ 12%]
[2024-10-08T19:27:55.805Z] RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb . [ 12%]
[2024-10-08T19:28:04.000Z] ..............                                                           [ 18%]
[2024-10-08T19:28:30.671Z] RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb ......... [ 22%]
[2024-10-08T19:29:27.384Z] ..                                                                       [ 23%]
[2024-10-08T19:29:29.232Z] RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb ... [ 24%]
[2024-10-08T19:29:39.108Z] .................                                                        [ 31%]
[2024-10-08T19:29:45.975Z] RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb .. [ 32%]
[2024-10-08T19:29:59.740Z] ...........                                                              [ 36%]
[2024-10-08T19:30:09.999Z] RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb ......          [ 39%]
[2024-10-08T19:30:14.165Z] RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb . [ 39%]
[2024-10-08T19:30:18.993Z] .....                                                                    [ 41%]
[2024-10-08T19:30:20.356Z] RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb . [ 41%]
[2024-10-08T19:31:38.272Z] ............FFF..                                                        [ 48%]
[2024-10-08T19:31:42.436Z] RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb . [ 49%]
[2024-10-08T19:31:50.243Z] ....                                                                     [ 51%]
[2024-10-08T19:31:58.640Z] RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb ..FFFFFF        [ 54%]
[2024-10-08T19:32:17.617Z] RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb .. [ 55%]
[2024-10-08T19:32:44.005Z] ......                                                                   [ 57%]
[2024-10-08T19:33:02.038Z] RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb . [ 58%]
[2024-10-08T19:33:10.095Z] .......                                                                  [ 60%]
[2024-10-08T19:33:16.523Z] RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb .... [ 62%]
[2024-10-08T19:33:42.783Z] ....                                                                     [ 64%]
[2024-10-08T19:34:00.812Z] RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb . [ 64%]
[2024-10-08T19:34:17.828Z] .......                                                                  [ 67%]
[2024-10-08T19:34:20.422Z] RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb . [ 67%]
[2024-10-08T19:34:46.238Z] .......                                                                  [ 70%]
[2024-10-08T19:34:48.153Z] RavenPy-master/docs/notebooks/HydroShare_integration.ipynb FFFF          [ 72%]
[2024-10-08T19:35:08.715Z] RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb .. [ 73%]
[2024-10-08T19:35:16.575Z] ....                                                                     [ 74%]
[2024-10-08T19:35:25.403Z] RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb ...    [ 76%]
[2024-10-08T19:35:53.994Z] RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb .......      [ 79%]
[2024-10-08T19:35:53.994Z] RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb . [ 79%]
[2024-10-08T19:36:04.668Z] .............                                                            [ 84%]
[2024-10-08T19:36:21.247Z] RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb .....           [ 86%]
[2024-10-08T19:36:28.036Z] RavenPy-master/docs/notebooks/time_series_analysis.ipynb ...........     [ 91%]
[2024-10-08T19:36:49.914Z] RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb . [ 91%]
[2024-10-08T19:38:20.350Z] ............FF...FFF                                                     [100%]
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] =================================== FAILURES ===================================
[2024-10-08T19:38:20.350Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 13 _
[2024-10-08T19:38:20.350Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.350Z] [94mCell 13: Cell execution caused an exception
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] Input:
[2024-10-08T19:38:20.350Z] [0m# Use xclim utilities (sbda) to give information on the type of window used for the bias correction.
[2024-10-08T19:38:20.350Z] group_month_window = sdba.utils.Grouper("time.dayofyear", window=15)
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # This is an adjusting function. It builds the tool that will perform the corrections.
[2024-10-08T19:38:20.350Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.350Z]     ref=ERA5_pr, hist=historical_pr, nquantiles=50, kind="+", group=group_month_window
[2024-10-08T19:38:20.350Z] )
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.350Z] corrected_ref_precip = Adjustment.adjust(historical_pr, interp="linear")
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.350Z] corrected_fut_precip = Adjustment.adjust(future_pr, interp="linear")
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Ensure that the precipitation is non-negative, which can happen with some climate models
[2024-10-08T19:38:20.350Z] corrected_ref_precip = corrected_ref_precip.where(corrected_ref_precip > 0, 0)
[2024-10-08T19:38:20.350Z] corrected_fut_precip = corrected_fut_precip.where(corrected_fut_precip > 0, 0)
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Train the model to find the correction factors for the maximum temperature (tasmax) data
[2024-10-08T19:38:20.350Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.350Z]     ref=ERA5_tmax,
[2024-10-08T19:38:20.350Z]     hist=historical_tasmax,
[2024-10-08T19:38:20.350Z]     nquantiles=50,
[2024-10-08T19:38:20.350Z]     kind="+",
[2024-10-08T19:38:20.350Z]     group=group_month_window,
[2024-10-08T19:38:20.350Z] )
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.350Z] corrected_ref_tasmax = Adjustment.adjust(historical_tasmax, interp="linear")
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.350Z] corrected_fut_tasmax = Adjustment.adjust(future_tasmax, interp="linear")
[2024-10-08T19:38:20.350Z] 
[2024-10-08T19:38:20.350Z] # Train the model to find the correction factors for the minimum temperature (tasmin) data
[2024-10-08T19:38:20.351Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.351Z]     ref=ERA5_tmin,
[2024-10-08T19:38:20.351Z]     hist=historical_tasmin,
[2024-10-08T19:38:20.351Z]     nquantiles=50,
[2024-10-08T19:38:20.351Z]     kind="+",
[2024-10-08T19:38:20.351Z]     group=group_month_window,
[2024-10-08T19:38:20.351Z] )
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.351Z] corrected_ref_tasmin = Adjustment.adjust(historical_tasmin, interp="linear")
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.351Z] corrected_fut_tasmin = Adjustment.adjust(future_tasmin, interp="linear")
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] [94mTraceback:[0m
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.351Z] [0;31mValueError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.351Z] Cell [0;32mIn[1], line 5[0m
[2024-10-08T19:38:20.351Z] [1;32m      2[0m group_month_window [38;5;241m=[39m sdba[38;5;241m.[39mutils[38;5;241m.[39mGrouper([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m, window[38;5;241m=[39m[38;5;241m15[39m)
[2024-10-08T19:38:20.351Z] [1;32m      4[0m [38;5;66;03m# This is an adjusting function. It builds the tool that will perform the corrections.[39;00m
[2024-10-08T19:38:20.351Z] [0;32m----> 5[0m Adjustment [38;5;241m=[39m [43msdba[49m[38;5;241;43m.[39;49m[43mDetrendedQuantileMapping[49m[38;5;241;43m.[39;49m[43mtrain[49m[43m([49m
[2024-10-08T19:38:20.351Z] [1;32m      6[0m [43m    [49m[43mref[49m[38;5;241;43m=[39;49m[43mERA5_pr[49m[43m,[49m[43m [49m[43mhist[49m[38;5;241;43m=[39;49m[43mhistorical_pr[49m[43m,[49m[43m [49m[43mnquantiles[49m[38;5;241;43m=[39;49m[38;5;241;43m50[39;49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m+[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup_month_window[49m
[2024-10-08T19:38:20.351Z] [1;32m      7[0m [43m)[49m
[2024-10-08T19:38:20.351Z] [1;32m      9[0m [38;5;66;03m# Apply the correction factors on the reference period[39;00m
[2024-10-08T19:38:20.351Z] [1;32m     10[0m corrected_ref_precip [38;5;241m=[39m Adjustment[38;5;241m.[39madjust(historical_pr, interp[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlinear[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/adjustment.py:246[0m, in [0;36mTrainAdjust.train[0;34m(cls, ref, hist, **kwargs)[0m
[2024-10-08T19:38:20.351Z] [1;32m    243[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.351Z] [1;32m    244[0m     train_units [38;5;241m=[39m [38;5;124m"[39m[38;5;124m"[39m
[2024-10-08T19:38:20.351Z] [0;32m--> 246[0m ds, params [38;5;241m=[39m [38;5;28;43mcls[39;49m[38;5;241;43m.[39;49m[43m_train[49m[43m([49m[43mref[49m[43m,[49m[43m [49m[43mhist[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-10-08T19:38:20.351Z] [1;32m    247[0m obj [38;5;241m=[39m [38;5;28mcls[39m(
[2024-10-08T19:38:20.351Z] [1;32m    248[0m     _trained[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[2024-10-08T19:38:20.351Z] [1;32m    249[0m     hist_calendar[38;5;241m=[39mget_calendar(hist),
[2024-10-08T19:38:20.351Z] [1;32m    250[0m     train_units[38;5;241m=[39mtrain_units,
[2024-10-08T19:38:20.351Z] [1;32m    251[0m     [38;5;241m*[39m[38;5;241m*[39mparams,
[2024-10-08T19:38:20.351Z] [1;32m    252[0m )
[2024-10-08T19:38:20.351Z] [1;32m    253[0m obj[38;5;241m.[39mset_dataset(ds)
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/adjustment.py:553[0m, in [0;36mDetrendedQuantileMapping._train[0;34m(cls, ref, hist, nquantiles, kind, group, adapt_freq_thresh, jitter_under_thresh_value)[0m
[2024-10-08T19:38:20.351Z] [1;32m    550[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.351Z] [1;32m    551[0m     quantiles [38;5;241m=[39m nquantiles[38;5;241m.[39mastype(ref[38;5;241m.[39mdtype)
[2024-10-08T19:38:20.351Z] [0;32m--> 553[0m ds [38;5;241m=[39m [43mdqm_train[49m[43m([49m
[2024-10-08T19:38:20.351Z] [1;32m    554[0m [43m    [49m[43mxr[49m[38;5;241;43m.[39;49m[43mDataset[49m[43m([49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mref[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mref[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mhist[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mhist[49m[43m}[49m[43m)[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    555[0m [43m    [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    556[0m [43m    [49m[43mquantiles[49m[38;5;241;43m=[39;49m[43mquantiles[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    557[0m [43m    [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    558[0m [43m    [49m[43madapt_freq_thresh[49m[38;5;241;43m=[39;49m[43madapt_freq_thresh[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    559[0m [43m    [49m[43mjitter_under_thresh_value[49m[38;5;241;43m=[39;49m[43mjitter_under_thresh_value[49m[43m,[49m
[2024-10-08T19:38:20.351Z] [1;32m    560[0m [43m[49m[43m)[49m
[2024-10-08T19:38:20.351Z] [1;32m    562[0m ds[38;5;241m.[39maf[38;5;241m.[39mattrs[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.351Z] [1;32m    563[0m     standard_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mAdjustment factors[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.351Z] [1;32m    564[0m     long_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mQuantile mapping adjustment factors[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.351Z] [1;32m    565[0m )
[2024-10-08T19:38:20.351Z] [1;32m    566[0m ds[38;5;241m.[39mhist_q[38;5;241m.[39mattrs[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.351Z] [1;32m    567[0m     standard_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mModel quantiles[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.351Z] [1;32m    568[0m     long_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mQuantiles of model on the reference period[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.351Z] [1;32m    569[0m )
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] File [0;32m<boltons.funcutils.FunctionBuilder-285>:2[0m, in [0;36m_map_blocks[0;34m(ds, **kwargs)[0m
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.351Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/base.py:484[0m, in [0;36mparse_group.<locals>._parse_group[0;34m(*f_args, **f_kwargs)[0m
[2024-10-08T19:38:20.351Z] [1;32m    481[0m [38;5;129m@wraps[39m(func)
[2024-10-08T19:38:20.351Z] [1;32m    482[0m [38;5;28;01mdef[39;00m [38;5;21m_parse_group[39m([38;5;241m*[39mf_args, [38;5;241m*[39m[38;5;241m*[39mf_kwargs):
[2024-10-08T19:38:20.351Z] [1;32m    483[0m     f_kwargs [38;5;241m=[39m _update_kwargs(f_kwargs, allowed[38;5;241m=[39mallow_only)
[2024-10-08T19:38:20.351Z] [0;32m--> 484[0m     [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43mf_args[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mf_kwargs[49m[43m)[49m
[2024-10-08T19:38:20.351Z] 
[2024-10-08T19:38:20.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/base.py:621[0m, in [0;36mmap_blocks.<locals>._decorator.<locals>._map_blocks[0;34m(ds, **kwargs)[0m
[2024-10-08T19:38:20.352Z] [1;32m    613[0m     badchunks[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.352Z] [1;32m    614[0m         {
[2024-10-08T19:38:20.352Z] [1;32m    615[0m             dim: chunks[38;5;241m.[39mget(dim)
[2024-10-08T19:38:20.352Z] [0;32m   (...)[0m
[2024-10-08T19:38:20.352Z] [1;32m    618[0m         }
[2024-10-08T19:38:20.352Z] [1;32m    619[0m     )
[2024-10-08T19:38:20.352Z] [1;32m    620[0m     [38;5;28;01mif[39;00m badchunks:
[2024-10-08T19:38:20.352Z] [0;32m--> 621[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-10-08T19:38:20.352Z] [1;32m    622[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mThe dimension(s) over which we group, reduce or interpolate cannot be chunked ([39m[38;5;132;01m{[39;00mbadchunks[38;5;132;01m}[39;00m[38;5;124m).[39m[38;5;124m"[39m
[2024-10-08T19:38:20.352Z] [1;32m    623[0m         )
[2024-10-08T19:38:20.352Z] [1;32m    624[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.352Z] [1;32m    625[0m     chunks [38;5;241m=[39m [38;5;28;01mNone[39;00m
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [0;31mValueError[0m: The dimension(s) over which we group, reduce or interpolate cannot be chunked ({'time': (3653, 1, 3652, 1)}).
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 14 _
[2024-10-08T19:38:20.352Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.352Z] [94mCell 14: Cell execution caused an exception
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] Input:
[2024-10-08T19:38:20.352Z] [0m# Convert the reference corrected data into netCDF file. We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.
[2024-10-08T19:38:20.352Z] ref_dataset = xr.merge(
[2024-10-08T19:38:20.352Z]     [
[2024-10-08T19:38:20.352Z]         corrected_ref_precip.to_dataset(name="pr"),
[2024-10-08T19:38:20.352Z]         corrected_ref_tasmax.to_dataset(name="tasmax"),
[2024-10-08T19:38:20.352Z]         corrected_ref_tasmin.to_dataset(name="tasmin"),
[2024-10-08T19:38:20.352Z]     ]
[2024-10-08T19:38:20.352Z] )
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] # Write to temporary folder
[2024-10-08T19:38:20.352Z] fn_ref = tmp / "reference_dataset.nc"
[2024-10-08T19:38:20.352Z] ref_dataset.to_netcdf(fn_ref)
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] # Convert the future corrected data into netCDF file
[2024-10-08T19:38:20.352Z] fut_dataset = xr.merge(
[2024-10-08T19:38:20.352Z]     [
[2024-10-08T19:38:20.352Z]         corrected_fut_precip.to_dataset(name="pr"),
[2024-10-08T19:38:20.352Z]         corrected_fut_tasmax.to_dataset(name="tasmax"),
[2024-10-08T19:38:20.352Z]         corrected_fut_tasmin.to_dataset(name="tasmin"),
[2024-10-08T19:38:20.352Z]     ]
[2024-10-08T19:38:20.352Z] )
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] fn_fut = tmp / "future_dataset.nc"
[2024-10-08T19:38:20.352Z] fut_dataset.to_netcdf(fn_fut)
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [94mTraceback:[0m
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.352Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.352Z] Cell [0;32mIn[1], line 4[0m
[2024-10-08T19:38:20.352Z] [1;32m      1[0m [38;5;66;03m# Convert the reference corrected data into netCDF file. We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.[39;00m
[2024-10-08T19:38:20.352Z] [1;32m      2[0m ref_dataset [38;5;241m=[39m xr[38;5;241m.[39mmerge(
[2024-10-08T19:38:20.352Z] [1;32m      3[0m     [
[2024-10-08T19:38:20.352Z] [0;32m----> 4[0m         [43mcorrected_ref_precip[49m[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mpr[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.352Z] [1;32m      5[0m         corrected_ref_tasmax[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmax[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.352Z] [1;32m      6[0m         corrected_ref_tasmin[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmin[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.352Z] [1;32m      7[0m     ]
[2024-10-08T19:38:20.352Z] [1;32m      8[0m )
[2024-10-08T19:38:20.352Z] [1;32m     10[0m [38;5;66;03m# Write to temporary folder[39;00m
[2024-10-08T19:38:20.352Z] [1;32m     11[0m fn_ref [38;5;241m=[39m tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mreference_dataset.nc[39m[38;5;124m"[39m
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [0;31mNameError[0m: name 'corrected_ref_precip' is not defined
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 15 _
[2024-10-08T19:38:20.352Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.352Z] [94mCell 15: Cell execution caused an exception
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] Input:
[2024-10-08T19:38:20.352Z] [0m# Show the corrected future precipitation.
[2024-10-08T19:38:20.352Z] corrected_fut_precip.plot()
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [94mTraceback:[0m
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.352Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.352Z] Cell [0;32mIn[1], line 2[0m
[2024-10-08T19:38:20.352Z] [1;32m      1[0m [38;5;66;03m# Show the corrected future precipitation.[39;00m
[2024-10-08T19:38:20.352Z] [0;32m----> 2[0m [43mcorrected_fut_precip[49m[38;5;241m.[39mplot()
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] [0;31mNameError[0m: name 'corrected_fut_precip' is not defined
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 2 _______
[2024-10-08T19:38:20.352Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.352Z] [94mCell 2: Cell execution caused an exception
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] Input:
[2024-10-08T19:38:20.352Z] [0m# Spin up the model. This period will be used to do an initial spinup, at the end of which the model states
[2024-10-08T19:38:20.352Z] # will be assimilated to better represent the observed streamflow and thus setting up parameters for the next
[2024-10-08T19:38:20.352Z] # steps. We first need to specify the spinup dates:
[2024-10-08T19:38:20.352Z] start_date = dt.datetime(1996, 9, 1)
[2024-10-08T19:38:20.352Z] end_date = dt.datetime(1997, 8, 31)
[2024-10-08T19:38:20.352Z] 
[2024-10-08T19:38:20.352Z] # Prepare the configuration for the spinup. Since we have added information about Ensemble Kalman Filter data
[2024-10-08T19:38:20.352Z] # assimilation, a ".rve" file will also be written to disk and Raven will use this to perform the assimilation.
[2024-10-08T19:38:20.352Z] conf_spinup = GR4JCN(
[2024-10-08T19:38:20.352Z]     # Model parameters
[2024-10-08T19:38:20.352Z]     params=[0.14, -0.005, 576, 7.0, 1.1, 0.92],
[2024-10-08T19:38:20.352Z]     # Meteorological gauge data from the Salmon river
[2024-10-08T19:38:20.352Z]     Gauge=gauge,
[2024-10-08T19:38:20.352Z]     # Streamflow observations. Very important for data assimilation, or else there is no target to attain.
[2024-10-08T19:38:20.352Z]     ObservationData=[rc.ObservationData.from_nc(salmon_meteo, alt_names="qobs")],
[2024-10-08T19:38:20.352Z]     # Sepcify the HRUs composing the watershed. Here we are using a lumped model, so there is a single HRU.
[2024-10-08T19:38:20.352Z]     HRUs=[hru],
[2024-10-08T19:38:20.352Z]     # Start and end dates of the simulation. EnKF will be applied at the last date (EndDate)
[2024-10-08T19:38:20.353Z]     StartDate=start_date,
[2024-10-08T19:38:20.353Z]     EndDate=end_date,
[2024-10-08T19:38:20.353Z]     # Specify which mode of EnKF we want to use. We want the spinup for now, but later we will use other
[2024-10-08T19:38:20.353Z]     # options. We are also using 25 members in the ensemble, but this can be changed according to your needs.
[2024-10-08T19:38:20.353Z]     EnsembleMode=rc.EnsembleMode(n=25),
[2024-10-08T19:38:20.353Z]     EnKFMode=o.EnKFMode.SPINUP,
[2024-10-08T19:38:20.353Z]     # Run name of the spinup period. This is important because it will be required in the next step.
[2024-10-08T19:38:20.353Z]     RunName="spinup",
[2024-10-08T19:38:20.353Z]     # Let's specify some metrics to assess the model performance.
[2024-10-08T19:38:20.353Z]     EvaluationMetrics=("NASH_SUTCLIFFE",),
[2024-10-08T19:38:20.353Z]     # The folder where the ensemble runs will be generated. By default, the runs are called ens_1... ens_N.
[2024-10-08T19:38:20.353Z]     OutputDirectoryFormat="./ens_*",
[2024-10-08T19:38:20.353Z]     # We need to tell Raven which inputs to perturb. the perturbation is applied following a distribution
[2024-10-08T19:38:20.353Z]     # that should realistically represent the uncertainty of the observations of these variables. Here we
[2024-10-08T19:38:20.353Z]     # use precipitation, but we could also add temperature for example.
[2024-10-08T19:38:20.353Z]     ForcingPerturbation=[
[2024-10-08T19:38:20.353Z]         rc.ForcingPerturbation(
[2024-10-08T19:38:20.353Z]             forcing="PRECIP",
[2024-10-08T19:38:20.353Z]             dist="DIST_NORMAL",
[2024-10-08T19:38:20.353Z]             p1=1.0,
[2024-10-08T19:38:20.353Z]             p2=0.5,
[2024-10-08T19:38:20.353Z]             adj="MULTIPLICATIVE",
[2024-10-08T19:38:20.353Z]         ),
[2024-10-08T19:38:20.353Z]         rc.ForcingPerturbation(
[2024-10-08T19:38:20.353Z]             forcing="TEMP_MAX",
[2024-10-08T19:38:20.353Z]             dist="DIST_NORMAL",
[2024-10-08T19:38:20.353Z]             p1=0.0,
[2024-10-08T19:38:20.353Z]             p2=2.0,
[2024-10-08T19:38:20.353Z]             adj="ADDITIVE",
[2024-10-08T19:38:20.353Z]         ),
[2024-10-08T19:38:20.353Z]         rc.ForcingPerturbation(
[2024-10-08T19:38:20.353Z]             forcing="TEMP_MIN",
[2024-10-08T19:38:20.353Z]             dist="DIST_NORMAL",
[2024-10-08T19:38:20.353Z]             p1=0.0,
[2024-10-08T19:38:20.353Z]             p2=2.0,
[2024-10-08T19:38:20.353Z]             adj="ADDITIVE",
[2024-10-08T19:38:20.353Z]         ),
[2024-10-08T19:38:20.353Z]     ],
[2024-10-08T19:38:20.353Z]     # Define the HRU Groups the assimilation will be applied on. Here we apply to all HRUs (single HRU)
[2024-10-08T19:38:20.353Z]     DefineHRUGroups=["All"],
[2024-10-08T19:38:20.353Z]     HRUGroup=[{"name": "All", "groups": ["1"]}],
[2024-10-08T19:38:20.353Z]     # Define which variables we want to assimilate.
[2024-10-08T19:38:20.353Z]     # Here we only adjust the water content of the 2 first layers of soil (SOIL[0] and SOIL[1])
[2024-10-08T19:38:20.353Z]     AssimilatedState=[
[2024-10-08T19:38:20.353Z]         rc.AssimilatedState(state="SOIL[0]", group="All"),
[2024-10-08T19:38:20.353Z]         rc.AssimilatedState(state="SOIL[1]", group="All"),
[2024-10-08T19:38:20.353Z]     ],
[2024-10-08T19:38:20.353Z]     # Define which subbasin id the streamflow is associated with
[2024-10-08T19:38:20.353Z]     AssimilateStreamflow=[rc.AssimilateStreamflow(sb_id=1)],
[2024-10-08T19:38:20.353Z]     # Define the error model for the observed streamflow. We will have a STD equal to 7% of the streamflow
[2024-10-08T19:38:20.353Z]     # value for each day, following a normal distribution.
[2024-10-08T19:38:20.353Z]     ObservationErrorModel=[
[2024-10-08T19:38:20.353Z]         rc.ObservationErrorModel(
[2024-10-08T19:38:20.353Z]             state="STREAMFLOW",
[2024-10-08T19:38:20.353Z]             dist="DIST_NORMAL",
[2024-10-08T19:38:20.353Z]             p1=1,
[2024-10-08T19:38:20.353Z]             p2=0.07,
[2024-10-08T19:38:20.353Z]             adj="MULTIPLICATIVE",
[2024-10-08T19:38:20.353Z]         )
[2024-10-08T19:38:20.353Z]     ],
[2024-10-08T19:38:20.353Z]     # Set to true for more details (verbosity)
[2024-10-08T19:38:20.353Z]     DebugMode=False,
[2024-10-08T19:38:20.353Z]     NoisyMode=False,
[2024-10-08T19:38:20.353Z] )
[2024-10-08T19:38:20.353Z] 
[2024-10-08T19:38:20.353Z] # Now that the configuration is completed, we can actually launch Raven to do the assimilation
[2024-10-08T19:38:20.353Z] spinup = Emulator(config=conf_spinup, workdir=tmp_path, overwrite=True).run(
[2024-10-08T19:38:20.353Z]     overwrite=True
[2024-10-08T19:38:20.353Z] )
[2024-10-08T19:38:20.353Z] 
[2024-10-08T19:38:20.353Z] [94mTraceback:[0m
[2024-10-08T19:38:20.353Z] 
[2024-10-08T19:38:20.353Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.353Z] [0;31mRavenError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.353Z] Cell [0;32mIn[1], line 85[0m
[2024-10-08T19:38:20.353Z] [1;32m      9[0m conf_spinup [38;5;241m=[39m GR4JCN(
[2024-10-08T19:38:20.353Z] [1;32m     10[0m     [38;5;66;03m# Model parameters[39;00m
[2024-10-08T19:38:20.353Z] [1;32m     11[0m     params[38;5;241m=[39m[[38;5;241m0.14[39m, [38;5;241m-[39m[38;5;241m0.005[39m, [38;5;241m576[39m, [38;5;241m7.0[39m, [38;5;241m1.1[39m, [38;5;241m0.92[39m],
[2024-10-08T19:38:20.353Z] [0;32m   (...)[0m
[2024-10-08T19:38:20.353Z] [1;32m     81[0m     NoisyMode[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[2024-10-08T19:38:20.353Z] [1;32m     82[0m )
[2024-10-08T19:38:20.353Z] [1;32m     84[0m [38;5;66;03m# Now that the configuration is completed, we can actually launch Raven to do the assimilation[39;00m
[2024-10-08T19:38:20.353Z] [0;32m---> 85[0m spinup [38;5;241m=[39m [43mEmulator[49m[43m([49m[43mconfig[49m[38;5;241;43m=[39;49m[43mconf_spinup[49m[43m,[49m[43m [49m[43mworkdir[49m[38;5;241;43m=[39;49m[43mtmp_path[49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m
[2024-10-08T19:38:20.353Z] [1;32m     86[0m [43m    [49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m
[2024-10-08T19:38:20.353Z] [1;32m     87[0m [43m)[49m
[2024-10-08T19:38:20.353Z] 
[2024-10-08T19:38:20.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:68[0m, in [0;36mEmulator.run[0;34m(self, overwrite)[0m
[2024-10-08T19:38:20.353Z] [1;32m     64[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39mworkdir [38;5;241m/[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mmodelname[38;5;132;01m}[39;00m[38;5;124m.rvi[39m[38;5;124m"[39m)[38;5;241m.[39mexists():
[2024-10-08T19:38:20.353Z] [1;32m     65[0m     [38;5;66;03m# FIXME: No attribute 'write_rv' on Emulator [attribute-error][39;00m
[2024-10-08T19:38:20.353Z] [1;32m     66[0m     [38;5;28mself[39m[38;5;241m.[39mwrite_rv(overwrite[38;5;241m=[39moverwrite)
[2024-10-08T19:38:20.353Z] [0;32m---> 68[0m [38;5;28mself[39m[38;5;241m.[39m_output_path [38;5;241m=[39m [43mrun[49m[43m([49m
[2024-10-08T19:38:20.354Z] [1;32m     69[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodelname[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mworkdir[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43moutput[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m
[2024-10-08T19:38:20.354Z] [1;32m     70[0m [43m[49m[43m)[49m
[2024-10-08T19:38:20.354Z] [1;32m     71[0m [38;5;28mself[39m[38;5;241m.[39m_output [38;5;241m=[39m OutputReader([38;5;28mself[39m[38;5;241m.[39mconfig[38;5;241m.[39mrun_name, path[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_output_path)
[2024-10-08T19:38:20.354Z] [1;32m     72[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_output
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:323[0m, in [0;36mrun[0;34m(modelname, configdir, outputdir, overwrite, verbose)[0m
[2024-10-08T19:38:20.354Z] [1;32m    320[0m         warn(msg, category[38;5;241m=[39mRavenWarning)
[2024-10-08T19:38:20.354Z] [1;32m    322[0m [38;5;28;01mif[39;00m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m]:
[2024-10-08T19:38:20.354Z] [0;32m--> 323[0m     [38;5;28;01mraise[39;00m RavenError(
[2024-10-08T19:38:20.354Z] [1;32m    324[0m         [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin([[38;5;124mf[39m[38;5;124m"[39m[38;5;124mConfig directory: [39m[38;5;132;01m{[39;00mconfigdir[38;5;132;01m}[39;00m[38;5;124m"[39m] [38;5;241m+[39m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m])
[2024-10-08T19:38:20.354Z] [1;32m    325[0m     )
[2024-10-08T19:38:20.354Z] [1;32m    327[0m [38;5;28;01mif[39;00m returncode [38;5;241m!=[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.354Z] [1;32m    328[0m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mRaven Error (code: [39m[38;5;132;01m{[39;00mreturncode[38;5;132;01m}[39;00m[38;5;124m): [39m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstdout[38;5;132;01m}[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstderr[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] [0;31mRavenError[0m: Config directory: /tmp/tmph2x051rm
[2024-10-08T19:38:20.354Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.354Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 3 _______
[2024-10-08T19:38:20.354Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.354Z] [94mCell 3: Cell execution caused an exception
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] Input:
[2024-10-08T19:38:20.354Z] [0m# Get the paths to all the ens_1...ens_N folders, one per member
[2024-10-08T19:38:20.354Z] paths_spinup = list(tmp_path.glob("ens_*"))
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] # Read those into memory in an EnsembleReader object
[2024-10-08T19:38:20.354Z] ens_spinup = EnsembleReader(run_name=conf_spinup.run_name, paths=paths_spinup)
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] # We can now plot the results
[2024-10-08T19:38:20.354Z] ens_spinup.hydrograph.q_sim[:, :, 0].plot.line("b", x="time", add_legend=False, lw=0.5)
[2024-10-08T19:38:20.354Z] ens_spinup.hydrograph.q_sim[1, :, 0].plot.line("b", x="time", label="Forecasts", lw=0.5)
[2024-10-08T19:38:20.354Z] ens_spinup.hydrograph.q_obs[1, :, 0].plot.line(
[2024-10-08T19:38:20.354Z]     x="time", color="black", label="Observation"
[2024-10-08T19:38:20.354Z] )
[2024-10-08T19:38:20.354Z] plt.legend(loc="upper left")
[2024-10-08T19:38:20.354Z] plt.ylabel("Streamlfow (m��/s)")
[2024-10-08T19:38:20.354Z] plt.title("Spinup period")
[2024-10-08T19:38:20.354Z] plt.show()
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] [94mTraceback:[0m
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.354Z] [0;31mValueError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.354Z] Cell [0;32mIn[1], line 8[0m
[2024-10-08T19:38:20.354Z] [1;32m      5[0m ens_spinup [38;5;241m=[39m EnsembleReader(run_name[38;5;241m=[39mconf_spinup[38;5;241m.[39mrun_name, paths[38;5;241m=[39mpaths_spinup)
[2024-10-08T19:38:20.354Z] [1;32m      7[0m [38;5;66;03m# We can now plot the results[39;00m
[2024-10-08T19:38:20.354Z] [0;32m----> 8[0m [43mens_spinup[49m[38;5;241;43m.[39;49m[43mhydrograph[49m[38;5;241m.[39mq_sim[:, :, [38;5;241m0[39m][38;5;241m.[39mplot[38;5;241m.[39mline([38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m, x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, add_legend[38;5;241m=[39m[38;5;28;01mFalse[39;00m, lw[38;5;241m=[39m[38;5;241m0.5[39m)
[2024-10-08T19:38:20.354Z] [1;32m      9[0m ens_spinup[38;5;241m.[39mhydrograph[38;5;241m.[39mq_sim[[38;5;241m1[39m, :, [38;5;241m0[39m][38;5;241m.[39mplot[38;5;241m.[39mline([38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m, x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mForecasts[39m[38;5;124m"[39m, lw[38;5;241m=[39m[38;5;241m0.5[39m)
[2024-10-08T19:38:20.354Z] [1;32m     10[0m ens_spinup[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[[38;5;241m1[39m, :, [38;5;241m0[39m][38;5;241m.[39mplot[38;5;241m.[39mline(
[2024-10-08T19:38:20.354Z] [1;32m     11[0m     x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mObservation[39m[38;5;124m"[39m
[2024-10-08T19:38:20.354Z] [1;32m     12[0m )
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:242[0m, in [0;36mEnsembleReader.hydrograph[0;34m(self)[0m
[2024-10-08T19:38:20.354Z] [1;32m    239[0m [38;5;129m@property[39m
[2024-10-08T19:38:20.354Z] [1;32m    240[0m [38;5;28;01mdef[39;00m [38;5;21mhydrograph[39m([38;5;28mself[39m):
[2024-10-08T19:38:20.354Z] [1;32m    241[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39mfiles[[38;5;124m"[39m[38;5;124mhydrograph[39m[38;5;124m"[39m]) [38;5;241m==[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.354Z] [0;32m--> 242[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-10-08T19:38:20.354Z] [1;32m    243[0m             [38;5;124m"[39m[38;5;124mNo file found, make sure you have the right `run_name` and output `paths`.[39m[38;5;124m"[39m
[2024-10-08T19:38:20.354Z] [1;32m    244[0m         )
[2024-10-08T19:38:20.354Z] [1;32m    245[0m     [38;5;28;01mreturn[39;00m xr[38;5;241m.[39mconcat(
[2024-10-08T19:38:20.354Z] [1;32m    246[0m         [xr[38;5;241m.[39mopen_dataset(f) [38;5;28;01mfor[39;00m f [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mfiles[[38;5;124m"[39m[38;5;124mhydrograph[39m[38;5;124m"[39m]],
[2024-10-08T19:38:20.354Z] [1;32m    247[0m         dim[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_dim,
[2024-10-08T19:38:20.354Z] [1;32m    248[0m         coords[38;5;241m=[39m[38;5;124m"[39m[38;5;124mdifferent[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.354Z] [1;32m    249[0m     )
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.354Z] [0;31mValueError[0m: No file found, make sure you have the right `run_name` and output `paths`.
[2024-10-08T19:38:20.354Z] 
[2024-10-08T19:38:20.355Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 4 _______
[2024-10-08T19:38:20.355Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.355Z] [94mCell 4: Cell execution caused an exception
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] Input:
[2024-10-08T19:38:20.355Z] [0m# Set the start date equal to the assimilated date of the prior run, as we want to start from the assimilated
[2024-10-08T19:38:20.355Z] # states. The end date is set 3 days later, after which assimilation will be automatically performed.
[2024-10-08T19:38:20.355Z] start_date = end_date
[2024-10-08T19:38:20.355Z] end_date = end_date + dt.timedelta(days=3)
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] # Closed-Loop assimilation. From the previous configuration, we can make a copy and only change the required
[2024-10-08T19:38:20.355Z] # parameters, such as the run name, start and end dates, and the type of EnKF (switch from spinup to closed-loop).
[2024-10-08T19:38:20.355Z] conf_loop = conf_spinup.duplicate(
[2024-10-08T19:38:20.355Z]     EnKFMode=o.EnKFMode.CLOSED_LOOP,
[2024-10-08T19:38:20.355Z]     # This will be the name of the output files in the closed-loop run.
[2024-10-08T19:38:20.355Z]     RunName="loop",
[2024-10-08T19:38:20.355Z]     # This is the name of the run we will start from, i.e. the assimilated spinup states from earlier!
[2024-10-08T19:38:20.355Z]     SolutionRunName="spinup",
[2024-10-08T19:38:20.355Z]     # We need to tell the model not to set the default initial conditions (it will use the assimilated states)
[2024-10-08T19:38:20.355Z]     UniformInitialConditions=None,
[2024-10-08T19:38:20.355Z]     # Set the new dates
[2024-10-08T19:38:20.355Z]     StartDate=start_date,
[2024-10-08T19:38:20.355Z]     EndDate=end_date,
[2024-10-08T19:38:20.355Z] )
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] # Now that the configuration is ready, launch the assimilation run. Raven will run 25 times: Once for each member
[2024-10-08T19:38:20.355Z] # With the same perturbed meteorological and hydrometric data and parameters as defined previously, but for this
[2024-10-08T19:38:20.355Z] # new 3-day period.
[2024-10-08T19:38:20.355Z] loop = Emulator(config=conf_loop, workdir=tmp_path, overwrite=True).run(overwrite=True)
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] # Get the paths to all the ens_1...ens_N folders, one per member
[2024-10-08T19:38:20.355Z] paths_loop = list(tmp_path.glob("ens_*"))
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] # Repeat the same process as the spinup to look at model results:
[2024-10-08T19:38:20.355Z] ens_loop = EnsembleReader(run_name=conf_loop.run_name, paths=paths_loop)
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] # We can now plot the results
[2024-10-08T19:38:20.355Z] ens_loop.hydrograph.q_sim[:, :, 0].plot.line("b", x="time", add_legend=False, lw=0.5)
[2024-10-08T19:38:20.355Z] ens_loop.hydrograph.q_sim[1, :, 0].plot.line("b", x="time", label="Forecasts", lw=0.5)
[2024-10-08T19:38:20.355Z] ens_loop.hydrograph.q_obs[1, :, 0].plot.line(
[2024-10-08T19:38:20.355Z]     x="time", color="black", label="Observation"
[2024-10-08T19:38:20.355Z] )
[2024-10-08T19:38:20.355Z] plt.legend(loc="lower left")
[2024-10-08T19:38:20.355Z] plt.ylabel("Streamlfow (m��/s)")
[2024-10-08T19:38:20.355Z] plt.title("First closed-loop period")
[2024-10-08T19:38:20.355Z] plt.show()
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] [94mTraceback:[0m
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.355Z] [0;31mRavenError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.355Z] Cell [0;32mIn[1], line 24[0m
[2024-10-08T19:38:20.355Z] [1;32m      8[0m conf_loop [38;5;241m=[39m conf_spinup[38;5;241m.[39mduplicate(
[2024-10-08T19:38:20.355Z] [1;32m      9[0m     EnKFMode[38;5;241m=[39mo[38;5;241m.[39mEnKFMode[38;5;241m.[39mCLOSED_LOOP,
[2024-10-08T19:38:20.355Z] [1;32m     10[0m     [38;5;66;03m# This will be the name of the output files in the closed-loop run.[39;00m
[2024-10-08T19:38:20.355Z] [0;32m   (...)[0m
[2024-10-08T19:38:20.355Z] [1;32m     18[0m     EndDate[38;5;241m=[39mend_date,
[2024-10-08T19:38:20.355Z] [1;32m     19[0m )
[2024-10-08T19:38:20.355Z] [1;32m     21[0m [38;5;66;03m# Now that the configuration is ready, launch the assimilation run. Raven will run 25 times: Once for each member[39;00m
[2024-10-08T19:38:20.355Z] [1;32m     22[0m [38;5;66;03m# With the same perturbed meteorological and hydrometric data and parameters as defined previously, but for this[39;00m
[2024-10-08T19:38:20.355Z] [1;32m     23[0m [38;5;66;03m# new 3-day period.[39;00m
[2024-10-08T19:38:20.355Z] [0;32m---> 24[0m loop [38;5;241m=[39m [43mEmulator[49m[43m([49m[43mconfig[49m[38;5;241;43m=[39;49m[43mconf_loop[49m[43m,[49m[43m [49m[43mworkdir[49m[38;5;241;43m=[39;49m[43mtmp_path[49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[2024-10-08T19:38:20.355Z] [1;32m     26[0m [38;5;66;03m# Get the paths to all the ens_1...ens_N folders, one per member[39;00m
[2024-10-08T19:38:20.355Z] [1;32m     27[0m paths_loop [38;5;241m=[39m [38;5;28mlist[39m(tmp_path[38;5;241m.[39mglob([38;5;124m"[39m[38;5;124mens_*[39m[38;5;124m"[39m))
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:68[0m, in [0;36mEmulator.run[0;34m(self, overwrite)[0m
[2024-10-08T19:38:20.355Z] [1;32m     64[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39mworkdir [38;5;241m/[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mmodelname[38;5;132;01m}[39;00m[38;5;124m.rvi[39m[38;5;124m"[39m)[38;5;241m.[39mexists():
[2024-10-08T19:38:20.355Z] [1;32m     65[0m     [38;5;66;03m# FIXME: No attribute 'write_rv' on Emulator [attribute-error][39;00m
[2024-10-08T19:38:20.355Z] [1;32m     66[0m     [38;5;28mself[39m[38;5;241m.[39mwrite_rv(overwrite[38;5;241m=[39moverwrite)
[2024-10-08T19:38:20.355Z] [0;32m---> 68[0m [38;5;28mself[39m[38;5;241m.[39m_output_path [38;5;241m=[39m [43mrun[49m[43m([49m
[2024-10-08T19:38:20.355Z] [1;32m     69[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodelname[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mworkdir[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43moutput[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m
[2024-10-08T19:38:20.355Z] [1;32m     70[0m [43m[49m[43m)[49m
[2024-10-08T19:38:20.355Z] [1;32m     71[0m [38;5;28mself[39m[38;5;241m.[39m_output [38;5;241m=[39m OutputReader([38;5;28mself[39m[38;5;241m.[39mconfig[38;5;241m.[39mrun_name, path[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_output_path)
[2024-10-08T19:38:20.355Z] [1;32m     72[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_output
[2024-10-08T19:38:20.355Z] 
[2024-10-08T19:38:20.355Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:323[0m, in [0;36mrun[0;34m(modelname, configdir, outputdir, overwrite, verbose)[0m
[2024-10-08T19:38:20.355Z] [1;32m    320[0m         warn(msg, category[38;5;241m=[39mRavenWarning)
[2024-10-08T19:38:20.356Z] [1;32m    322[0m [38;5;28;01mif[39;00m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m]:
[2024-10-08T19:38:20.356Z] [0;32m--> 323[0m     [38;5;28;01mraise[39;00m RavenError(
[2024-10-08T19:38:20.356Z] [1;32m    324[0m         [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin([[38;5;124mf[39m[38;5;124m"[39m[38;5;124mConfig directory: [39m[38;5;132;01m{[39;00mconfigdir[38;5;132;01m}[39;00m[38;5;124m"[39m] [38;5;241m+[39m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m])
[2024-10-08T19:38:20.356Z] [1;32m    325[0m     )
[2024-10-08T19:38:20.356Z] [1;32m    327[0m [38;5;28;01mif[39;00m returncode [38;5;241m!=[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.356Z] [1;32m    328[0m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mRaven Error (code: [39m[38;5;132;01m{[39;00mreturncode[38;5;132;01m}[39;00m[38;5;124m): [39m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstdout[38;5;132;01m}[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstderr[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] [0;31mRavenError[0m: Config directory: /tmp/tmph2x051rm
[2024-10-08T19:38:20.356Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.356Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 5 _______
[2024-10-08T19:38:20.356Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.356Z] [94mCell 5: Cell execution caused an exception
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] Input:
[2024-10-08T19:38:20.356Z] [0m# Let's store the hydrograph from the previous 3-day run in a variable that we will append to at each time step.
[2024-10-08T19:38:20.356Z] total_hydrograph = ens_loop.hydrograph
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] # Here is where the assimilation loop is performed. We will apply the assimilation 30 successive times, advancing
[2024-10-08T19:38:20.356Z] # in time by 3 days each iteration.
[2024-10-08T19:38:20.356Z] for i in range(0, 30):
[2024-10-08T19:38:20.356Z]     # Set the new start_date and end_dates
[2024-10-08T19:38:20.356Z]     start_date = end_date
[2024-10-08T19:38:20.356Z]     end_date = end_date + dt.timedelta(days=3)
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z]     # Again, copy the configuration object and change some elements
[2024-10-08T19:38:20.356Z]     conf_loop = conf_loop.duplicate(
[2024-10-08T19:38:20.356Z]         # Here we will set RunName and SolutionRunName to the same values such that the model will read the "loop"
[2024-10-08T19:38:20.356Z]         # run, perform the assimilation, and save the results to "loop" again, making them available for the
[2024-10-08T19:38:20.356Z]         # next run, effectively overwriting the results at each step. We could preserve each run's result by changing
[2024-10-08T19:38:20.356Z]         # these run names dynamically, but in our case it is not important nor required to do so.
[2024-10-08T19:38:20.356Z]         RunName="loop",
[2024-10-08T19:38:20.356Z]         SolutionRunName="loop",
[2024-10-08T19:38:20.356Z]         # Again, set the initial conditions to None to preserve the assimilated ones.
[2024-10-08T19:38:20.356Z]         UniformInitialConditions=None,
[2024-10-08T19:38:20.356Z]         # Set the start and end date of the simulation period, with the assimilation being performed on the final date.
[2024-10-08T19:38:20.356Z]         StartDate=start_date,
[2024-10-08T19:38:20.356Z]         EndDate=end_date,
[2024-10-08T19:38:20.356Z]     )
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z]     # Perform the actual simulation and assimilation for this 3-day step.
[2024-10-08T19:38:20.356Z]     new_loop = Emulator(config=conf_loop, workdir=tmp_path, overwrite=True).run(
[2024-10-08T19:38:20.356Z]         overwrite=True
[2024-10-08T19:38:20.356Z]     )
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z]     # Extract the results for this 3-day hydrograph and store it into our "total_hydrograph" which keeps track
[2024-10-08T19:38:20.356Z]     # of the flows for each of the 3-day periods.
[2024-10-08T19:38:20.356Z]     ens_loop = EnsembleReader(run_name=conf_loop.run_name, paths=paths_loop)
[2024-10-08T19:38:20.356Z]     total_hydrograph = xr.concat([total_hydrograph, ens_loop.hydrograph], dim="time")
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] # Once the loop is complete, plot the results:
[2024-10-08T19:38:20.356Z] total_hydrograph.q_sim[:, :, 0].plot.line("b", x="time", add_legend=False, lw=0.5)
[2024-10-08T19:38:20.356Z] total_hydrograph.q_sim[1, :, 0].plot.line("b", x="time", label="Forecasts", lw=0.5)
[2024-10-08T19:38:20.356Z] total_hydrograph.q_obs[1, :, 0].plot.line(x="time", color="black", label="Observation")
[2024-10-08T19:38:20.356Z] plt.legend(loc="upper left")
[2024-10-08T19:38:20.356Z] plt.ylabel("Streamlfow (m��/s)")
[2024-10-08T19:38:20.356Z] plt.title("All closed-loop periods")
[2024-10-08T19:38:20.356Z] plt.show()
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] [94mTraceback:[0m
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.356Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.356Z] Cell [0;32mIn[1], line 2[0m
[2024-10-08T19:38:20.356Z] [1;32m      1[0m [38;5;66;03m# Let's store the hydrograph from the previous 3-day run in a variable that we will append to at each time step.[39;00m
[2024-10-08T19:38:20.356Z] [0;32m----> 2[0m total_hydrograph [38;5;241m=[39m [43mens_loop[49m[38;5;241m.[39mhydrograph
[2024-10-08T19:38:20.356Z] [1;32m      4[0m [38;5;66;03m# Here is where the assimilation loop is performed. We will apply the assimilation 30 successive times, advancing[39;00m
[2024-10-08T19:38:20.356Z] [1;32m      5[0m [38;5;66;03m# in time by 3 days each iteration.[39;00m
[2024-10-08T19:38:20.356Z] [1;32m      6[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m0[39m, [38;5;241m30[39m):
[2024-10-08T19:38:20.356Z] [1;32m      7[0m     [38;5;66;03m# Set the new start_date and end_dates[39;00m
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] [0;31mNameError[0m: name 'ens_loop' is not defined
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 6 _______
[2024-10-08T19:38:20.356Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.356Z] [94mCell 6: Cell execution caused an exception
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] Input:
[2024-10-08T19:38:20.356Z] [0m# Reset the start and end-dates to cover the entire period (spinup + 30 3-day steps)
[2024-10-08T19:38:20.356Z] start_date = dt.datetime(1996, 9, 1)
[2024-10-08T19:38:20.356Z] end_date = dt.datetime(1997, 8, 31) + dt.timedelta(days=30 * 3)
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] # Setup a standard GR4JCN model
[2024-10-08T19:38:20.356Z] conf_openloop = GR4JCN(
[2024-10-08T19:38:20.356Z]     params=[0.14, -0.005, 576, 7.0, 1.1, 0.92],
[2024-10-08T19:38:20.356Z]     Gauge=gauge,
[2024-10-08T19:38:20.356Z]     ObservationData=[rc.ObservationData.from_nc(salmon_meteo, alt_names="qobs")],
[2024-10-08T19:38:20.356Z]     HRUs=[hru],
[2024-10-08T19:38:20.356Z]     StartDate=start_date,
[2024-10-08T19:38:20.356Z]     EndDate=end_date,
[2024-10-08T19:38:20.356Z]     RunName="OPEN_LOOP",
[2024-10-08T19:38:20.356Z]     EvaluationMetrics=("NASH_SUTCLIFFE",),
[2024-10-08T19:38:20.356Z] )
[2024-10-08T19:38:20.356Z] 
[2024-10-08T19:38:20.356Z] openloop = Emulator(config=conf_openloop, workdir=tmp_path, overwrite=True).run(
[2024-10-08T19:38:20.356Z]     overwrite=True
[2024-10-08T19:38:20.357Z] )
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] openloop.hydrograph.q_sim.plot.line("r", x="time", label="Open-loop simulation")
[2024-10-08T19:38:20.357Z] total_hydrograph.q_sim[:, :, 0].mean(dim="member").plot.line(
[2024-10-08T19:38:20.357Z]     "b", x="time", label="Closed-loop assimilation"
[2024-10-08T19:38:20.357Z] )
[2024-10-08T19:38:20.357Z] openloop.hydrograph.q_obs.plot.line(x="time", color="black", label="Observations")
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] plt.xlim([dt.date(1997, 9, 1), dt.date(1997, 12, 1)])
[2024-10-08T19:38:20.357Z] plt.ylim([0, 50])
[2024-10-08T19:38:20.357Z] plt.legend(loc="upper left")
[2024-10-08T19:38:20.357Z] plt.ylabel("Streamlfow (m��/s)")
[2024-10-08T19:38:20.357Z] plt.title("Closed-loop vs. Open-loop simulations")
[2024-10-08T19:38:20.357Z] plt.show()
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] [94mTraceback:[0m
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.357Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.357Z] Cell [0;32mIn[1], line 22[0m
[2024-10-08T19:38:20.357Z] [1;32m     17[0m openloop [38;5;241m=[39m Emulator(config[38;5;241m=[39mconf_openloop, workdir[38;5;241m=[39mtmp_path, overwrite[38;5;241m=[39m[38;5;28;01mTrue[39;00m)[38;5;241m.[39mrun(
[2024-10-08T19:38:20.357Z] [1;32m     18[0m     overwrite[38;5;241m=[39m[38;5;28;01mTrue[39;00m
[2024-10-08T19:38:20.357Z] [1;32m     19[0m )
[2024-10-08T19:38:20.357Z] [1;32m     21[0m openloop[38;5;241m.[39mhydrograph[38;5;241m.[39mq_sim[38;5;241m.[39mplot[38;5;241m.[39mline([38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m, x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mOpen-loop simulation[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.357Z] [0;32m---> 22[0m [43mtotal_hydrograph[49m[38;5;241m.[39mq_sim[:, :, [38;5;241m0[39m][38;5;241m.[39mmean(dim[38;5;241m=[39m[38;5;124m"[39m[38;5;124mmember[39m[38;5;124m"[39m)[38;5;241m.[39mplot[38;5;241m.[39mline(
[2024-10-08T19:38:20.357Z] [1;32m     23[0m     [38;5;124m"[39m[38;5;124mb[39m[38;5;124m"[39m, x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mClosed-loop assimilation[39m[38;5;124m"[39m
[2024-10-08T19:38:20.357Z] [1;32m     24[0m )
[2024-10-08T19:38:20.357Z] [1;32m     25[0m openloop[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[38;5;241m.[39mplot[38;5;241m.[39mline(x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m, color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mObservations[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.357Z] [1;32m     27[0m plt[38;5;241m.[39mxlim([dt[38;5;241m.[39mdate([38;5;241m1997[39m, [38;5;241m9[39m, [38;5;241m1[39m), dt[38;5;241m.[39mdate([38;5;241m1997[39m, [38;5;241m12[39m, [38;5;241m1[39m)])
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] [0;31mNameError[0m: name 'total_hydrograph' is not defined
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] _______ RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 7 _______
[2024-10-08T19:38:20.357Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.357Z] [94mCell 7: Cell execution caused an exception
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] Input:
[2024-10-08T19:38:20.357Z] [0m# Set up the forecast configuration, basing it on the previous (final) assimilation step.
[2024-10-08T19:38:20.357Z] conf_forecast = conf_loop.duplicate(
[2024-10-08T19:38:20.357Z]     EnKFMode=o.EnKFMode.FORECAST,
[2024-10-08T19:38:20.357Z]     RunName="forecast",
[2024-10-08T19:38:20.357Z]     SolutionRunName="loop",
[2024-10-08T19:38:20.357Z]     UniformInitialConditions=None,
[2024-10-08T19:38:20.357Z]     # Set the start date equal to the end date of the last assimilation run.
[2024-10-08T19:38:20.357Z]     StartDate=end_date,
[2024-10-08T19:38:20.357Z]     # Here we will do a 30-day forecast using the observed meteorological data as forecast data. However it is
[2024-10-08T19:38:20.357Z]     # possible to replace the Gauge forcing data with that of a forecast, as we have done before.
[2024-10-08T19:38:20.357Z]     EndDate=end_date + dt.timedelta(days=30),
[2024-10-08T19:38:20.357Z] )
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] forecast = Emulator(config=conf_forecast, workdir=tmp_path, overwrite=True).run(
[2024-10-08T19:38:20.357Z]     overwrite=True
[2024-10-08T19:38:20.357Z] )
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] # We will plot the resulting forecast. Note that since we have 25 members, we also have 25 forecasts, i.e. one
[2024-10-08T19:38:20.357Z] # per possible initial state. We could take the mean hydrograph to get the best estimator of the forecasted flow.
[2024-10-08T19:38:20.357Z] ens = EnsembleReader(run_name=conf_forecast.run_name, paths=paths_loop)
[2024-10-08T19:38:20.357Z] ens.hydrograph.q_sim[:, :, 0].plot.line("b", x="time", label=None, lw=0.5)
[2024-10-08T19:38:20.357Z] ens.hydrograph.q_sim[1, :, 0].plot.line("b", x="time", label="Forecast", lw=0.5)
[2024-10-08T19:38:20.357Z] ens.hydrograph.q_obs[1, :, 0].plot.line("black", x="time", label="Observation")
[2024-10-08T19:38:20.357Z] plt.legend(loc="upper left")
[2024-10-08T19:38:20.357Z] plt.ylabel("Streamlfow (m��/s)")
[2024-10-08T19:38:20.357Z] plt.title("Forecast after assimilation")
[2024-10-08T19:38:20.357Z] plt.xlim([dt.date(1997, 11, 29), dt.date(1997, 12, 29)])
[2024-10-08T19:38:20.357Z] plt.show()
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] [94mTraceback:[0m
[2024-10-08T19:38:20.357Z] 
[2024-10-08T19:38:20.357Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.357Z] [0;31mRavenError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.357Z] Cell [0;32mIn[1], line 14[0m
[2024-10-08T19:38:20.357Z] [1;32m      1[0m [38;5;66;03m# Set up the forecast configuration, basing it on the previous (final) assimilation step.[39;00m
[2024-10-08T19:38:20.357Z] [1;32m      2[0m conf_forecast [38;5;241m=[39m conf_loop[38;5;241m.[39mduplicate(
[2024-10-08T19:38:20.357Z] [1;32m      3[0m     EnKFMode[38;5;241m=[39mo[38;5;241m.[39mEnKFMode[38;5;241m.[39mFORECAST,
[2024-10-08T19:38:20.357Z] [1;32m      4[0m     RunName[38;5;241m=[39m[38;5;124m"[39m[38;5;124mforecast[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.357Z] [0;32m   (...)[0m
[2024-10-08T19:38:20.357Z] [1;32m     11[0m     EndDate[38;5;241m=[39mend_date [38;5;241m+[39m dt[38;5;241m.[39mtimedelta(days[38;5;241m=[39m[38;5;241m30[39m),
[2024-10-08T19:38:20.357Z] [1;32m     12[0m )
[2024-10-08T19:38:20.357Z] [0;32m---> 14[0m forecast [38;5;241m=[39m [43mEmulator[49m[43m([49m[43mconfig[49m[38;5;241;43m=[39;49m[43mconf_forecast[49m[43m,[49m[43m [49m[43mworkdir[49m[38;5;241;43m=[39;49m[43mtmp_path[49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m
[2024-10-08T19:38:20.357Z] [1;32m     15[0m [43m    [49m[43moverwrite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m
[2024-10-08T19:38:20.357Z] [1;32m     16[0m [43m)[49m
[2024-10-08T19:38:20.358Z] [1;32m     18[0m [38;5;66;03m# We will plot the resulting forecast. Note that since we have 25 members, we also have 25 forecasts, i.e. one[39;00m
[2024-10-08T19:38:20.358Z] [1;32m     19[0m [38;5;66;03m# per possible initial state. We could take the mean hydrograph to get the best estimator of the forecasted flow.[39;00m
[2024-10-08T19:38:20.358Z] [1;32m     20[0m ens [38;5;241m=[39m EnsembleReader(run_name[38;5;241m=[39mconf_forecast[38;5;241m.[39mrun_name, paths[38;5;241m=[39mpaths_loop)
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:68[0m, in [0;36mEmulator.run[0;34m(self, overwrite)[0m
[2024-10-08T19:38:20.358Z] [1;32m     64[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39mworkdir [38;5;241m/[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mmodelname[38;5;132;01m}[39;00m[38;5;124m.rvi[39m[38;5;124m"[39m)[38;5;241m.[39mexists():
[2024-10-08T19:38:20.358Z] [1;32m     65[0m     [38;5;66;03m# FIXME: No attribute 'write_rv' on Emulator [attribute-error][39;00m
[2024-10-08T19:38:20.358Z] [1;32m     66[0m     [38;5;28mself[39m[38;5;241m.[39mwrite_rv(overwrite[38;5;241m=[39moverwrite)
[2024-10-08T19:38:20.358Z] [0;32m---> 68[0m [38;5;28mself[39m[38;5;241m.[39m_output_path [38;5;241m=[39m [43mrun[49m[43m([49m
[2024-10-08T19:38:20.358Z] [1;32m     69[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodelname[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mworkdir[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43moutput[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m
[2024-10-08T19:38:20.358Z] [1;32m     70[0m [43m[49m[43m)[49m
[2024-10-08T19:38:20.358Z] [1;32m     71[0m [38;5;28mself[39m[38;5;241m.[39m_output [38;5;241m=[39m OutputReader([38;5;28mself[39m[38;5;241m.[39mconfig[38;5;241m.[39mrun_name, path[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_output_path)
[2024-10-08T19:38:20.358Z] [1;32m     72[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_output
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/ravenpy.py:323[0m, in [0;36mrun[0;34m(modelname, configdir, outputdir, overwrite, verbose)[0m
[2024-10-08T19:38:20.358Z] [1;32m    320[0m         warn(msg, category[38;5;241m=[39mRavenWarning)
[2024-10-08T19:38:20.358Z] [1;32m    322[0m [38;5;28;01mif[39;00m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m]:
[2024-10-08T19:38:20.358Z] [0;32m--> 323[0m     [38;5;28;01mraise[39;00m RavenError(
[2024-10-08T19:38:20.358Z] [1;32m    324[0m         [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin([[38;5;124mf[39m[38;5;124m"[39m[38;5;124mConfig directory: [39m[38;5;132;01m{[39;00mconfigdir[38;5;132;01m}[39;00m[38;5;124m"[39m] [38;5;241m+[39m messages[[38;5;124m"[39m[38;5;124mERROR[39m[38;5;124m"[39m])
[2024-10-08T19:38:20.358Z] [1;32m    325[0m     )
[2024-10-08T19:38:20.358Z] [1;32m    327[0m [38;5;28;01mif[39;00m returncode [38;5;241m!=[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.358Z] [1;32m    328[0m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mRaven Error (code: [39m[38;5;132;01m{[39;00mreturncode[38;5;132;01m}[39;00m[38;5;124m): [39m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstdout[38;5;132;01m}[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00mstderr[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] [0;31mRavenError[0m: Config directory: /tmp/tmph2x051rm
[2024-10-08T19:38:20.358Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.358Z] CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 0 ______
[2024-10-08T19:38:20.358Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.358Z] [94mCell 0: Cell execution caused an exception
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] Input:
[2024-10-08T19:38:20.358Z] [0mimport os
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] from hsclient import HydroShare, Token
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] # Authentication method using username and password
[2024-10-08T19:38:20.358Z] """
[2024-10-08T19:38:20.358Z] username = 'XXXXX'
[2024-10-08T19:38:20.358Z] password = 'XXXXX'
[2024-10-08T19:38:20.358Z] hs = HydroShare(username=username, password=password)
[2024-10-08T19:38:20.358Z] """
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] client_id = os.environ.get("HYDROSHARE_AUTH_CLIENT_ID", "<your_client_id>")
[2024-10-08T19:38:20.358Z] access_token = os.environ.get("HYDROSHARE_AUTH_TOKEN", "<your_auth_token>")
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] token = Token(access_token=access_token, token_type="bearer")
[2024-10-08T19:38:20.358Z] hs = HydroShare(client_id=client_id, token=token)
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] [94mTraceback:[0m
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.358Z] [0;31mValidationError[0m                           Traceback (most recent call last)
[2024-10-08T19:38:20.358Z] Cell [0;32mIn[1], line 15[0m
[2024-10-08T19:38:20.358Z] [1;32m     12[0m client_id [38;5;241m=[39m os[38;5;241m.[39menviron[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mHYDROSHARE_AUTH_CLIENT_ID[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m<your_client_id>[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.358Z] [1;32m     13[0m access_token [38;5;241m=[39m os[38;5;241m.[39menviron[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mHYDROSHARE_AUTH_TOKEN[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m<your_auth_token>[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.358Z] [0;32m---> 15[0m token [38;5;241m=[39m [43mToken[49m[43m([49m[43maccess_token[49m[38;5;241;43m=[39;49m[43maccess_token[49m[43m,[49m[43m [49m[43mtoken_type[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mbearer[39;49m[38;5;124;43m"[39;49m[43m)[49m
[2024-10-08T19:38:20.358Z] [1;32m     16[0m hs [38;5;241m=[39m HydroShare(client_id[38;5;241m=[39mclient_id, token[38;5;241m=[39mtoken)
[2024-10-08T19:38:20.358Z] 
[2024-10-08T19:38:20.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/pydantic/main.py:176[0m, in [0;36mBaseModel.__init__[0;34m(self, **data)[0m
[2024-10-08T19:38:20.358Z] [1;32m    174[0m [38;5;66;03m# `__tracebackhide__` tells pytest and some other tools to omit this function from tracebacks[39;00m
[2024-10-08T19:38:20.358Z] [1;32m    175[0m __tracebackhide__ [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[2024-10-08T19:38:20.358Z] [0;32m--> 176[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m__pydantic_validator__[49m[38;5;241;43m.[39;49m[43mvalidate_python[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mself_instance[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m)[49m
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31mValidationError[0m: 4 validation errors for Token
[2024-10-08T19:38:20.359Z] scope
[2024-10-08T19:38:20.359Z]   Field required [type=missing, input_value={'access_token': '<your_a... 'token_type': 'bearer'}, input_type=dict]
[2024-10-08T19:38:20.359Z]     For further information visit https://errors.pydantic.dev/2.7/v/missing
[2024-10-08T19:38:20.359Z] state
[2024-10-08T19:38:20.359Z]   Field required [type=missing, input_value={'access_token': '<your_a... 'token_type': 'bearer'}, input_type=dict]
[2024-10-08T19:38:20.359Z]     For further information visit https://errors.pydantic.dev/2.7/v/missing
[2024-10-08T19:38:20.359Z] expires_in
[2024-10-08T19:38:20.359Z]   Field required [type=missing, input_value={'access_token': '<your_a... 'token_type': 'bearer'}, input_type=dict]
[2024-10-08T19:38:20.359Z]     For further information visit https://errors.pydantic.dev/2.7/v/missing
[2024-10-08T19:38:20.359Z] refresh_token
[2024-10-08T19:38:20.359Z]   Field required [type=missing, input_value={'access_token': '<your_a... 'token_type': 'bearer'}, input_type=dict]
[2024-10-08T19:38:20.359Z]     For further information visit https://errors.pydantic.dev/2.7/v/missing
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 1 ______
[2024-10-08T19:38:20.359Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.359Z] [94mCell 1: Cell execution caused an exception
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] Input:
[2024-10-08T19:38:20.359Z] [0mresults = hs.search(subject=["Harvey"])
[2024-10-08T19:38:20.359Z] for r in results:
[2024-10-08T19:38:20.359Z]     print(r.resource_title, ": ", r.resource_id)
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [94mTraceback:[0m
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.359Z] Cell [0;32mIn[1], line 1[0m
[2024-10-08T19:38:20.359Z] [0;32m----> 1[0m results [38;5;241m=[39m [43mhs[49m[38;5;241m.[39msearch(subject[38;5;241m=[39m[[38;5;124m"[39m[38;5;124mHarvey[39m[38;5;124m"[39m])
[2024-10-08T19:38:20.359Z] [1;32m      2[0m [38;5;28;01mfor[39;00m r [38;5;129;01min[39;00m results:
[2024-10-08T19:38:20.359Z] [1;32m      3[0m     [38;5;28mprint[39m(r[38;5;241m.[39mresource_title, [38;5;124m"[39m[38;5;124m: [39m[38;5;124m"[39m, r[38;5;241m.[39mresource_id)
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m: name 'hs' is not defined
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 2 ______
[2024-10-08T19:38:20.359Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.359Z] [94mCell 2: Cell execution caused an exception
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] Input:
[2024-10-08T19:38:20.359Z] [0mres = hs.resource("51d1539bf6e94b15ac33f7631228118c", validate=False)
[2024-10-08T19:38:20.359Z] res.files()
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [94mTraceback:[0m
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.359Z] Cell [0;32mIn[1], line 1[0m
[2024-10-08T19:38:20.359Z] [0;32m----> 1[0m res [38;5;241m=[39m [43mhs[49m[38;5;241m.[39mresource([38;5;124m"[39m[38;5;124m51d1539bf6e94b15ac33f7631228118c[39m[38;5;124m"[39m, validate[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[2024-10-08T19:38:20.359Z] [1;32m      2[0m res[38;5;241m.[39mfiles()
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m: name 'hs' is not defined
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 3 ______
[2024-10-08T19:38:20.359Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.359Z] [94mCell 3: Cell execution caused an exception
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] Input:
[2024-10-08T19:38:20.359Z] [0mres.file_download("USGS_Harvey_gages_TxLaMsAr.csv", save_path="/tmp")
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [94mTraceback:[0m
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.359Z] Cell [0;32mIn[1], line 1[0m
[2024-10-08T19:38:20.359Z] [0;32m----> 1[0m [43mres[49m[38;5;241m.[39mfile_download([38;5;124m"[39m[38;5;124mUSGS_Harvey_gages_TxLaMsAr.csv[39m[38;5;124m"[39m, save_path[38;5;241m=[39m[38;5;124m"[39m[38;5;124m/tmp[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] [0;31mNameError[0m: name 'res' is not defined
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 13 _
[2024-10-08T19:38:20.359Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.359Z] [94mCell 13: Cell execution caused an exception
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] Input:
[2024-10-08T19:38:20.359Z] [0m# Use xclim utilities (sbda) to give information on the type of window used for the bias correction.
[2024-10-08T19:38:20.359Z] group_month_window = sdba.utils.Grouper("time.dayofyear", window=15)
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] # This is an adjusting function. It builds the tool that will perform the corrections.
[2024-10-08T19:38:20.359Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.359Z]     ref=ERA5_weather.pr,
[2024-10-08T19:38:20.359Z]     hist=historical_pr,
[2024-10-08T19:38:20.359Z]     nquantiles=50,
[2024-10-08T19:38:20.359Z]     kind="+",
[2024-10-08T19:38:20.359Z]     group=group_month_window,
[2024-10-08T19:38:20.359Z] )
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.359Z] corrected_ref_precip = Adjustment.adjust(historical_pr, interp="linear")
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.359Z] corrected_fut_precip = Adjustment.adjust(future_pr, interp="linear")
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] # Ensure that the precipitation is non-negative, which can happen with some climate models
[2024-10-08T19:38:20.359Z] corrected_ref_precip = corrected_ref_precip.where(corrected_ref_precip > 0, 0)
[2024-10-08T19:38:20.359Z] corrected_fut_precip = corrected_fut_precip.where(corrected_fut_precip > 0, 0)
[2024-10-08T19:38:20.359Z] 
[2024-10-08T19:38:20.359Z] # Train the model to find the correction factors for the maximum temperature (tasmax) data
[2024-10-08T19:38:20.359Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.359Z]     ref=ERA5_weather.tmax,
[2024-10-08T19:38:20.359Z]     hist=historical_tasmax,
[2024-10-08T19:38:20.359Z]     nquantiles=50,
[2024-10-08T19:38:20.360Z]     kind="+",
[2024-10-08T19:38:20.360Z]     group=group_month_window,
[2024-10-08T19:38:20.360Z] )
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.360Z] corrected_ref_tasmax = Adjustment.adjust(historical_tasmax, interp="linear")
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.360Z] corrected_fut_tasmax = Adjustment.adjust(future_tasmax, interp="linear")
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] # Train the model to find the correction factors for the minimum temperature (tasmin) data
[2024-10-08T19:38:20.360Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-10-08T19:38:20.360Z]     ref=ERA5_weather.tmin,
[2024-10-08T19:38:20.360Z]     hist=historical_tasmin,
[2024-10-08T19:38:20.360Z]     nquantiles=50,
[2024-10-08T19:38:20.360Z]     kind="+",
[2024-10-08T19:38:20.360Z]     group=group_month_window,
[2024-10-08T19:38:20.360Z] )
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] # Apply the correction factors on the reference period
[2024-10-08T19:38:20.360Z] corrected_ref_tasmin = Adjustment.adjust(historical_tasmin, interp="linear")
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] # Apply the correction factors on the future period
[2024-10-08T19:38:20.360Z] corrected_fut_tasmin = Adjustment.adjust(future_tasmin, interp="linear")
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] [94mTraceback:[0m
[2024-10-08T19:38:20.360Z] 
[2024-10-08T19:38:20.360Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.360Z] [0;31mValueError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.360Z] Cell [0;32mIn[1], line 5[0m
[2024-10-08T19:38:20.360Z] [1;32m      2[0m group_month_window [38;5;241m=[39m sdba[38;5;241m.[39mutils[38;5;241m.[39mGrouper([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m, window[38;5;241m=[39m[38;5;241m15[39m)
[2024-10-08T19:38:20.360Z] [1;32m      4[0m [38;5;66;03m# This is an adjusting function. It builds the tool that will perform the corrections.[39;00m
[2024-10-08T19:38:20.360Z] [0;32m----> 5[0m Adjustment [38;5;241m=[39m [43msdba[49m[38;5;241;43m.[39;49m[43mDetrendedQuantileMapping[49m[38;5;241;43m.[39;49m[43mtrain[49m[43m([49m
[2024-10-08T19:38:20.364Z] [1;32m      6[0m [43m    [49m[43mref[49m[38;5;241;43m=[39;49m[43mERA5_weather[49m[38;5;241;43m.[39;49m[43mpr[49m[43m,[49m
[2024-10-08T19:38:20.364Z] [1;32m      7[0m [43m    [49m[43mhist[49m[38;5;241;43m=[39;49m[43mhistorical_pr[49m[43m,[49m
[2024-10-08T19:38:20.364Z] [1;32m      8[0m [43m    [49m[43mnquantiles[49m[38;5;241;43m=[39;49m[38;5;241;43m50[39;49m[43m,[49m
[2024-10-08T19:38:20.364Z] [1;32m      9[0m [43m    [49m[43mkind[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m+[39;49m[38;5;124;43m"[39;49m[43m,[49m
[2024-10-08T19:38:20.364Z] [1;32m     10[0m [43m    [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup_month_window[49m[43m,[49m
[2024-10-08T19:38:20.364Z] [1;32m     11[0m [43m)[49m
[2024-10-08T19:38:20.364Z] [1;32m     13[0m [38;5;66;03m# Apply the correction factors on the reference period[39;00m
[2024-10-08T19:38:20.364Z] [1;32m     14[0m corrected_ref_precip [38;5;241m=[39m Adjustment[38;5;241m.[39madjust(historical_pr, interp[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlinear[39m[38;5;124m"[39m)
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/adjustment.py:246[0m, in [0;36mTrainAdjust.train[0;34m(cls, ref, hist, **kwargs)[0m
[2024-10-08T19:38:20.365Z] [1;32m    243[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.365Z] [1;32m    244[0m     train_units [38;5;241m=[39m [38;5;124m"[39m[38;5;124m"[39m
[2024-10-08T19:38:20.365Z] [0;32m--> 246[0m ds, params [38;5;241m=[39m [38;5;28;43mcls[39;49m[38;5;241;43m.[39;49m[43m_train[49m[43m([49m[43mref[49m[43m,[49m[43m [49m[43mhist[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-10-08T19:38:20.365Z] [1;32m    247[0m obj [38;5;241m=[39m [38;5;28mcls[39m(
[2024-10-08T19:38:20.365Z] [1;32m    248[0m     _trained[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[2024-10-08T19:38:20.365Z] [1;32m    249[0m     hist_calendar[38;5;241m=[39mget_calendar(hist),
[2024-10-08T19:38:20.365Z] [1;32m    250[0m     train_units[38;5;241m=[39mtrain_units,
[2024-10-08T19:38:20.365Z] [1;32m    251[0m     [38;5;241m*[39m[38;5;241m*[39mparams,
[2024-10-08T19:38:20.365Z] [1;32m    252[0m )
[2024-10-08T19:38:20.365Z] [1;32m    253[0m obj[38;5;241m.[39mset_dataset(ds)
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/adjustment.py:553[0m, in [0;36mDetrendedQuantileMapping._train[0;34m(cls, ref, hist, nquantiles, kind, group, adapt_freq_thresh, jitter_under_thresh_value)[0m
[2024-10-08T19:38:20.365Z] [1;32m    550[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.365Z] [1;32m    551[0m     quantiles [38;5;241m=[39m nquantiles[38;5;241m.[39mastype(ref[38;5;241m.[39mdtype)
[2024-10-08T19:38:20.365Z] [0;32m--> 553[0m ds [38;5;241m=[39m [43mdqm_train[49m[43m([49m
[2024-10-08T19:38:20.365Z] [1;32m    554[0m [43m    [49m[43mxr[49m[38;5;241;43m.[39;49m[43mDataset[49m[43m([49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mref[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mref[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mhist[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mhist[49m[43m}[49m[43m)[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    555[0m [43m    [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    556[0m [43m    [49m[43mquantiles[49m[38;5;241;43m=[39;49m[43mquantiles[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    557[0m [43m    [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    558[0m [43m    [49m[43madapt_freq_thresh[49m[38;5;241;43m=[39;49m[43madapt_freq_thresh[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    559[0m [43m    [49m[43mjitter_under_thresh_value[49m[38;5;241;43m=[39;49m[43mjitter_under_thresh_value[49m[43m,[49m
[2024-10-08T19:38:20.365Z] [1;32m    560[0m [43m[49m[43m)[49m
[2024-10-08T19:38:20.365Z] [1;32m    562[0m ds[38;5;241m.[39maf[38;5;241m.[39mattrs[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.365Z] [1;32m    563[0m     standard_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mAdjustment factors[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.365Z] [1;32m    564[0m     long_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mQuantile mapping adjustment factors[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.365Z] [1;32m    565[0m )
[2024-10-08T19:38:20.365Z] [1;32m    566[0m ds[38;5;241m.[39mhist_q[38;5;241m.[39mattrs[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.365Z] [1;32m    567[0m     standard_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mModel quantiles[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.365Z] [1;32m    568[0m     long_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mQuantiles of model on the reference period[39m[38;5;124m"[39m,
[2024-10-08T19:38:20.365Z] [1;32m    569[0m )
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] File [0;32m<boltons.funcutils.FunctionBuilder-285>:2[0m, in [0;36m_map_blocks[0;34m(ds, **kwargs)[0m
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/base.py:484[0m, in [0;36mparse_group.<locals>._parse_group[0;34m(*f_args, **f_kwargs)[0m
[2024-10-08T19:38:20.365Z] [1;32m    481[0m [38;5;129m@wraps[39m(func)
[2024-10-08T19:38:20.365Z] [1;32m    482[0m [38;5;28;01mdef[39;00m [38;5;21m_parse_group[39m([38;5;241m*[39mf_args, [38;5;241m*[39m[38;5;241m*[39mf_kwargs):
[2024-10-08T19:38:20.365Z] [1;32m    483[0m     f_kwargs [38;5;241m=[39m _update_kwargs(f_kwargs, allowed[38;5;241m=[39mallow_only)
[2024-10-08T19:38:20.365Z] [0;32m--> 484[0m     [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43mf_args[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mf_kwargs[49m[43m)[49m
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/xclim/sdba/base.py:621[0m, in [0;36mmap_blocks.<locals>._decorator.<locals>._map_blocks[0;34m(ds, **kwargs)[0m
[2024-10-08T19:38:20.365Z] [1;32m    613[0m     badchunks[38;5;241m.[39mupdate(
[2024-10-08T19:38:20.365Z] [1;32m    614[0m         {
[2024-10-08T19:38:20.365Z] [1;32m    615[0m             dim: chunks[38;5;241m.[39mget(dim)
[2024-10-08T19:38:20.365Z] [0;32m   (...)[0m
[2024-10-08T19:38:20.365Z] [1;32m    618[0m         }
[2024-10-08T19:38:20.365Z] [1;32m    619[0m     )
[2024-10-08T19:38:20.365Z] [1;32m    620[0m     [38;5;28;01mif[39;00m badchunks:
[2024-10-08T19:38:20.365Z] [0;32m--> 621[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-10-08T19:38:20.365Z] [1;32m    622[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mThe dimension(s) over which we group, reduce or interpolate cannot be chunked ([39m[38;5;132;01m{[39;00mbadchunks[38;5;132;01m}[39;00m[38;5;124m).[39m[38;5;124m"[39m
[2024-10-08T19:38:20.365Z] [1;32m    623[0m         )
[2024-10-08T19:38:20.365Z] [1;32m    624[0m [38;5;28;01melse[39;00m:
[2024-10-08T19:38:20.365Z] [1;32m    625[0m     chunks [38;5;241m=[39m [38;5;28;01mNone[39;00m
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] [0;31mValueError[0m: The dimension(s) over which we group, reduce or interpolate cannot be chunked ({'time': (3653, 1, 3652, 1)}).
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 14 _
[2024-10-08T19:38:20.365Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.365Z] [94mCell 14: Cell execution caused an exception
[2024-10-08T19:38:20.365Z] 
[2024-10-08T19:38:20.365Z] Input:
[2024-10-08T19:38:20.365Z] [0m# Convert the reference corrected data into netCDF file. We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.
[2024-10-08T19:38:20.365Z] ref_dataset = xr.merge(
[2024-10-08T19:38:20.365Z]     [
[2024-10-08T19:38:20.365Z]         corrected_ref_precip.to_dataset(name="pr"),
[2024-10-08T19:38:20.366Z]         corrected_ref_tasmax.to_dataset(name="tasmax"),
[2024-10-08T19:38:20.366Z]         corrected_ref_tasmin.to_dataset(name="tasmin"),
[2024-10-08T19:38:20.366Z]     ]
[2024-10-08T19:38:20.366Z] )
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] # Write to temporary folder
[2024-10-08T19:38:20.366Z] fn_tmp_ref = tmp / "reference_dataset_tmp.nc"
[2024-10-08T19:38:20.366Z] ref_dataset.to_netcdf(fn_tmp_ref)
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] # Convert the future corrected data into netCDF file
[2024-10-08T19:38:20.366Z] fut_dataset = xr.merge(
[2024-10-08T19:38:20.366Z]     [
[2024-10-08T19:38:20.366Z]         corrected_fut_precip.to_dataset(name="pr"),
[2024-10-08T19:38:20.366Z]         corrected_fut_tasmax.to_dataset(name="tasmax"),
[2024-10-08T19:38:20.366Z]         corrected_fut_tasmin.to_dataset(name="tasmin"),
[2024-10-08T19:38:20.366Z]     ]
[2024-10-08T19:38:20.366Z] )
[2024-10-08T19:38:20.366Z] # Write to temporary folder
[2024-10-08T19:38:20.366Z] with ProgressBar():
[2024-10-08T19:38:20.366Z]     fn_tmp_fut = tmp / "future_dataset_tmp.nc"
[2024-10-08T19:38:20.366Z]     fut_dataset.to_netcdf(fn_tmp_fut)
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z]     # Write the data to disk to a temporary location for future use.
[2024-10-08T19:38:20.366Z]     ref_dataset = xr.open_dataset(fn_tmp_ref)
[2024-10-08T19:38:20.366Z]     ref_dataset.isel(geom=0).squeeze().to_netcdf(tmp / "reference_dataset.nc")
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z]     fut_dataset = xr.open_dataset(fn_tmp_fut)
[2024-10-08T19:38:20.366Z]     fut_dataset.isel(geom=0).squeeze().to_netcdf(tmp / "future_dataset.nc")
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] [94mTraceback:[0m
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.366Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.366Z] Cell [0;32mIn[1], line 4[0m
[2024-10-08T19:38:20.366Z] [1;32m      1[0m [38;5;66;03m# Convert the reference corrected data into netCDF file. We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.[39;00m
[2024-10-08T19:38:20.366Z] [1;32m      2[0m ref_dataset [38;5;241m=[39m xr[38;5;241m.[39mmerge(
[2024-10-08T19:38:20.366Z] [1;32m      3[0m     [
[2024-10-08T19:38:20.366Z] [0;32m----> 4[0m         [43mcorrected_ref_precip[49m[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mpr[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.366Z] [1;32m      5[0m         corrected_ref_tasmax[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmax[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.366Z] [1;32m      6[0m         corrected_ref_tasmin[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmin[39m[38;5;124m"[39m),
[2024-10-08T19:38:20.366Z] [1;32m      7[0m     ]
[2024-10-08T19:38:20.366Z] [1;32m      8[0m )
[2024-10-08T19:38:20.366Z] [1;32m     10[0m [38;5;66;03m# Write to temporary folder[39;00m
[2024-10-08T19:38:20.366Z] [1;32m     11[0m fn_tmp_ref [38;5;241m=[39m tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mreference_dataset_tmp.nc[39m[38;5;124m"[39m
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] [0;31mNameError[0m: name 'corrected_ref_precip' is not defined
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 18 _
[2024-10-08T19:38:20.366Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.366Z] [94mCell 18: Cell execution caused an exception
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] Input:
[2024-10-08T19:38:20.366Z] [0m# Setup a gauge for Raven to read-in the reference climate data, just like for ERA5
[2024-10-08T19:38:20.366Z] gauge_ref = [
[2024-10-08T19:38:20.366Z]     rc.Gauge.from_nc(
[2024-10-08T19:38:20.366Z]         tmp
[2024-10-08T19:38:20.366Z]         / "reference_dataset.nc",  # Path to the CMIP6 model reference data netcdf file
[2024-10-08T19:38:20.366Z]         data_type=data_type,
[2024-10-08T19:38:20.366Z]         alt_names=alt_names,
[2024-10-08T19:38:20.366Z]         data_kwds=data_kwds,
[2024-10-08T19:38:20.366Z]     )
[2024-10-08T19:38:20.366Z] ]
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] # Copy the configuration of the previous model that we will modify for our simulation on the reference period.
[2024-10-08T19:38:20.366Z] model_config_reference = model_validation.duplicate(
[2024-10-08T19:38:20.366Z]     Gauge=gauge_ref,
[2024-10-08T19:38:20.366Z]     StartDate=reference_start_day
[2024-10-08T19:38:20.366Z]     + dt.timedelta(days=1),  # Add a day here to account for the UTC lag in ERA5
[2024-10-08T19:38:20.366Z]     EndDate=reference_end_day,
[2024-10-08T19:38:20.366Z] )
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] # Run the model from the configuration and get the outputs.
[2024-10-08T19:38:20.366Z] ref_output = Emulator(config=model_config_reference).run()
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] # Plot the model output. Note that both simulations should have similar hydrological
[2024-10-08T19:38:20.366Z] # regime but day-to-day variability is not expected to match.
[2024-10-08T19:38:20.366Z] ref_output.hydrograph.q_sim.plot(color="blue", label="Reference period simulation")
[2024-10-08T19:38:20.366Z] ref_output.hydrograph.q_obs.plot(color="black", label="Observation")
[2024-10-08T19:38:20.366Z] plt.legend()
[2024-10-08T19:38:20.366Z] plt.title("Reference period")
[2024-10-08T19:38:20.366Z] plt.ylabel("Streamflow (m��/s)")
[2024-10-08T19:38:20.366Z] plt.grid()
[2024-10-08T19:38:20.366Z] plt.show()
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] [94mTraceback:[0m
[2024-10-08T19:38:20.366Z] 
[2024-10-08T19:38:20.366Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.366Z] [0;31mValueError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.366Z] Cell [0;32mIn[1], line 3[0m
[2024-10-08T19:38:20.366Z] [1;32m      1[0m [38;5;66;03m# Setup a gauge for Raven to read-in the reference climate data, just like for ERA5[39;00m
[2024-10-08T19:38:20.366Z] [1;32m      2[0m gauge_ref [38;5;241m=[39m [
[2024-10-08T19:38:20.366Z] [0;32m----> 3[0m     [43mrc[49m[38;5;241;43m.[39;49m[43mGauge[49m[38;5;241;43m.[39;49m[43mfrom_nc[49m[43m([49m
[2024-10-08T19:38:20.366Z] [1;32m      4[0m [43m        [49m[43mtmp[49m
[2024-10-08T19:38:20.366Z] [1;32m      5[0m [43m        [49m[38;5;241;43m/[39;49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mreference_dataset.nc[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# Path to the CMIP6 model reference data netcdf file[39;49;00m
[2024-10-08T19:38:20.366Z] [1;32m      6[0m [43m        [49m[43mdata_type[49m[38;5;241;43m=[39;49m[43mdata_type[49m[43m,[49m
[2024-10-08T19:38:20.366Z] [1;32m      7[0m [43m        [49m[43malt_names[49m[38;5;241;43m=[39;49m[43malt_names[49m[43m,[49m
[2024-10-08T19:38:20.366Z] [1;32m      8[0m [43m        [49m[43mdata_kwds[49m[38;5;241;43m=[39;49m[43mdata_kwds[49m[43m,[49m
[2024-10-08T19:38:20.366Z] [1;32m      9[0m [43m    [49m[43m)[49m
[2024-10-08T19:38:20.366Z] [1;32m     10[0m ]
[2024-10-08T19:38:20.366Z] [1;32m     12[0m [38;5;66;03m# Copy the configuration of the previous model that we will modify for our simulation on the reference period.[39;00m
[2024-10-08T19:38:20.366Z] [1;32m     13[0m model_config_reference [38;5;241m=[39m model_validation[38;5;241m.[39mduplicate(
[2024-10-08T19:38:20.366Z] [1;32m     14[0m     Gauge[38;5;241m=[39mgauge_ref,
[2024-10-08T19:38:20.366Z] [1;32m     15[0m     StartDate[38;5;241m=[39mreference_start_day
[2024-10-08T19:38:20.367Z] [1;32m     16[0m     [38;5;241m+[39m dt[38;5;241m.[39mtimedelta(days[38;5;241m=[39m[38;5;241m1[39m),  [38;5;66;03m# Add a day here to account for the UTC lag in ERA5[39;00m
[2024-10-08T19:38:20.367Z] [1;32m     17[0m     EndDate[38;5;241m=[39mreference_end_day,
[2024-10-08T19:38:20.367Z] [1;32m     18[0m )
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/config/commands.py:799[0m, in [0;36mGauge.from_nc[0;34m(cls, fn, data_type, station_idx, alt_names, mon_ave, data_kwds, engine, **kwds)[0m
[2024-10-08T19:38:20.367Z] [1;32m    796[0m     forcings[38;5;241m.[39mdifference_update(data)
[2024-10-08T19:38:20.367Z] [1;32m    798[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(data) [38;5;241m==[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.367Z] [0;32m--> 799[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-10-08T19:38:20.367Z] [1;32m    800[0m         [38;5;124m"[39m[38;5;124mNo data found in netCDF files. Check that variable names follow CF conventions, [39m[38;5;124m"[39m
[2024-10-08T19:38:20.367Z] [1;32m    801[0m         [38;5;124m"[39m[38;5;124mor if not, provide `alt_names` mapping Raven data types to variable names.[39m[38;5;124m"[39m
[2024-10-08T19:38:20.367Z] [1;32m    802[0m     )
[2024-10-08T19:38:20.367Z] [1;32m    804[0m [38;5;66;03m# Default Gauge name[39;00m
[2024-10-08T19:38:20.367Z] [1;32m    805[0m attrs[[38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m] [38;5;241m=[39m attrs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mGauge_[39m[38;5;132;01m{[39;00midx[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] [0;31mValueError[0m: No data found in netCDF files. Check that variable names follow CF conventions, or if not, provide `alt_names` mapping Raven data types to variable names.
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 19 _
[2024-10-08T19:38:20.367Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.367Z] [94mCell 19: Cell execution caused an exception
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] Input:
[2024-10-08T19:38:20.367Z] [0m# Setup a gauge for Raven to read-in the future climate data, just like for the reference data
[2024-10-08T19:38:20.367Z] gauge_fut = [
[2024-10-08T19:38:20.367Z]     rc.Gauge.from_nc(
[2024-10-08T19:38:20.367Z]         tmp / "future_dataset.nc",  # Path to the CMIP6 model reference data netcdf file
[2024-10-08T19:38:20.367Z]         data_type=data_type,
[2024-10-08T19:38:20.367Z]         alt_names=alt_names,
[2024-10-08T19:38:20.367Z]         data_kwds=data_kwds,
[2024-10-08T19:38:20.367Z]     )
[2024-10-08T19:38:20.367Z] ]
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] # Copy the configuration of the previous model that we will modify for our simulation on the reference period.
[2024-10-08T19:38:20.367Z] model_config_future = model_validation.duplicate(
[2024-10-08T19:38:20.367Z]     Gauge=gauge_fut,
[2024-10-08T19:38:20.367Z]     StartDate=future_start_day + dt.timedelta(days=1),
[2024-10-08T19:38:20.367Z]     EndDate=future_end_day,
[2024-10-08T19:38:20.367Z]     ObservationData=None,  # There are no observations for the future period.
[2024-10-08T19:38:20.367Z] )
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] # Run the model and get the outputs and hydrographs.
[2024-10-08T19:38:20.367Z] fut_output = Emulator(config=model_config_future).run()
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] # Plot the model output
[2024-10-08T19:38:20.367Z] fut_output.hydrograph.q_sim.plot(color="blue", label="Future simulation")
[2024-10-08T19:38:20.367Z] plt.legend()
[2024-10-08T19:38:20.367Z] plt.title("Future period")
[2024-10-08T19:38:20.367Z] plt.ylabel("Streamflow (m��/s)")
[2024-10-08T19:38:20.367Z] plt.grid()
[2024-10-08T19:38:20.367Z] plt.show()
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] [94mTraceback:[0m
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.367Z] [0;31mValueError[0m                                Traceback (most recent call last)
[2024-10-08T19:38:20.367Z] Cell [0;32mIn[1], line 3[0m
[2024-10-08T19:38:20.367Z] [1;32m      1[0m [38;5;66;03m# Setup a gauge for Raven to read-in the future climate data, just like for the reference data[39;00m
[2024-10-08T19:38:20.367Z] [1;32m      2[0m gauge_fut [38;5;241m=[39m [
[2024-10-08T19:38:20.367Z] [0;32m----> 3[0m     [43mrc[49m[38;5;241;43m.[39;49m[43mGauge[49m[38;5;241;43m.[39;49m[43mfrom_nc[49m[43m([49m
[2024-10-08T19:38:20.367Z] [1;32m      4[0m [43m        [49m[43mtmp[49m[43m [49m[38;5;241;43m/[39;49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mfuture_dataset.nc[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# Path to the CMIP6 model reference data netcdf file[39;49;00m
[2024-10-08T19:38:20.367Z] [1;32m      5[0m [43m        [49m[43mdata_type[49m[38;5;241;43m=[39;49m[43mdata_type[49m[43m,[49m
[2024-10-08T19:38:20.367Z] [1;32m      6[0m [43m        [49m[43malt_names[49m[38;5;241;43m=[39;49m[43malt_names[49m[43m,[49m
[2024-10-08T19:38:20.367Z] [1;32m      7[0m [43m        [49m[43mdata_kwds[49m[38;5;241;43m=[39;49m[43mdata_kwds[49m[43m,[49m
[2024-10-08T19:38:20.367Z] [1;32m      8[0m [43m    [49m[43m)[49m
[2024-10-08T19:38:20.367Z] [1;32m      9[0m ]
[2024-10-08T19:38:20.367Z] [1;32m     11[0m [38;5;66;03m# Copy the configuration of the previous model that we will modify for our simulation on the reference period.[39;00m
[2024-10-08T19:38:20.367Z] [1;32m     12[0m model_config_future [38;5;241m=[39m model_validation[38;5;241m.[39mduplicate(
[2024-10-08T19:38:20.367Z] [1;32m     13[0m     Gauge[38;5;241m=[39mgauge_fut,
[2024-10-08T19:38:20.367Z] [1;32m     14[0m     StartDate[38;5;241m=[39mfuture_start_day [38;5;241m+[39m dt[38;5;241m.[39mtimedelta(days[38;5;241m=[39m[38;5;241m1[39m),
[2024-10-08T19:38:20.367Z] [1;32m     15[0m     EndDate[38;5;241m=[39mfuture_end_day,
[2024-10-08T19:38:20.367Z] [1;32m     16[0m     ObservationData[38;5;241m=[39m[38;5;28;01mNone[39;00m,  [38;5;66;03m# There are no observations for the future period.[39;00m
[2024-10-08T19:38:20.367Z] [1;32m     17[0m )
[2024-10-08T19:38:20.367Z] 
[2024-10-08T19:38:20.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/ravenpy/config/commands.py:799[0m, in [0;36mGauge.from_nc[0;34m(cls, fn, data_type, station_idx, alt_names, mon_ave, data_kwds, engine, **kwds)[0m
[2024-10-08T19:38:20.367Z] [1;32m    796[0m     forcings[38;5;241m.[39mdifference_update(data)
[2024-10-08T19:38:20.367Z] [1;32m    798[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(data) [38;5;241m==[39m [38;5;241m0[39m:
[2024-10-08T19:38:20.367Z] [0;32m--> 799[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-10-08T19:38:20.367Z] [1;32m    800[0m         [38;5;124m"[39m[38;5;124mNo data found in netCDF files. Check that variable names follow CF conventions, [39m[38;5;124m"[39m
[2024-10-08T19:38:20.367Z] [1;32m    801[0m         [38;5;124m"[39m[38;5;124mor if not, provide `alt_names` mapping Raven data types to variable names.[39m[38;5;124m"[39m
[2024-10-08T19:38:20.367Z] [1;32m    802[0m     )
[2024-10-08T19:38:20.368Z] [1;32m    804[0m [38;5;66;03m# Default Gauge name[39;00m
[2024-10-08T19:38:20.368Z] [1;32m    805[0m attrs[[38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m] [38;5;241m=[39m attrs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mGauge_[39m[38;5;132;01m{[39;00midx[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] [0;31mValueError[0m: No data found in netCDF files. Check that variable names follow CF conventions, or if not, provide `alt_names` mapping Raven data types to variable names.
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 20 _
[2024-10-08T19:38:20.368Z] [91mNotebook cell execution failed[0m
[2024-10-08T19:38:20.368Z] [94mCell 20: Cell execution caused an exception
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] Input:
[2024-10-08T19:38:20.368Z] [0m# Extract the mean annual hydrograph for each simulation.
[2024-10-08T19:38:20.368Z] observed_flows = ref_output.hydrograph.q_obs.groupby("time.dayofyear").mean()
[2024-10-08T19:38:20.368Z] simulated_flows = sim_output.hydrograph.q_obs.groupby("time.dayofyear").mean()
[2024-10-08T19:38:20.368Z] reference_flows = ref_output.hydrograph.q_sim.groupby("time.dayofyear").mean()
[2024-10-08T19:38:20.368Z] future_flows = fut_output.hydrograph.q_sim.groupby("time.dayofyear").mean()
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] # Plot the model output
[2024-10-08T19:38:20.368Z] observed_flows.plot(color="black", label="Observation", x="dayofyear")
[2024-10-08T19:38:20.368Z] simulated_flows.plot(color="green", label="Simulation", x="dayofyear")
[2024-10-08T19:38:20.368Z] reference_flows.plot(color="blue", label="Reference", x="dayofyear")
[2024-10-08T19:38:20.368Z] future_flows.plot(color="red", label="Future", x="dayofyear")
[2024-10-08T19:38:20.368Z] plt.legend()
[2024-10-08T19:38:20.368Z] plt.ylabel("Streamflow (m��/s)")
[2024-10-08T19:38:20.368Z] plt.xlabel("Day of year")
[2024-10-08T19:38:20.368Z] plt.xlim([0, 365])
[2024-10-08T19:38:20.368Z] plt.title("Comparison of mean annual hydrographs")
[2024-10-08T19:38:20.368Z] plt.grid()
[2024-10-08T19:38:20.368Z] plt.show()
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] [94mTraceback:[0m
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] [0;31m---------------------------------------------------------------------------[0m
[2024-10-08T19:38:20.368Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-10-08T19:38:20.368Z] Cell [0;32mIn[1], line 2[0m
[2024-10-08T19:38:20.368Z] [1;32m      1[0m [38;5;66;03m# Extract the mean annual hydrograph for each simulation.[39;00m
[2024-10-08T19:38:20.368Z] [0;32m----> 2[0m observed_flows [38;5;241m=[39m [43mref_output[49m[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-10-08T19:38:20.368Z] [1;32m      3[0m simulated_flows [38;5;241m=[39m sim_output[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-10-08T19:38:20.368Z] [1;32m      4[0m reference_flows [38;5;241m=[39m ref_output[38;5;241m.[39mhydrograph[38;5;241m.[39mq_sim[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] [0;31mNameError[0m: name 'ref_output' is not defined
[2024-10-08T19:38:20.368Z] 
[2024-10-08T19:38:20.368Z] =========================== short test summary info ============================
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 13
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 14
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 15
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 2
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 3
[2024-10-08T19:38:20.368Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 4
[2024-10-08T19:38:20.373Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 5
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 6
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb::Cell 7
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 0
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 1
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 2
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 3
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 13
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 14
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 18
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 19
[2024-10-08T19:38:20.374Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 20
[2024-10-08T19:38:20.374Z] ================== 18 failed, 225 passed in 668.86s (0:11:08) ==================
[2024-10-08T19:38:20.374Z] + EXIT_CODE=1
[2024-10-08T19:38:20.374Z] + echo true
[2024-10-08T19:38:20.374Z] + tr [:upper:] [:lower:]
[2024-10-08T19:38:20.374Z] + SAVE_RESULTING_NOTEBOOK=true
[2024-10-08T19:38:20.374Z] + [ xtrue = xtrue ]
[2024-10-08T19:38:20.374Z] + mkdir -p buildout
[2024-10-08T19:38:20.374Z] + basename raven-main/docs/source/notebooks/Region_selection.ipynb
[2024-10-08T19:38:20.374Z] + filename=Region_selection.ipynb
[2024-10-08T19:38:20.374Z] + echo Region_selection.ipynb
[2024-10-08T19:38:20.374Z] + sed s/.ipynb$//
[2024-10-08T19:38:20.374Z] + filename=Region_selection
[2024-10-08T19:38:20.374Z] + [ -e buildout/Region_selection.output.ipynb ]
[2024-10-08T19:38:20.374Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Region_selection.output.ipynb raven-main/docs/source/notebooks/Region_selection.ipynb
[2024-10-08T19:38:21.735Z] [NbConvertApp] Converting notebook raven-main/docs/source/notebooks/Region_selection.ipynb to notebook
[2024-10-08T19:38:33.901Z] [NbConvertApp] Writing 107224 bytes to buildout/Region_selection.output.ipynb
[2024-10-08T19:38:33.901Z] + basename raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb
[2024-10-08T19:38:33.901Z] + filename=Subset_climate_data_over_watershed.ipynb
[2024-10-08T19:38:33.901Z] + echo Subset_climate_data_over_watershed.ipynb
[2024-10-08T19:38:33.901Z] + sed s/.ipynb$//
[2024-10-08T19:38:33.901Z] + filename=Subset_climate_data_over_watershed
[2024-10-08T19:38:33.901Z] + [ -e buildout/Subset_climate_data_over_watershed.output.ipynb ]
[2024-10-08T19:38:33.901Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Subset_climate_data_over_watershed.output.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb
[2024-10-08T19:38:35.269Z] [NbConvertApp] Converting notebook raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb to notebook
[2024-10-08T19:38:53.357Z] [NbConvertApp] Writing 95138 bytes to buildout/Subset_climate_data_over_watershed.output.ipynb
[2024-10-08T19:38:53.357Z] + basename RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb
[2024-10-08T19:38:53.357Z] + filename=00_Introduction_to_JupyterLab.ipynb
[2024-10-08T19:38:53.357Z] + echo 00_Introduction_to_JupyterLab.ipynb
[2024-10-08T19:38:53.357Z] + sed s/.ipynb$//
[2024-10-08T19:38:53.357Z] + filename=00_Introduction_to_JupyterLab
[2024-10-08T19:38:53.357Z] + [ -e buildout/00_Introduction_to_JupyterLab.output.ipynb ]
[2024-10-08T19:38:53.357Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 00_Introduction_to_JupyterLab.output.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb
[2024-10-08T19:38:53.357Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb to notebook
[2024-10-08T19:38:55.245Z] [NbConvertApp] Writing 13180 bytes to buildout/00_Introduction_to_JupyterLab.output.ipynb
[2024-10-08T19:38:55.245Z] + basename RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb
[2024-10-08T19:38:55.245Z] + filename=01_Getting_watershed_boundaries.ipynb
[2024-10-08T19:38:55.245Z] + echo 01_Getting_watershed_boundaries.ipynb
[2024-10-08T19:38:55.245Z] + sed s/.ipynb$//
[2024-10-08T19:38:55.245Z] + filename=01_Getting_watershed_boundaries
[2024-10-08T19:38:55.245Z] + [ -e buildout/01_Getting_watershed_boundaries.output.ipynb ]
[2024-10-08T19:38:55.245Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 01_Getting_watershed_boundaries.output.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb
[2024-10-08T19:38:56.608Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb to notebook
[2024-10-08T19:39:08.763Z] [NbConvertApp] Writing 109427 bytes to buildout/01_Getting_watershed_boundaries.output.ipynb
[2024-10-08T19:39:08.763Z] + basename RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb
[2024-10-08T19:39:08.763Z] + filename=02_Extract_geographical_watershed_properties.ipynb
[2024-10-08T19:39:08.763Z] + echo 02_Extract_geographical_watershed_properties.ipynb
[2024-10-08T19:39:08.763Z] + sed s/.ipynb$//
[2024-10-08T19:39:08.763Z] + filename=02_Extract_geographical_watershed_properties
[2024-10-08T19:39:08.763Z] + [ -e buildout/02_Extract_geographical_watershed_properties.output.ipynb ]
[2024-10-08T19:39:08.763Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 02_Extract_geographical_watershed_properties.output.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb
[2024-10-08T19:39:10.131Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb to notebook
[2024-10-08T19:39:24.972Z] [NbConvertApp] Writing 279632 bytes to buildout/02_Extract_geographical_watershed_properties.output.ipynb
[2024-10-08T19:39:24.972Z] + basename RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb
[2024-10-08T19:39:24.972Z] + filename=03_Extracting_forcing_data.ipynb
[2024-10-08T19:39:24.972Z] + echo 03_Extracting_forcing_data.ipynb
[2024-10-08T19:39:24.972Z] + sed s/.ipynb$//
[2024-10-08T19:39:24.972Z] + filename=03_Extracting_forcing_data
[2024-10-08T19:39:24.972Z] + [ -e buildout/03_Extracting_forcing_data.output.ipynb ]
[2024-10-08T19:39:24.972Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 03_Extracting_forcing_data.output.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb
[2024-10-08T19:39:25.537Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb to notebook
[2024-10-08T19:40:46.894Z] [NbConvertApp] Writing 107514 bytes to buildout/03_Extracting_forcing_data.output.ipynb
[2024-10-08T19:40:46.894Z] + basename RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb
[2024-10-08T19:40:46.894Z] + filename=04_Emulating_hydrological_models.ipynb
[2024-10-08T19:40:46.894Z] + echo 04_Emulating_hydrological_models.ipynb
[2024-10-08T19:40:46.894Z] + sed s/.ipynb$//
[2024-10-08T19:40:46.894Z] + filename=04_Emulating_hydrological_models
[2024-10-08T19:40:46.894Z] + [ -e buildout/04_Emulating_hydrological_models.output.ipynb ]
[2024-10-08T19:40:46.894Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 04_Emulating_hydrological_models.output.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb
[2024-10-08T19:40:47.821Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb to notebook
[2024-10-08T19:41:02.653Z] [NbConvertApp] Writing 391847 bytes to buildout/04_Emulating_hydrological_models.output.ipynb
[2024-10-08T19:41:02.653Z] + basename RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb
[2024-10-08T19:41:02.653Z] + filename=05_Advanced_RavenPy_configuration.ipynb
[2024-10-08T19:41:02.653Z] + echo 05_Advanced_RavenPy_configuration.ipynb
[2024-10-08T19:41:02.653Z] + sed s/.ipynb$//
[2024-10-08T19:41:02.653Z] + filename=05_Advanced_RavenPy_configuration
[2024-10-08T19:41:02.653Z] + [ -e buildout/05_Advanced_RavenPy_configuration.output.ipynb ]
[2024-10-08T19:41:02.653Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 05_Advanced_RavenPy_configuration.output.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb
[2024-10-08T19:41:03.266Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb to notebook
[2024-10-08T19:41:21.307Z] [NbConvertApp] Writing 305132 bytes to buildout/05_Advanced_RavenPy_configuration.output.ipynb
[2024-10-08T19:41:21.308Z] + basename RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb
[2024-10-08T19:41:21.308Z] + filename=06_Raven_calibration.ipynb
[2024-10-08T19:41:21.308Z] + echo 06_Raven_calibration.ipynb
[2024-10-08T19:41:21.308Z] + sed s/.ipynb$//
[2024-10-08T19:41:21.308Z] + filename=06_Raven_calibration
[2024-10-08T19:41:21.308Z] + [ -e buildout/06_Raven_calibration.output.ipynb ]
[2024-10-08T19:41:21.308Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 06_Raven_calibration.output.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb
[2024-10-08T19:41:21.308Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb to notebook
[2024-10-08T19:41:33.472Z] [NbConvertApp] Writing 18801 bytes to buildout/06_Raven_calibration.output.ipynb
[2024-10-08T19:41:33.472Z] + basename RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb
[2024-10-08T19:41:33.472Z] + filename=07_Making_and_using_hotstart_files.ipynb
[2024-10-08T19:41:33.472Z] + echo 07_Making_and_using_hotstart_files.ipynb
[2024-10-08T19:41:33.472Z] + sed s/.ipynb$//
[2024-10-08T19:41:33.472Z] + filename=07_Making_and_using_hotstart_files
[2024-10-08T19:41:33.472Z] + [ -e buildout/07_Making_and_using_hotstart_files.output.ipynb ]
[2024-10-08T19:41:33.472Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 07_Making_and_using_hotstart_files.output.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb
[2024-10-08T19:41:34.835Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb to notebook
[2024-10-08T19:41:47.002Z] [NbConvertApp] Writing 193893 bytes to buildout/07_Making_and_using_hotstart_files.output.ipynb
[2024-10-08T19:41:47.002Z] + basename RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-10-08T19:41:47.002Z] + filename=08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-10-08T19:41:47.002Z] + sed s/.ipynb$//
[2024-10-08T19:41:47.002Z] + echo 08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-10-08T19:41:47.002Z] + filename=08_Getting_and_bias_correcting_CMIP6_data
[2024-10-08T19:41:47.002Z] + [ -e buildout/08_Getting_and_bias_correcting_CMIP6_data.output.ipynb ]
[2024-10-08T19:41:47.002Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 08_Getting_and_bias_correcting_CMIP6_data.output.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-10-08T19:41:47.002Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb to notebook
[2024-10-08T19:43:23.365Z] [NbConvertApp] Writing 213013 bytes to buildout/08_Getting_and_bias_correcting_CMIP6_data.output.ipynb
[2024-10-08T19:43:23.365Z] + basename RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb
[2024-10-08T19:43:23.365Z] + filename=09_Hydrological_impacts_of_climate_change.ipynb
[2024-10-08T19:43:23.365Z] + echo 09_Hydrological_impacts_of_climate_change.ipynb
[2024-10-08T19:43:23.365Z] + sed s/.ipynb$//
[2024-10-08T19:43:23.366Z] + filename=09_Hydrological_impacts_of_climate_change
[2024-10-08T19:43:23.366Z] + [ -e buildout/09_Hydrological_impacts_of_climate_change.output.ipynb ]
[2024-10-08T19:43:23.366Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 09_Hydrological_impacts_of_climate_change.output.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb
[2024-10-08T19:43:23.366Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb to notebook
[2024-10-08T19:43:25.252Z] [NbConvertApp] Writing 124023 bytes to buildout/09_Hydrological_impacts_of_climate_change.output.ipynb
[2024-10-08T19:43:25.513Z] + basename RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb
[2024-10-08T19:43:25.513Z] + filename=10_Data_assimilation.ipynb
[2024-10-08T19:43:25.513Z] + echo 10_Data_assimilation.ipynb
[2024-10-08T19:43:25.513Z] + sed s/.ipynb$//
[2024-10-08T19:43:25.513Z] + filename=10_Data_assimilation
[2024-10-08T19:43:25.513Z] + [ -e buildout/10_Data_assimilation.output.ipynb ]
[2024-10-08T19:43:25.513Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 10_Data_assimilation.output.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb
[2024-10-08T19:43:26.884Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb to notebook
[2024-10-08T19:43:34.967Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:34.968Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:34.968Z] ERROR    : Errors found in input data. See Raven_errors.txt for details
[2024-10-08T19:43:34.968Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:34.968Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:34.968Z] ERROR    : Errors found in input data. See Raven_errors.txt for details
[2024-10-08T19:43:35.528Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:35.528Z] ERROR    : CModel::AddForcingPerturbation: only PRECIP, RAINFALL, SNOWFALL, and TEMP_AVE are supported for forcing perturbation.
[2024-10-08T19:43:35.528Z] ERROR    : Errors found in input data. See Raven_errors.txt for details
[2024-10-08T19:43:36.899Z] [NbConvertApp] Writing 91933 bytes to buildout/10_Data_assimilation.output.ipynb
[2024-10-08T19:43:37.160Z] + basename RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb
[2024-10-08T19:43:37.160Z] + filename=11_Climatological_ESP_forecasting.ipynb
[2024-10-08T19:43:37.160Z] + echo 11_Climatological_ESP_forecasting.ipynb
[2024-10-08T19:43:37.160Z] + sed s/.ipynb$//
[2024-10-08T19:43:37.160Z] + filename=11_Climatological_ESP_forecasting
[2024-10-08T19:43:37.160Z] + [ -e buildout/11_Climatological_ESP_forecasting.output.ipynb ]
[2024-10-08T19:43:37.160Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 11_Climatological_ESP_forecasting.output.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb
[2024-10-08T19:43:38.521Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb to notebook
[2024-10-08T19:44:25.127Z] [NbConvertApp] Writing 175572 bytes to buildout/11_Climatological_ESP_forecasting.output.ipynb
[2024-10-08T19:44:25.127Z] + basename RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb
[2024-10-08T19:44:25.127Z] + filename=12_Performing_hindcasting_experiments.ipynb
[2024-10-08T19:44:25.127Z] + echo 12_Performing_hindcasting_experiments.ipynb
[2024-10-08T19:44:25.127Z] + sed s/.ipynb$//
[2024-10-08T19:44:25.127Z] + filename=12_Performing_hindcasting_experiments
[2024-10-08T19:44:25.127Z] + [ -e buildout/12_Performing_hindcasting_experiments.output.ipynb ]
[2024-10-08T19:44:25.127Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output 12_Performing_hindcasting_experiments.output.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb
[2024-10-08T19:44:25.127Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb to notebook
[2024-10-08T19:44:57.166Z] [NbConvertApp] Writing 148440 bytes to buildout/12_Performing_hindcasting_experiments.output.ipynb
[2024-10-08T19:44:57.166Z] + basename RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb
[2024-10-08T19:44:57.166Z] + filename=Assess_probabilistic_flood_risk.ipynb
[2024-10-08T19:44:57.166Z] + echo Assess_probabilistic_flood_risk.ipynb
[2024-10-08T19:44:57.166Z] + sed s/.ipynb$//
[2024-10-08T19:44:57.166Z] + filename=Assess_probabilistic_flood_risk
[2024-10-08T19:44:57.166Z] + [ -e buildout/Assess_probabilistic_flood_risk.output.ipynb ]
[2024-10-08T19:44:57.166Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Assess_probabilistic_flood_risk.output.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb
[2024-10-08T19:44:57.166Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb to notebook
[2024-10-08T19:45:35.838Z] [NbConvertApp] Writing 158630 bytes to buildout/Assess_probabilistic_flood_risk.output.ipynb
[2024-10-08T19:45:35.838Z] + basename RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-10-08T19:45:35.838Z] + filename=Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-10-08T19:45:35.838Z] + echo Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-10-08T19:45:35.838Z] + sed s/.ipynb$//
[2024-10-08T19:45:35.838Z] + filename=Comparing_hindcasts_and_ESP_forecasts
[2024-10-08T19:45:35.838Z] + [ -e buildout/Comparing_hindcasts_and_ESP_forecasts.output.ipynb ]
[2024-10-08T19:45:35.838Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Comparing_hindcasts_and_ESP_forecasts.output.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-10-08T19:45:35.838Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb to notebook
[2024-10-08T19:46:14.504Z] [NbConvertApp] Writing 302616 bytes to buildout/Comparing_hindcasts_and_ESP_forecasts.output.ipynb
[2024-10-08T19:46:14.504Z] + basename RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb
[2024-10-08T19:46:14.504Z] + filename=Distributed_hydrological_modelling.ipynb
[2024-10-08T19:46:14.504Z] + echo Distributed_hydrological_modelling.ipynb
[2024-10-08T19:46:14.504Z] + sed s/.ipynb$//
[2024-10-08T19:46:14.504Z] + filename=Distributed_hydrological_modelling
[2024-10-08T19:46:14.504Z] + [ -e buildout/Distributed_hydrological_modelling.output.ipynb ]
[2024-10-08T19:46:14.504Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Distributed_hydrological_modelling.output.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb
[2024-10-08T19:46:14.504Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb to notebook
[2024-10-08T19:46:41.026Z] [NbConvertApp] Writing 100929 bytes to buildout/Distributed_hydrological_modelling.output.ipynb
[2024-10-08T19:46:41.026Z] + basename RavenPy-master/docs/notebooks/HydroShare_integration.ipynb
[2024-10-08T19:46:41.026Z] + filename=HydroShare_integration.ipynb
[2024-10-08T19:46:41.026Z] + echo HydroShare_integration.ipynb
[2024-10-08T19:46:41.026Z] + sed s/.ipynb$//
[2024-10-08T19:46:41.026Z] + filename=HydroShare_integration
[2024-10-08T19:46:41.026Z] + [ -e buildout/HydroShare_integration.output.ipynb ]
[2024-10-08T19:46:41.026Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output HydroShare_integration.output.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb
[2024-10-08T19:46:41.026Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/HydroShare_integration.ipynb to notebook
[2024-10-08T19:46:45.196Z] [NbConvertApp] Writing 11584 bytes to buildout/HydroShare_integration.output.ipynb
[2024-10-08T19:46:45.196Z] + basename RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb
[2024-10-08T19:46:45.196Z] + filename=Hydrological_realtime_forecasting.ipynb
[2024-10-08T19:46:45.196Z] + echo Hydrological_realtime_forecasting.ipynb
[2024-10-08T19:46:45.196Z] + sed s/.ipynb$//
[2024-10-08T19:46:45.196Z] + filename=Hydrological_realtime_forecasting
[2024-10-08T19:46:45.196Z] + [ -e buildout/Hydrological_realtime_forecasting.output.ipynb ]
[2024-10-08T19:46:45.196Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Hydrological_realtime_forecasting.output.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb
[2024-10-08T19:46:46.132Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb to notebook
[2024-10-08T19:47:18.184Z] [NbConvertApp] Writing 147442 bytes to buildout/Hydrological_realtime_forecasting.output.ipynb
[2024-10-08T19:47:18.185Z] + basename RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb
[2024-10-08T19:47:18.185Z] + filename=Managing_Jupyter_Environments.ipynb
[2024-10-08T19:47:18.185Z] + echo Managing_Jupyter_Environments.ipynb
[2024-10-08T19:47:18.185Z] + sed s/.ipynb$//
[2024-10-08T19:47:18.185Z] + filename=Managing_Jupyter_Environments
[2024-10-08T19:47:18.185Z] + [ -e buildout/Managing_Jupyter_Environments.output.ipynb ]
[2024-10-08T19:47:18.185Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Managing_Jupyter_Environments.output.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb
[2024-10-08T19:47:18.185Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb to notebook
[2024-10-08T19:47:23.427Z] [NbConvertApp] Writing 17753 bytes to buildout/Managing_Jupyter_Environments.output.ipynb
[2024-10-08T19:47:23.427Z] + basename RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb
[2024-10-08T19:47:23.427Z] + filename=Perform_Regionalization.ipynb
[2024-10-08T19:47:23.427Z] + echo Perform_Regionalization.ipynb
[2024-10-08T19:47:23.427Z] + sed s/.ipynb$//
[2024-10-08T19:47:23.427Z] + filename=Perform_Regionalization
[2024-10-08T19:47:23.427Z] + [ -e buildout/Perform_Regionalization.output.ipynb ]
[2024-10-08T19:47:23.427Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Perform_Regionalization.output.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb
[2024-10-08T19:47:24.794Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb to notebook
[2024-10-08T19:47:51.287Z] [NbConvertApp] Writing 119348 bytes to buildout/Perform_Regionalization.output.ipynb
[2024-10-08T19:47:51.287Z] + basename RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-10-08T19:47:51.287Z] + filename=Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-10-08T19:47:51.287Z] + echo Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-10-08T19:47:51.287Z] + sed s/.ipynb$//
[2024-10-08T19:47:51.287Z] + filename=Running_HMETS_with_CANOPEX_dataset
[2024-10-08T19:47:51.287Z] + [ -e buildout/Running_HMETS_with_CANOPEX_dataset.output.ipynb ]
[2024-10-08T19:47:51.287Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Running_HMETS_with_CANOPEX_dataset.output.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-10-08T19:47:52.661Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb to notebook
[2024-10-08T19:48:07.502Z] [NbConvertApp] Writing 102755 bytes to buildout/Running_HMETS_with_CANOPEX_dataset.output.ipynb
[2024-10-08T19:48:07.502Z] + basename RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb
[2024-10-08T19:48:07.502Z] + filename=Sensitivity_analysis.ipynb
[2024-10-08T19:48:07.502Z] + echo Sensitivity_analysis.ipynb
[2024-10-08T19:48:07.502Z] + sed s/.ipynb$//
[2024-10-08T19:48:07.502Z] + filename=Sensitivity_analysis
[2024-10-08T19:48:07.502Z] + [ -e buildout/Sensitivity_analysis.output.ipynb ]
[2024-10-08T19:48:07.502Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Sensitivity_analysis.output.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb
[2024-10-08T19:48:09.421Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb to notebook
[2024-10-08T19:48:27.452Z] [NbConvertApp] Writing 28206 bytes to buildout/Sensitivity_analysis.output.ipynb
[2024-10-08T19:48:27.452Z] + basename RavenPy-master/docs/notebooks/time_series_analysis.ipynb
[2024-10-08T19:48:27.452Z] + filename=time_series_analysis.ipynb
[2024-10-08T19:48:27.452Z] + echo time_series_analysis.ipynb
[2024-10-08T19:48:27.452Z] + sed s/.ipynb$//
[2024-10-08T19:48:27.452Z] + filename=time_series_analysis
[2024-10-08T19:48:27.452Z] + [ -e buildout/time_series_analysis.output.ipynb ]
[2024-10-08T19:48:27.452Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output time_series_analysis.output.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb
[2024-10-08T19:48:28.824Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/time_series_analysis.ipynb to notebook
[2024-10-08T19:48:38.766Z] [NbConvertApp] Writing 187488 bytes to buildout/time_series_analysis.output.ipynb
[2024-10-08T19:48:38.766Z] + basename RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-10-08T19:48:38.766Z] + filename=Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-10-08T19:48:38.766Z] + echo Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-10-08T19:48:38.766Z] + sed s/.ipynb$//
[2024-10-08T19:48:38.766Z] + filename=Perform_a_climate_change_impact_study_on_a_watershed
[2024-10-08T19:48:38.766Z] + [ -e buildout/Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb ]
[2024-10-08T19:48:38.766Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=240 --allow-errors --output-dir buildout --output Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-10-08T19:48:39.326Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb to notebook
[2024-10-08T19:50:30.692Z] [NbConvertApp] Writing 168102 bytes to buildout/Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb
[2024-10-08T19:50:30.692Z] + exit 1
[2024-10-08T19:50:30.692Z] + EXIT_CODE=1
[2024-10-08T19:50:30.692Z] + ENV_DUMP_DIR=buildout/env-dump
[2024-10-08T19:50:30.692Z] + mkdir -p buildout/env-dump
[2024-10-08T19:50:30.692Z] + ENV_EXPORT_FILE=buildout/env-dump/environment-export-birdy.yml
[2024-10-08T19:50:30.692Z] + rm -fv buildout/env-dump/environment-export-birdy.yml
[2024-10-08T19:50:30.692Z] + conda env export -n birdy
[2024-10-08T19:50:38.774Z] /opt/conda/lib/python3.12/site-packages/conda/base/context.py:982: FutureWarning: Adding 'defaults' to the channel list implicitly is deprecated and will be removed in 25.3. 
[2024-10-08T19:50:38.774Z] 
[2024-10-08T19:50:38.774Z] To remove this warning, please choose a default channel explicitly via 'conda config --add channels <name>', e.g. 'conda config --add channels defaults'.
[2024-10-08T19:50:38.774Z]   deprecated.topic(
[2024-10-08T19:50:38.774Z] + LIST_EXPLICIT_FILE=buildout/env-dump/conda-list-explicit-birdy.txt
[2024-10-08T19:50:38.774Z] + rm -fv buildout/env-dump/conda-list-explicit-birdy.txt
[2024-10-08T19:50:38.774Z] + conda list -n birdy --explicit
[2024-10-08T19:50:45.311Z] + PIP_FREEZE_FILE=buildout/env-dump/pip-freeze-birdy-requirements.txt
[2024-10-08T19:50:45.311Z] + rm -fv buildout/env-dump/pip-freeze-birdy-requirements.txt
[2024-10-08T19:50:45.311Z] + pip freeze
[2024-10-08T19:50:45.566Z] + exit 1
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] archiveArtifacts
[2024-10-08T19:50:46.208Z] Archiving artifacts
[2024-10-08T19:50:46.229Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:46.249Z] Archiving artifacts
[2024-10-08T19:50:46.711Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:47.280Z] Archiving artifacts
[2024-10-08T19:50:47.294Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:47.587Z] Archiving artifacts
[2024-10-08T19:50:47.663Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:47.804Z] Archiving artifacts
[2024-10-08T19:50:47.824Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:47.866Z] Archiving artifacts
[2024-10-08T19:50:47.899Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:48.582Z] Archiving artifacts
[2024-10-08T19:50:48.592Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:48.651Z] Archiving artifacts
[2024-10-08T19:50:51.433Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:51.476Z] Archiving artifacts
[2024-10-08T19:50:51.922Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:52.034Z] Archiving artifacts
[2024-10-08T19:50:52.352Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-10-08T19:50:53.209Z] Archiving artifacts
[2024-10-08T19:50:53.221Z] Recording fingerprints
[Pipeline] emailextrecipients
[Pipeline] step
[2024-10-08T19:50:53.277Z] Sending e-mails to: vu.long@ouranos.ca
[2024-10-08T19:50:53.382Z] ERROR: Invalid Addresses
[2024-10-08T19:50:53.384Z] javax.mail.SendFailedException: Invalid Addresses;
[2024-10-08T19:50:53.384Z]   nested exception is:
[2024-10-08T19:50:53.384Z] 	com.sun.mail.smtp.SMTPAddressFailedException: 454 4.7.1 <vu.long@ouranos.ca>: Relay access denied
[2024-10-08T19:50:53.384Z] 
[2024-10-08T19:50:53.384Z] 	at com.sun.mail.smtp.SMTPTransport.rcptTo(SMTPTransport.java:1835)
[2024-10-08T19:50:53.384Z] 	at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:1098)
[2024-10-08T19:50:53.384Z] 	at javax.mail.Transport.send0(Transport.java:195)
[2024-10-08T19:50:53.384Z] 	at javax.mail.Transport.send(Transport.java:124)
[2024-10-08T19:50:53.384Z] 	at hudson.tasks.MailSender.run(MailSender.java:130)
[2024-10-08T19:50:53.384Z] 	at hudson.tasks.Mailer.perform(Mailer.java:175)
[2024-10-08T19:50:53.384Z] 	at org.jenkinsci.plugins.workflow.steps.CoreStep$Execution.run(CoreStep.java:80)
[2024-10-08T19:50:53.384Z] 	at org.jenkinsci.plugins.workflow.steps.CoreStep$Execution.run(CoreStep.java:67)
[2024-10-08T19:50:53.384Z] 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47)
[2024-10-08T19:50:53.384Z] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
[2024-10-08T19:50:53.384Z] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[2024-10-08T19:50:53.384Z] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
[2024-10-08T19:50:53.384Z] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
[2024-10-08T19:50:53.384Z] 	at java.lang.Thread.run(Thread.java:748)
[2024-10-08T19:50:53.384Z] Caused by: com.sun.mail.smtp.SMTPAddressFailedException: 454 4.7.1 <vu.long@ouranos.ca>: Relay access denied
[2024-10-08T19:50:53.384Z] 
[2024-10-08T19:50:53.384Z] 	at com.sun.mail.smtp.SMTPTransport.rcptTo(SMTPTransport.java:1733)
[2024-10-08T19:50:53.384Z] 	... 13 more
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timeout
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
$ docker stop --time=1 5e1e47b2540886b9adf4cb0e42f943da4d3903db68bbb584fed71c4bef5a243d
$ docker rm -f 5e1e47b2540886b9adf4cb0e42f943da4d3903db68bbb584fed71c4bef5a243d
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
