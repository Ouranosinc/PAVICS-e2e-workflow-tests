Started by user Long Vu
 > git rev-parse --is-inside-work-tree # timeout=10
Setting origin to https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git
 > git config remote.origin.url https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git # timeout=10
Fetching origin...
Fetching upstream changes from origin
 > git --version # timeout=10
 > git config --get remote.origin.url # timeout=10
 > git fetch --tags --progress -- origin +refs/heads/*:refs/remotes/origin/* # timeout=10
Seen branch in repository origin/current-production-version
Seen branch in repository origin/devel-new-extensions
Seen branch in repository origin/extended_tests
Seen branch in repository origin/make-it-easier-to-add-new-nb-or-repos
Seen branch in repository origin/master
Seen branch in repository origin/new-docker-build
Seen branch in repository origin/pin-jupyter-env
Seen branch in repository origin/test-dockerhub-build
Seen branch in repository origin/twitcher_perf_test_notebook
Seen 9 remote branches
Obtained Jenkinsfile from 040825d08cb5bf5e9ef9856c05965653a7a51cb3
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on linux1 in /home/jenkins/agent/workspace/_workflow-tests_new-docker-build
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
No credentials specified
Fetching changes from the remote Git repository
Fetching without tags
Checking out Revision 040825d08cb5bf5e9ef9856c05965653a7a51cb3 (new-docker-build)
Commit message: "docker: py311-241219: conda env export"
 > git rev-parse --is-inside-work-tree # timeout=10
 > git config remote.origin.url https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git # timeout=10
Fetching upstream changes from https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git
 > git --version # timeout=10
 > git fetch --no-tags --progress -- https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 040825d08cb5bf5e9ef9856c05965653a7a51cb3 # timeout=10
 > git rev-list --no-walk a59c6547bdc73db9daf217a069862a06b8435f73 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker inspect -f . pavics/workflow-tests:py311-241219
.
[Pipeline] withDockerContainer
linux1 seems to be running inside container 6ca2491e7f43a3bf757202f625309feff7bf027df899f42e43bc71ba740ac9b6
$ docker run -t -d -u 1000:1000 -w /home/jenkins/agent/workspace/_workflow-tests_new-docker-build --volumes-from 6ca2491e7f43a3bf757202f625309feff7bf027df899f42e43bc71ba740ac9b6 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** pavics/workflow-tests:py311-241219 cat
$ docker top b31780001746f09d8f4bf69b2ac5de1a3bcbc9aa2aec178666a4af1cdfe9cf8f -eo pid,comm
[Pipeline] {
[Pipeline] ansiColor
[Pipeline] {
[Pipeline] timestamps
[Pipeline] {
[Pipeline] timeout
[2024-12-19T22:02:39.330Z] Timeout set to expire in 2 hr 0 min
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Run tests)
[Pipeline] script
[Pipeline] {
[Pipeline] withCredentials
[2024-12-19T22:02:39.432Z] Masking supported pattern matches of $ESGF_AUTH_USERNAME or $ESGF_AUTH_PASSWORD or $ESGF_AUTH_TOKEN or $COMPUTE_TOKEN
[Pipeline] {
[Pipeline] sh
[2024-12-19T22:02:39.734Z] + VERIFY_SSL=true SAVE_RESULTING_NOTEBOOK=true ./testall
[2024-12-19T22:02:39.734Z] TEST_PAVICS_SDI_REPO has been set to 'true'
[2024-12-19T22:02:39.734Z] PAVICS_SDI_BRANCH has been set to 'master'
[2024-12-19T22:02:39.734Z] PAVICS_SDI_REPO has been set to 'Ouranosinc/pavics-sdi'
[2024-12-19T22:02:39.734Z] TEST_FINCH_REPO has been set to 'true'
[2024-12-19T22:02:39.734Z] FINCH_BRANCH has been set to 'master'
[2024-12-19T22:02:39.734Z] FINCH_REPO has been set to 'bird-house/finch'
[2024-12-19T22:02:39.734Z] TEST_PAVICS_LANDING_REPO has been set to 'true'
[2024-12-19T22:02:39.734Z] PAVICS_LANDING_BRANCH has been set to 'master'
[2024-12-19T22:02:39.734Z] PAVICS_LANDING_REPO has been set to 'Ouranosinc/PAVICS-landing'
[2024-12-19T22:02:39.734Z] TEST_RAVEN_REPO has been set to 'false'
[2024-12-19T22:02:39.734Z] RAVEN_BRANCH has been set to 'main'
[2024-12-19T22:02:39.734Z] RAVEN_REPO has been set to 'Ouranosinc/raven'
[2024-12-19T22:02:39.734Z] TEST_RAVENPY_REPO has been set to 'false'
[2024-12-19T22:02:39.734Z] RAVENPY_BRANCH has been set to 'master'
[2024-12-19T22:02:39.734Z] RAVENPY_REPO has been set to 'CSHS-CWRA/RavenPy'
[2024-12-19T22:02:39.734Z] TEST_ESGF_COMPUTE_API_REPO has been set to 'false'
[2024-12-19T22:02:39.734Z] ESGF_COMPUTE_API_BRANCH has been set to 'devel'
[2024-12-19T22:02:39.734Z] ESGF_COMPUTE_API_REPO has been set to 'ESGF/esgf-compute-api'
[2024-12-19T22:02:39.734Z] TEST_LOCAL_NOTEBOOKS has been set to 'true'
[2024-12-19T22:02:39.734Z] + [ -n https://gist.githubusercontent.com/tlvu/813a1bcd325d753664c09526e4a5b759/raw/528d77c2553ce500553332279902b04f8a04ebe1/jenkins-params-raven-nb-only.include.sh ]
[2024-12-19T22:02:39.734Z] + TMP_PARAMS_OVERRIDE=/tmp/jenkins_params_override
[2024-12-19T22:02:39.734Z] + rm -vf /tmp/jenkins_params_override
[2024-12-19T22:02:39.734Z] removed '/tmp/jenkins_params_override'
[2024-12-19T22:02:39.734Z] + curl --silent https://gist.githubusercontent.com/tlvu/813a1bcd325d753664c09526e4a5b759/raw/528d77c2553ce500553332279902b04f8a04ebe1/jenkins-params-raven-nb-only.include.sh
[2024-12-19T22:02:39.734Z] + tee /tmp/jenkins_params_override
[2024-12-19T22:02:39.992Z] #!/bin/sh
[2024-12-19T22:02:39.992Z] # https://github.com/Ouranosinc/PAVICS-e2e-workflow-tests/blob/master/test-override/jenkins-params-raven-nb-only.include.sh
[2024-12-19T22:02:39.992Z] 
[2024-12-19T22:02:39.992Z] # Sample Jenkins params override script to only run Raven notebooks
[2024-12-19T22:02:39.992Z] # with the proper --nbval-lax switch.
[2024-12-19T22:02:39.992Z] 
[2024-12-19T22:02:39.992Z] # Disable default repos.
[2024-12-19T22:02:39.992Z] TEST_PAVICS_SDI_REPO="false"
[2024-12-19T22:02:39.992Z] TEST_FINCH_REPO="false"
[2024-12-19T22:02:39.992Z] TEST_PAVICS_LANDING_REPO="false"
[2024-12-19T22:02:39.992Z] TEST_LOCAL_NOTEBOOKS="false"
[2024-12-19T22:02:39.992Z] 
[2024-12-19T22:02:39.992Z] # Enable raven repos.
[2024-12-19T22:02:39.992Z] TEST_RAVEN_REPO="true"
[2024-12-19T22:02:39.992Z] TEST_RAVENPY_REPO="true"
[2024-12-19T22:02:39.992Z] 
[2024-12-19T22:02:39.992Z] # Raven nbs outputs are not fully up-to-date or regexed escaped properly like
[2024-12-19T22:02:39.992Z] # the other default nbs so need --nbval-lax for the moment.
[2024-12-19T22:02:39.992Z] PYTEST_EXTRA_OPTS="$PYTEST_EXTRA_OPTS --nbval-lax"
[2024-12-19T22:02:39.992Z] 
[2024-12-19T22:02:39.993Z] # Set different test branch if required.
[2024-12-19T22:02:39.993Z] #RAVEN_BRANCH=""
[2024-12-19T22:02:39.993Z] #RAVENPY_BRANCH=""
[2024-12-19T22:02:39.993Z] 
[2024-12-19T22:02:39.993Z] ######################
[2024-12-19T22:02:39.993Z] 
[2024-12-19T22:02:39.993Z] SAVE_RESULTING_NOTEBOOK_TIMEOUT="600"+ . /tmp/jenkins_params_override
[2024-12-19T22:02:39.993Z] + TEST_PAVICS_SDI_REPO=false
[2024-12-19T22:02:39.993Z] + TEST_FINCH_REPO=false
[2024-12-19T22:02:39.993Z] + TEST_PAVICS_LANDING_REPO=false
[2024-12-19T22:02:39.993Z] + TEST_LOCAL_NOTEBOOKS=false
[2024-12-19T22:02:39.993Z] + TEST_RAVEN_REPO=true
[2024-12-19T22:02:39.993Z] + TEST_RAVENPY_REPO=true
[2024-12-19T22:02:39.993Z] + PYTEST_EXTRA_OPTS=--dist=loadscope --numprocesses=0 --nbval-lax
[2024-12-19T22:02:39.993Z] + SAVE_RESULTING_NOTEBOOK_TIMEOUT=600
[2024-12-19T22:02:39.993Z] + git clean -fdx
[2024-12-19T22:02:39.993Z] Removing .pytest_cache/
[2024-12-19T22:02:39.993Z] Removing PAVICS-landing-master/
[2024-12-19T22:02:39.993Z] Removing RavenPy-master/
[2024-12-19T22:02:39.993Z] Removing __pycache__/
[2024-12-19T22:02:39.993Z] Removing buildout/
[2024-12-19T22:02:39.993Z] Removing esgf-compute-api-devel/
[2024-12-19T22:02:39.993Z] Removing finch-master/
[2024-12-19T22:02:39.993Z] Removing pavics-sdi-master/
[2024-12-19T22:02:39.993Z] Removing raven-main/
[2024-12-19T22:02:39.993Z] + ./downloadrepos
[2024-12-19T22:02:39.993Z] TEST_PAVICS_SDI_REPO has been set to 'false'
[2024-12-19T22:02:39.993Z] PAVICS_SDI_BRANCH has been set to 'master'
[2024-12-19T22:02:39.993Z] PAVICS_SDI_REPO has been set to 'Ouranosinc/pavics-sdi'
[2024-12-19T22:02:39.993Z] TEST_FINCH_REPO has been set to 'false'
[2024-12-19T22:02:39.993Z] FINCH_BRANCH has been set to 'master'
[2024-12-19T22:02:39.993Z] FINCH_REPO has been set to 'bird-house/finch'
[2024-12-19T22:02:39.993Z] TEST_PAVICS_LANDING_REPO has been set to 'false'
[2024-12-19T22:02:39.993Z] PAVICS_LANDING_BRANCH has been set to 'master'
[2024-12-19T22:02:39.993Z] PAVICS_LANDING_REPO has been set to 'Ouranosinc/PAVICS-landing'
[2024-12-19T22:02:39.993Z] TEST_RAVEN_REPO has been set to 'true'
[2024-12-19T22:02:39.993Z] RAVEN_BRANCH has been set to 'main'
[2024-12-19T22:02:39.993Z] RAVEN_REPO has been set to 'Ouranosinc/raven'
[2024-12-19T22:02:39.993Z] TEST_RAVENPY_REPO has been set to 'true'
[2024-12-19T22:02:39.993Z] RAVENPY_BRANCH has been set to 'master'
[2024-12-19T22:02:39.993Z] RAVENPY_REPO has been set to 'CSHS-CWRA/RavenPy'
[2024-12-19T22:02:39.993Z] TEST_ESGF_COMPUTE_API_REPO has been set to 'false'
[2024-12-19T22:02:39.993Z] ESGF_COMPUTE_API_BRANCH has been set to 'devel'
[2024-12-19T22:02:39.993Z] ESGF_COMPUTE_API_REPO has been set to 'ESGF/esgf-compute-api'
[2024-12-19T22:02:39.993Z] TEST_LOCAL_NOTEBOOKS has been set to 'false'
[2024-12-19T22:02:39.993Z] + rm -rf pavics-sdi-*
[2024-12-19T22:02:39.993Z] + ls
[2024-12-19T22:02:39.993Z] + grep pavics-sdi
[2024-12-19T22:02:39.993Z] + downloadrepos https://github.com/Ouranosinc/pavics-sdi master
[2024-12-19T22:02:39.993Z] + github_repo=https://github.com/Ouranosinc/pavics-sdi
[2024-12-19T22:02:39.993Z] + shift
[2024-12-19T22:02:39.993Z] + branch=master
[2024-12-19T22:02:39.993Z] + shift
[2024-12-19T22:02:39.993Z] + tar xz
[2024-12-19T22:02:39.993Z] + wget --quiet --output-document - https://github.com/Ouranosinc/pavics-sdi/archive/master.tar.gz
[2024-12-19T22:02:42.508Z] + ls
[2024-12-19T22:02:42.508Z] + grep pavics-sdi
[2024-12-19T22:02:42.508Z] pavics-sdi-master
[2024-12-19T22:02:42.508Z] + set +x
[2024-12-19T22:02:42.508Z] + rm -rf finch-*
[2024-12-19T22:02:42.508Z] + ls
[2024-12-19T22:02:42.508Z] + grep finch
[2024-12-19T22:02:42.508Z] + downloadrepos https://github.com/bird-house/finch master
[2024-12-19T22:02:42.508Z] + github_repo=https://github.com/bird-house/finch
[2024-12-19T22:02:42.508Z] + shift
[2024-12-19T22:02:42.508Z] + branch=master
[2024-12-19T22:02:42.508Z] + shift
[2024-12-19T22:02:42.508Z] + wget --quiet --output-document - https://github.com/bird-house/finch/archive/master.tar.gz
[2024-12-19T22:02:42.508Z] + tar xz
[2024-12-19T22:02:43.870Z] + ls
[2024-12-19T22:02:43.870Z] + grep finch
[2024-12-19T22:02:43.870Z] finch-master
[2024-12-19T22:02:43.870Z] + set +x
[2024-12-19T22:02:43.870Z] + rm -rf PAVICS-landing-*
[2024-12-19T22:02:43.870Z] + ls
[2024-12-19T22:02:43.870Z] + grep PAVICS-landing
[2024-12-19T22:02:43.870Z] + downloadrepos https://github.com/Ouranosinc/PAVICS-landing master
[2024-12-19T22:02:43.870Z] + github_repo=https://github.com/Ouranosinc/PAVICS-landing
[2024-12-19T22:02:43.870Z] + shift
[2024-12-19T22:02:43.870Z] + branch=master
[2024-12-19T22:02:43.870Z] + shift
[2024-12-19T22:02:43.870Z] + wget --quiet --output-document - https://github.com/Ouranosinc/PAVICS-landing/archive/master.tar.gz
[2024-12-19T22:02:43.870Z] + tar xz
[2024-12-19T22:02:53.798Z] + ls
[2024-12-19T22:02:53.798Z] + grep PAVICS-landing
[2024-12-19T22:02:53.798Z] PAVICS-landing-master
[2024-12-19T22:02:53.798Z] + set +x
[2024-12-19T22:02:53.798Z] + rm -rf raven-*
[2024-12-19T22:02:53.798Z] + ls
[2024-12-19T22:02:53.798Z] + grep raven
[2024-12-19T22:02:53.798Z] + downloadrepos https://github.com/Ouranosinc/raven main
[2024-12-19T22:02:53.798Z] + github_repo=https://github.com/Ouranosinc/raven
[2024-12-19T22:02:53.798Z] + shift
[2024-12-19T22:02:53.798Z] + branch=main
[2024-12-19T22:02:53.798Z] + shift
[2024-12-19T22:02:53.798Z] + wget --quiet --output-document - https://github.com/Ouranosinc/raven/archive/main.tar.gz
[2024-12-19T22:02:53.798Z] + tar xz
[2024-12-19T22:02:55.196Z] + ls
[2024-12-19T22:02:55.196Z] + grep raven
[2024-12-19T22:02:55.196Z] raven-main
[2024-12-19T22:02:55.196Z] + set +x
[2024-12-19T22:02:55.196Z] + rm -rf RavenPy-*
[2024-12-19T22:02:55.196Z] + ls
[2024-12-19T22:02:55.196Z] + grep RavenPy
[2024-12-19T22:02:55.196Z] + downloadrepos https://github.com/CSHS-CWRA/RavenPy master
[2024-12-19T22:02:55.196Z] + github_repo=https://github.com/CSHS-CWRA/RavenPy
[2024-12-19T22:02:55.196Z] + shift
[2024-12-19T22:02:55.196Z] + branch=master
[2024-12-19T22:02:55.196Z] + shift
[2024-12-19T22:02:55.196Z] + wget --quiet --output-document - https://github.com/CSHS-CWRA/RavenPy/archive/master.tar.gz
[2024-12-19T22:02:55.196Z] + tar xz
[2024-12-19T22:02:57.079Z] + ls
[2024-12-19T22:02:57.079Z] + grep RavenPy
[2024-12-19T22:02:57.079Z] RavenPy-master
[2024-12-19T22:02:57.079Z] + set +x
[2024-12-19T22:02:57.079Z] + rm -rf esgf-compute-api-*
[2024-12-19T22:02:57.079Z] + ls
[2024-12-19T22:02:57.079Z] + grep esgf-compute-api
[2024-12-19T22:02:57.079Z] + downloadrepos https://github.com/ESGF/esgf-compute-api devel
[2024-12-19T22:02:57.079Z] + github_repo=https://github.com/ESGF/esgf-compute-api
[2024-12-19T22:02:57.079Z] + shift
[2024-12-19T22:02:57.079Z] + branch=devel
[2024-12-19T22:02:57.079Z] + shift
[2024-12-19T22:02:57.079Z] + wget --quiet --output-document - https://github.com/ESGF/esgf-compute-api/archive/devel.tar.gz
[2024-12-19T22:02:57.079Z] + tar xz
[2024-12-19T22:02:58.003Z] + ls
[2024-12-19T22:02:58.003Z] + grep esgf-compute-api
[2024-12-19T22:02:58.003Z] esgf-compute-api-devel
[2024-12-19T22:02:58.003Z] + set +x
[2024-12-19T22:02:58.003Z] + echo master
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export PAVICS_SDI_BRANCH=master
[2024-12-19T22:02:58.003Z] + echo Ouranosinc/pavics-sdi
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export PAVICS_SDI_REPO_NAME=pavics-sdi
[2024-12-19T22:02:58.003Z] + echo master
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export FINCH_BRANCH=master
[2024-12-19T22:02:58.003Z] + echo bird-house/finch
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export FINCH_REPO_NAME=finch
[2024-12-19T22:02:58.003Z] + echo master
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export PAVICS_LANDING_BRANCH=master
[2024-12-19T22:02:58.003Z] + echo Ouranosinc/PAVICS-landing
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export PAVICS_LANDING_REPO_NAME=PAVICS-landing
[2024-12-19T22:02:58.003Z] + echo main
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export RAVEN_BRANCH=main
[2024-12-19T22:02:58.003Z] + echo Ouranosinc/raven
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export RAVEN_REPO_NAME=raven
[2024-12-19T22:02:58.003Z] + echo master
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export RAVENPY_BRANCH=master
[2024-12-19T22:02:58.003Z] + echo CSHS-CWRA/RavenPy
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export RAVENPY_REPO_NAME=RavenPy
[2024-12-19T22:02:58.003Z] + echo devel
[2024-12-19T22:02:58.003Z] + sed s@/@-@g
[2024-12-19T22:02:58.003Z] + export ESGF_COMPUTE_API_BRANCH=devel
[2024-12-19T22:02:58.003Z] + echo ESGF/esgf-compute-api
[2024-12-19T22:02:58.003Z] + sed s@^.*/@@g
[2024-12-19T22:02:58.003Z] + export ESGF_COMPUTE_API_REPO_NAME=esgf-compute-api
[2024-12-19T22:02:58.003Z] + echo pavics-sdi-master
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + export PAVICS_SDI_DIR=pavics-sdi-master
[2024-12-19T22:02:58.003Z] + echo finch-master
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + export FINCH_DIR=finch-master
[2024-12-19T22:02:58.003Z] + echo PAVICS-landing-master
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + export PAVICS_LANDING_DIR=PAVICS-landing-master
[2024-12-19T22:02:58.003Z] + echo raven-main
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + export RAVEN_DIR=raven-main
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + echo RavenPy-master
[2024-12-19T22:02:58.003Z] + export RAVENPY_DIR=RavenPy-master
[2024-12-19T22:02:58.003Z] + echo esgf-compute-api-devel
[2024-12-19T22:02:58.003Z] + sed s@[^a-zA-Z0-9_\-\.]@-@g
[2024-12-19T22:02:58.003Z] + export ESGF_COMPUTE_API_DIR=esgf-compute-api-devel
[2024-12-19T22:02:58.003Z] + echo true
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + VERIFY_SSL=true
[2024-12-19T22:02:58.003Z] + [ xtrue = xfalse ]
[2024-12-19T22:02:58.003Z] + rm -v finch-master/setup.cfg
[2024-12-19T22:02:58.003Z] removed 'finch-master/setup.cfg'
[2024-12-19T22:02:58.003Z] + rm -v raven-main/setup.cfg
[2024-12-19T22:02:58.003Z] removed 'raven-main/setup.cfg'
[2024-12-19T22:02:58.003Z] + rm -v raven-main/pyproject.toml
[2024-12-19T22:02:58.003Z] removed 'raven-main/pyproject.toml'
[2024-12-19T22:02:58.003Z] + rm -v RavenPy-master/setup.cfg
[2024-12-19T22:02:58.003Z] rm: cannot remove 'RavenPy-master/setup.cfg': No such file or directory
[2024-12-19T22:02:58.003Z] + rm -v RavenPy-master/tox.ini
[2024-12-19T22:02:58.003Z] removed 'RavenPy-master/tox.ini'
[2024-12-19T22:02:58.003Z] + rm -v RavenPy-master/pyproject.toml
[2024-12-19T22:02:58.003Z] removed 'RavenPy-master/pyproject.toml'
[2024-12-19T22:02:58.003Z] + rm -v esgf-compute-api-devel/setup.cfg
[2024-12-19T22:02:58.003Z] rm: cannot remove 'esgf-compute-api-devel/setup.cfg': No such file or directory
[2024-12-19T22:02:58.003Z] + rm -v esgf-compute-api-devel/tox.ini
[2024-12-19T22:02:58.003Z] rm: cannot remove 'esgf-compute-api-devel/tox.ini': No such file or directory
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_MAGPIE_AUTH=false
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_PAVICS_SDI_REPO=false
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_PAVICS_SDI_WEAVER=false
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_FINCH_REPO=false
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_PAVICS_LANDING_REPO=false
[2024-12-19T22:02:58.003Z] + echo true
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_RAVEN_REPO=true
[2024-12-19T22:02:58.003Z] + echo true
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_RAVENPY_REPO=true
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_ESGF_COMPUTE_API_REPO=false
[2024-12-19T22:02:58.003Z] + echo false
[2024-12-19T22:02:58.003Z] + tr [:upper:] [:lower:]
[2024-12-19T22:02:58.003Z] + TEST_LOCAL_NOTEBOOKS=false
[2024-12-19T22:02:58.003Z] + NOTEBOOKS_TO_TEST=
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + [ xtrue = xtrue ]
[2024-12-19T22:02:58.003Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb
[2024-12-19T22:02:58.003Z] + [ xtrue = xtrue ]
[2024-12-19T22:02:58.003Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb
[2024-12-19T22:02:58.003Z] + NOTEBOOKS_TO_TEST= raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb RavenPy-master/docs/notebooks/paper/*.ipynb
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + [ xfalse = xtrue ]
[2024-12-19T22:02:58.003Z] + ./runtest  raven-main/docs/source/notebooks/*.ipynb RavenPy-master/docs/notebooks/*.ipynb RavenPy-master/docs/notebooks/paper/*.ipynb
[2024-12-19T22:02:58.003Z] + [ -n  ]
[2024-12-19T22:02:58.003Z] + [ ! -z pavics.ouranos.ca ]
[2024-12-19T22:02:58.004Z] + echo Will run notebooks against pavics.ouranos.ca
[2024-12-19T22:02:58.004Z] Will run notebooks against pavics.ouranos.ca
[2024-12-19T22:02:58.004Z] + [ -z  ]
[2024-12-19T22:02:58.004Z] + sed -i /\(\.ncml\|TEST_USE_PROD_DATA\)/!s/pavics.ouranos.ca/pavics.ouranos.ca/g raven-main/docs/source/notebooks/Region_selection.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-12-19T22:02:58.004Z] + git diff
[2024-12-19T22:02:58.004Z] + export PYTHONWARNINGS=ignore:Unverified HTTPS request
[2024-12-19T22:02:58.004Z] + [ -n  ]
[2024-12-19T22:02:58.004Z] + py.test --nbval raven-main/docs/source/notebooks/Region_selection.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb --nbval-sanitize-with notebooks/output-sanitize.cfg --dist=loadscope --numprocesses=0 --nbval-lax
[2024-12-19T22:03:01.267Z] ============================= test session starts ==============================
[2024-12-19T22:03:01.267Z] platform linux -- Python 3.11.11, pytest-8.3.4, pluggy-1.5.0
[2024-12-19T22:03:01.267Z] rootdir: /home/jenkins/agent/workspace/_workflow-tests_new-docker-build
[2024-12-19T22:03:01.267Z] plugins: anyio-4.7.0, dash-2.18.2, nbval-0.11.0, tornasync-0.6.0.post2, xdist-3.6.1
[2024-12-19T22:03:01.267Z] collected 242 items
[2024-12-19T22:03:01.267Z] 
[2024-12-19T22:03:15.059Z] raven-main/docs/source/notebooks/Region_selection.ipynb .........        [  3%]
[2024-12-19T22:03:17.572Z] raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb . [  4%]
[2024-12-19T22:03:32.814Z] ......                                                                   [  6%]
[2024-12-19T22:03:34.186Z] RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb ...... [  9%]
[2024-12-19T22:03:34.186Z]                                                                          [  9%]
[2024-12-19T22:03:36.328Z] RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb .... [ 10%]
[2024-12-19T22:03:46.525Z] ....                                                                     [ 12%]
[2024-12-19T22:03:51.836Z] RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb . [ 12%]
[2024-12-19T22:04:00.786Z] ..............                                                           [ 18%]
[2024-12-19T22:04:09.400Z] RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb ..FFFFFFF [ 22%]
[2024-12-19T22:04:09.400Z] FF                                                                       [ 23%]
[2024-12-19T22:04:12.859Z] RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb ... [ 24%]
[2024-12-19T22:04:23.361Z] .................                                                        [ 31%]
[2024-12-19T22:04:30.042Z] RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb .. [ 32%]
[2024-12-19T22:04:38.658Z] ...........                                                              [ 36%]
[2024-12-19T22:04:48.997Z] RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb ......          [ 39%]
[2024-12-19T22:04:53.160Z] RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb . [ 39%]
[2024-12-19T22:04:58.011Z] .....                                                                    [ 41%]
[2024-12-19T22:04:59.379Z] RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb . [ 42%]
[2024-12-19T22:05:53.871Z] .........FFFFFF.                                                         [ 48%]
[2024-12-19T22:05:58.029Z] RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb . [ 49%]
[2024-12-19T22:06:05.780Z] ....                                                                     [ 50%]
[2024-12-19T22:06:47.307Z] RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb ........        [ 54%]
[2024-12-19T22:07:03.512Z] RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb .. [ 54%]
[2024-12-19T22:07:28.225Z] ......                                                                   [ 57%]
[2024-12-19T22:07:46.272Z] RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb . [ 57%]
[2024-12-19T22:07:54.656Z] .......                                                                  [ 60%]
[2024-12-19T22:08:01.087Z] RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb .... [ 62%]
[2024-12-19T22:08:27.332Z] ....                                                                     [ 64%]
[2024-12-19T22:08:45.375Z] RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb . [ 64%]
[2024-12-19T22:09:03.205Z] .......                                                                  [ 67%]
[2024-12-19T22:09:05.722Z] RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb . [ 67%]
[2024-12-19T22:09:31.303Z] .......                                                                  [ 70%]
[2024-12-19T22:09:33.818Z] RavenPy-master/docs/notebooks/HydroShare_integration.ipynb FFFF          [ 72%]
[2024-12-19T22:09:53.774Z] RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb .. [ 73%]
[2024-12-19T22:10:01.049Z] ....                                                                     [ 74%]
[2024-12-19T22:10:18.635Z] RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb ...    [ 76%]
[2024-12-19T22:10:48.044Z] RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb .......      [ 78%]
[2024-12-19T22:10:48.044Z] RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb . [ 79%]
[2024-12-19T22:10:59.115Z] .............                                                            [ 84%]
[2024-12-19T22:11:18.668Z] RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb .....           [ 86%]
[2024-12-19T22:11:26.747Z] RavenPy-master/docs/notebooks/time_series_analysis.ipynb ...........     [ 91%]
[2024-12-19T22:11:48.626Z] RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb . [ 91%]
[2024-12-19T22:12:24.351Z] ......FFFF..FFFFFFFF                                                     [100%]
[2024-12-19T22:12:24.351Z] 
[2024-12-19T22:12:24.351Z] =================================== FAILURES ===================================
[2024-12-19T22:12:24.351Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 2 ____
[2024-12-19T22:12:24.351Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.351Z] [94mCell 2: Cell execution caused an exception
[2024-12-19T22:12:24.351Z] 
[2024-12-19T22:12:24.351Z] Input:
[2024-12-19T22:12:24.351Z] [0m# Get the ERA5 data from the Wasabi/Amazon S3 server.
[2024-12-19T22:12:24.351Z] catalog_name = "https://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml"
[2024-12-19T22:12:24.351Z] cat = intake.open_catalog(catalog_name)
[2024-12-19T22:12:24.351Z] ds = cat.era5_reanalysis_single_levels.to_dask()
[2024-12-19T22:12:24.351Z] 
[2024-12-19T22:12:24.351Z] [94mTraceback:[0m
[2024-12-19T22:12:24.351Z] 
[2024-12-19T22:12:24.351Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.352Z] [0;31mImportError[0m                               Traceback (most recent call last)
[2024-12-19T22:12:24.352Z] Cell [0;32mIn[1], line 3[0m
[2024-12-19T22:12:24.352Z] [1;32m      1[0m [38;5;66;03m# Get the ERA5 data from the Wasabi/Amazon S3 server.[39;00m
[2024-12-19T22:12:24.352Z] [1;32m      2[0m catalog_name [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttps://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml[39m[38;5;124m"[39m
[2024-12-19T22:12:24.352Z] [0;32m----> 3[0m cat [38;5;241m=[39m [43mintake[49m[38;5;241;43m.[39;49m[43mopen_catalog[49m[43m([49m[43mcatalog_name[49m[43m)[49m
[2024-12-19T22:12:24.352Z] [1;32m      4[0m ds [38;5;241m=[39m cat[38;5;241m.[39mera5_reanalysis_single_levels[38;5;241m.[39mto_dask()
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py:163[0m, in [0;36mopen_catalog[0;34m(uri, **kwargs)[0m
[2024-12-19T22:12:24.352Z] [1;32m    156[0m [38;5;28;01mif[39;00m driver [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.352Z] [1;32m    157[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-12-19T22:12:24.352Z] [1;32m    158[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnknown catalog driver [39m[38;5;124m'[39m[38;5;132;01m{[39;00mdriver[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m. [39m[38;5;124m"[39m
[2024-12-19T22:12:24.352Z] [1;32m    159[0m         [38;5;124m"[39m[38;5;124mDo you need to install a new driver from the plugin directory? [39m[38;5;124m"[39m
[2024-12-19T22:12:24.352Z] [1;32m    160[0m         [38;5;124m"[39m[38;5;124mhttps://intake.readthedocs.io/en/latest/plugin-directory.html[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.352Z] [1;32m    161[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mCurrent registry: [39m[38;5;132;01m{[39;00m[38;5;28mlist[39m([38;5;28msorted[39m(registry))[38;5;132;01m}[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.352Z] [1;32m    162[0m     )
[2024-12-19T22:12:24.352Z] [0;32m--> 163[0m [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mdriver[49m[43m][49m[43m([49m[43muri[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:549[0m, in [0;36mYAMLFileCatalog.__init__[0;34m(self, path, text, autoreload, **kwargs)[0m
[2024-12-19T22:12:24.352Z] [1;32m    547[0m [38;5;28mself[39m[38;5;241m.[39mfilesystem [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mfs[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[2024-12-19T22:12:24.352Z] [1;32m    548[0m [38;5;28mself[39m[38;5;241m.[39maccess [38;5;241m=[39m [38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m kwargs
[2024-12-19T22:12:24.352Z] [0;32m--> 549[0m [38;5;28;43msuper[39;49m[43m([49m[43mYAMLFileCatalog[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:121[0m, in [0;36mCatalog.__init__[0;34m(self, entries, name, description, metadata, ttl, getenv, getshell, persist_mode, storage_options, user_parameters)[0m
[2024-12-19T22:12:24.352Z] [1;32m    119[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.352Z] [1;32m    120[0m [38;5;28mself[39m[38;5;241m.[39m_entries [38;5;241m=[39m entries [38;5;28;01mif[39;00m entries [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_entries_container()
[2024-12-19T22:12:24.352Z] [0;32m--> 121[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mforce_reload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:179[0m, in [0;36mCatalog.force_reload[0;34m(self)[0m
[2024-12-19T22:12:24.352Z] [1;32m    177[0m [38;5;250m[39m[38;5;124;03m"""Imperative reload data now"""[39;00m
[2024-12-19T22:12:24.352Z] [1;32m    178[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.352Z] [0;32m--> 179[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:582[0m, in [0;36mYAMLFileCatalog._load[0;34m(self, reload)[0m
[2024-12-19T22:12:24.352Z] [1;32m    580[0m     logger[38;5;241m.[39mwarning([38;5;124m"[39m[38;5;124mUse of [39m[38;5;124m'[39m[38;5;124m!template[39m[38;5;124m'[39m[38;5;124m deprecated - fixing[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.352Z] [1;32m    581[0m     text [38;5;241m=[39m text[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m!template [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.352Z] [0;32m--> 582[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparse[49m[43m([49m[43mtext[49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:658[0m, in [0;36mYAMLFileCatalog.parse[0;34m(self, text)[0m
[2024-12-19T22:12:24.352Z] [1;32m    656[0m [38;5;66;03m# Second, we validate the schema and semantics[39;00m
[2024-12-19T22:12:24.352Z] [1;32m    657[0m context [38;5;241m=[39m [38;5;28mdict[39m(root[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_dir)
[2024-12-19T22:12:24.352Z] [0;32m--> 658[0m result [38;5;241m=[39m [43mCatalogParser[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mcontext[49m[38;5;241;43m=[39;49m[43mcontext[49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m)[49m
[2024-12-19T22:12:24.352Z] [1;32m    659[0m [38;5;28;01mif[39;00m result[38;5;241m.[39merrors:
[2024-12-19T22:12:24.352Z] [1;32m    660[0m     [38;5;28;01mraise[39;00m exceptions[38;5;241m.[39mValidationError([38;5;124m"[39m[38;5;124mCatalog [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m has validation errors:[39m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39mpath, [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(result[38;5;241m.[39merrors)), result[38;5;241m.[39merrors)
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:302[0m, in [0;36mCatalogParser.__init__[0;34m(self, data, getenv, getshell, context)[0m
[2024-12-19T22:12:24.352Z] [1;32m    300[0m [38;5;28mself[39m[38;5;241m.[39mgetenv [38;5;241m=[39m getenv
[2024-12-19T22:12:24.352Z] [1;32m    301[0m [38;5;28mself[39m[38;5;241m.[39mgetshell [38;5;241m=[39m getshell
[2024-12-19T22:12:24.352Z] [0;32m--> 302[0m [38;5;28mself[39m[38;5;241m.[39m_data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse[49m[43m([49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.352Z] 
[2024-12-19T22:12:24.352Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:488[0m, in [0;36mCatalogParser._parse[0;34m(self, data)[0m
[2024-12-19T22:12:24.352Z] [1;32m    483[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mcatalog must be a dictionary[39m[38;5;124m"[39m, data)
[2024-12-19T22:12:24.353Z] [1;32m    484[0m     [38;5;28;01mreturn[39;00m
[2024-12-19T22:12:24.353Z] [1;32m    486[0m [38;5;28;01mreturn[39;00m [38;5;28mdict[39m(
[2024-12-19T22:12:24.353Z] [1;32m    487[0m     plugin_sources[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_parse_plugins(data),
[2024-12-19T22:12:24.353Z] [0;32m--> 488[0m     data_sources[38;5;241m=[39m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_sources[49m[43m([49m[43mdata[49m[43m)[49m,
[2024-12-19T22:12:24.353Z] [1;32m    489[0m     metadata[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mmetadata[39m[38;5;124m"[39m, {}),
[2024-12-19T22:12:24.353Z] [1;32m    490[0m     name[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.353Z] [1;32m    491[0m     description[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mdescription[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.353Z] [1;32m    492[0m )
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:475[0m, in [0;36mCatalogParser._parse_data_sources[0;34m(self, data)[0m
[2024-12-19T22:12:24.353Z] [1;32m    472[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mvalue of key [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m must be a dictionary[39m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat(name), data[[38;5;124m"[39m[38;5;124msources[39m[38;5;124m"[39m], name)
[2024-12-19T22:12:24.353Z] [1;32m    473[0m     [38;5;28;01mcontinue[39;00m
[2024-12-19T22:12:24.353Z] [0;32m--> 475[0m obj [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43msource[49m[43m)[49m
[2024-12-19T22:12:24.353Z] [1;32m    476[0m [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.353Z] [1;32m    477[0m     sources[38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:411[0m, in [0;36mCatalogParser._parse_data_source[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.353Z] [1;32m    409[0m     [38;5;28;01mreturn[39;00m remake_instance(data)
[2024-12-19T22:12:24.353Z] [1;32m    410[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.353Z] [0;32m--> 411[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source_local[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:450[0m, in [0;36mCatalogParser._parse_data_source_local[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.353Z] [1;32m    447[0m         [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.353Z] [1;32m    448[0m             ds[[38;5;124m"[39m[38;5;124mparameters[39m[38;5;124m"[39m][38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.353Z] [0;32m--> 450[0m [38;5;28;01mreturn[39;00m [43mLocalCatalogEntry[49m[43m([49m[43mcatalog_dir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_context[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mroot[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mds[49m[43m)[49m
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:177[0m, in [0;36mLocalCatalogEntry.__init__[0;34m(self, name, description, driver, direct_access, args, cache, parameters, metadata, catalog_dir, getenv, getshell, catalog)[0m
[2024-12-19T22:12:24.353Z] [1;32m    175[0m [38;5;28mself[39m[38;5;241m.[39m_catalog [38;5;241m=[39m catalog
[2024-12-19T22:12:24.353Z] [1;32m    176[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(driver, [38;5;28mstr[39m):
[2024-12-19T22:12:24.353Z] [0;32m--> 177[0m     dr [38;5;241m=[39m [43mget_plugin_class[49m[43m([49m[43mdriver[49m[43m)[49m
[2024-12-19T22:12:24.353Z] [1;32m    178[0m     [38;5;28mself[39m[38;5;241m.[39m_plugin [38;5;241m=[39m [dr] [38;5;28;01mif[39;00m dr [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m []
[2024-12-19T22:12:24.353Z] [1;32m    179[0m     containers [38;5;241m=[39m [38;5;28mset[39m(p[38;5;241m.[39mcontainer [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_plugin)
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:82[0m, in [0;36mget_plugin_class[0;34m(name)[0m
[2024-12-19T22:12:24.353Z] [1;32m     80[0m [38;5;28;01mdef[39;00m [38;5;21mget_plugin_class[39m(name):
[2024-12-19T22:12:24.353Z] [1;32m     81[0m     [38;5;28;01mif[39;00m name [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.353Z] [0;32m---> 82[0m         [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mname[49m[43m][49m
[2024-12-19T22:12:24.353Z] [1;32m     83[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m.[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m name:
[2024-12-19T22:12:24.353Z] [1;32m     84[0m         logger[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mPlugin name [39m[38;5;124m"[39m[38;5;132;01m%s[39;00m[38;5;124m"[39m[38;5;124m not known[39m[38;5;124m'[39m [38;5;241m%[39m name)
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:32[0m, in [0;36mDriverRegistry.__getitem__[0;34m(self, item)[0m
[2024-12-19T22:12:24.353Z] [1;32m     30[0m it [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mdrivers[38;5;241m.[39menabled_plugins()[item]
[2024-12-19T22:12:24.353Z] [1;32m     31[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(it, entrypoints[38;5;241m.[39mEntryPoint):
[2024-12-19T22:12:24.353Z] [0;32m---> 32[0m     [38;5;28;01mreturn[39;00m [43mit[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.353Z] [1;32m     33[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(it, [38;5;28mstr[39m):
[2024-12-19T22:12:24.353Z] [1;32m     34[0m     [38;5;28;01mreturn[39;00m import_name(it)
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/entrypoints.py:79[0m, in [0;36mEntryPoint.load[0;34m(self)[0m
[2024-12-19T22:12:24.353Z] [1;32m     76[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m([38;5;28mself[39m):
[2024-12-19T22:12:24.353Z] [1;32m     77[0m [38;5;250m    [39m[38;5;124;03m"""Load the object to which this entry point refers.[39;00m
[2024-12-19T22:12:24.353Z] [1;32m     78[0m [38;5;124;03m    """[39;00m
[2024-12-19T22:12:24.353Z] [0;32m---> 79[0m     mod [38;5;241m=[39m [43mimport_module[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodule_name[49m[43m)[49m
[2024-12-19T22:12:24.353Z] [1;32m     80[0m     obj [38;5;241m=[39m mod
[2024-12-19T22:12:24.353Z] [1;32m     81[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mobject_name:
[2024-12-19T22:12:24.353Z] 
[2024-12-19T22:12:24.353Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/importlib/__init__.py:126[0m, in [0;36mimport_module[0;34m(name, package)[0m
[2024-12-19T22:12:24.353Z] [1;32m    124[0m             [38;5;28;01mbreak[39;00m
[2024-12-19T22:12:24.353Z] [1;32m    125[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[2024-12-19T22:12:24.354Z] [0;32m--> 126[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1126[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:1147[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:690[0m, in [0;36m_load_unlocked[0;34m(spec)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap_external>:940[0m, in [0;36mexec_module[0;34m(self, module)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/__init__.py:7[0m
[2024-12-19T22:12:24.354Z] [1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m
[2024-12-19T22:12:24.354Z] [1;32m      6[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake[39;00m
[2024-12-19T22:12:24.354Z] [0;32m----> 7[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mnetcdf[39;00m [38;5;28;01mimport[39;00m NetCDFSource
[2024-12-19T22:12:24.354Z] [1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mopendap[39;00m [38;5;28;01mimport[39;00m OpenDapSource
[2024-12-19T22:12:24.354Z] [1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mraster[39;00m [38;5;28;01mimport[39;00m RasterIOSource
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/netcdf.py:2[0m
[2024-12-19T22:12:24.354Z] [1;32m      1[0m [38;5;66;03m# -*- coding: utf-8 -*-[39;00m
[2024-12-19T22:12:24.354Z] [0;32m----> 2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake[39;00m [38;5;28;01mimport[39;00m readers
[2024-12-19T22:12:24.354Z] [1;32m      4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m [38;5;28;01mimport[39;00m IntakeXarraySourceAdapter
[2024-12-19T22:12:24.354Z] [1;32m      7[0m [38;5;28;01mclass[39;00m [38;5;21;01mNetCDFSource[39;00m(IntakeXarraySourceAdapter):
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [0;31mImportError[0m: cannot import name 'readers' from 'intake' (/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py)
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 3 ____
[2024-12-19T22:12:24.354Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.354Z] [94mCell 3: Cell execution caused an exception
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] Input:
[2024-12-19T22:12:24.354Z] [0m# We will add a wrapper to ensure that the following operations will preserve the original data attributes, such as units and variable names.
[2024-12-19T22:12:24.354Z] with xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.354Z]     ERA5_reference = subset.subset_shape(
[2024-12-19T22:12:24.354Z]         ds.sel(time=slice(reference_start_day, reference_stop_day)), basin_contour
[2024-12-19T22:12:24.354Z]     )
[2024-12-19T22:12:24.354Z]     ERA5_tas = ERA5_reference["t2m"].resample(time="1D")
[2024-12-19T22:12:24.354Z]     ERA5_tmin = ERA5_tas.min().chunk(-1, -1, -1)
[2024-12-19T22:12:24.354Z]     ERA5_tmax = ERA5_tas.max().chunk(-1, -1, -1)
[2024-12-19T22:12:24.354Z]     ERA5_pr = ERA5_reference["tp"].resample(time="1D").sum().chunk(-1, -1, -1)
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] ERA5_pr
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [94mTraceback:[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.354Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.354Z] Cell [0;32mIn[1], line 4[0m
[2024-12-19T22:12:24.354Z] [1;32m      1[0m [38;5;66;03m# We will add a wrapper to ensure that the following operations will preserve the original data attributes, such as units and variable names.[39;00m
[2024-12-19T22:12:24.354Z] [1;32m      2[0m [38;5;28;01mwith[39;00m xr[38;5;241m.[39mset_options(keep_attrs[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[2024-12-19T22:12:24.354Z] [1;32m      3[0m     ERA5_reference [38;5;241m=[39m subset[38;5;241m.[39msubset_shape(
[2024-12-19T22:12:24.354Z] [0;32m----> 4[0m         [43mds[49m[38;5;241m.[39msel(time[38;5;241m=[39m[38;5;28mslice[39m(reference_start_day, reference_stop_day)), basin_contour
[2024-12-19T22:12:24.354Z] [1;32m      5[0m     )
[2024-12-19T22:12:24.354Z] [1;32m      6[0m     ERA5_tas [38;5;241m=[39m ERA5_reference[[38;5;124m"[39m[38;5;124mt2m[39m[38;5;124m"[39m][38;5;241m.[39mresample(time[38;5;241m=[39m[38;5;124m"[39m[38;5;124m1D[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.354Z] [1;32m      7[0m     ERA5_tmin [38;5;241m=[39m ERA5_tas[38;5;241m.[39mmin()[38;5;241m.[39mchunk([38;5;241m-[39m[38;5;241m1[39m, [38;5;241m-[39m[38;5;241m1[39m, [38;5;241m-[39m[38;5;241m1[39m)
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [0;31mNameError[0m: name 'ds' is not defined
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 4 ____
[2024-12-19T22:12:24.354Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.354Z] [94mCell 4: Cell execution caused an exception
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] Input:
[2024-12-19T22:12:24.354Z] [0mprint(f"Tmin units: {ERA5_tmin.units}")
[2024-12-19T22:12:24.354Z] print(f"Tmax units: {ERA5_tmax.units}")
[2024-12-19T22:12:24.354Z] print(f"Precipitation units: {ERA5_pr.units}")
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [94mTraceback:[0m
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.354Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.354Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.354Z] [0;32m----> 1[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mTmin units: [39m[38;5;132;01m{[39;00m[43mERA5_tmin[49m[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.354Z] [1;32m      2[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mTmax units: [39m[38;5;132;01m{[39;00mERA5_tmax[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.354Z] [1;32m      3[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mPrecipitation units: [39m[38;5;132;01m{[39;00mERA5_pr[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.354Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.354Z] 
[2024-12-19T22:12:24.355Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 5 ____
[2024-12-19T22:12:24.355Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.355Z] [94mCell 5: Cell execution caused an exception
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] Input:
[2024-12-19T22:12:24.355Z] [0mwith xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.355Z]     ERA5_tmin = ERA5_tmin - 273.15  # K to ��C
[2024-12-19T22:12:24.355Z]     ERA5_tmin.attrs["units"] = "degC"
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z]     ERA5_tmax = ERA5_tmax - 273.15  # K to ��C
[2024-12-19T22:12:24.355Z]     ERA5_tmax.attrs["units"] = "degC"
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z]     ERA5_pr = ERA5_pr * 1000  # m to mm
[2024-12-19T22:12:24.355Z]     ERA5_pr.attrs["units"] = "mm"
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [94mTraceback:[0m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.355Z] Cell [0;32mIn[1], line 2[0m
[2024-12-19T22:12:24.355Z] [1;32m      1[0m [38;5;28;01mwith[39;00m xr[38;5;241m.[39mset_options(keep_attrs[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[2024-12-19T22:12:24.355Z] [0;32m----> 2[0m     ERA5_tmin [38;5;241m=[39m [43mERA5_tmin[49m [38;5;241m-[39m [38;5;241m273.15[39m  [38;5;66;03m# K to ��C[39;00m
[2024-12-19T22:12:24.355Z] [1;32m      3[0m     ERA5_tmin[38;5;241m.[39mattrs[[38;5;124m"[39m[38;5;124munits[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;124m"[39m[38;5;124mdegC[39m[38;5;124m"[39m
[2024-12-19T22:12:24.355Z] [1;32m      5[0m     ERA5_tmax [38;5;241m=[39m ERA5_tmax [38;5;241m-[39m [38;5;241m273.15[39m  [38;5;66;03m# K to ��C[39;00m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 6 ____
[2024-12-19T22:12:24.355Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.355Z] [94mCell 6: Cell execution caused an exception
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] Input:
[2024-12-19T22:12:24.355Z] [0mprint(f"Tmin units: {ERA5_tmin.units}")
[2024-12-19T22:12:24.355Z] print(f"Tmax units: {ERA5_tmax.units}")
[2024-12-19T22:12:24.355Z] print(f"Precipitation units: {ERA5_pr.units}")
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [94mTraceback:[0m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.355Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.355Z] [0;32m----> 1[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mTmin units: [39m[38;5;132;01m{[39;00m[43mERA5_tmin[49m[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.355Z] [1;32m      2[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mTmax units: [39m[38;5;132;01m{[39;00mERA5_tmax[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.355Z] [1;32m      3[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mPrecipitation units: [39m[38;5;132;01m{[39;00mERA5_pr[38;5;241m.[39munits[38;5;132;01m}[39;00m[38;5;124m"[39m)
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 7 ____
[2024-12-19T22:12:24.355Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.355Z] [94mCell 7: Cell execution caused an exception
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] Input:
[2024-12-19T22:12:24.355Z] [0mwith xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.355Z]     # Average the variables
[2024-12-19T22:12:24.355Z]     ERA5_tmin = ERA5_tmin.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.355Z]     ERA5_tmax = ERA5_tmax.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.355Z]     ERA5_pr = ERA5_pr.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z]     # Ensure that the precipitation is non-negative, which can happen with some reanalysis models.
[2024-12-19T22:12:24.355Z]     ERA5_pr = np.maximum(ERA5_pr, 0)
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z]     # Transform them to a dataset such that they can be written with attributes to netcdf
[2024-12-19T22:12:24.355Z]     ERA5_tmin = ERA5_tmin.to_dataset(name="tmin", promote_attrs=True)
[2024-12-19T22:12:24.355Z]     ERA5_tmax = ERA5_tmax.to_dataset(name="tmax", promote_attrs=True)
[2024-12-19T22:12:24.355Z]     ERA5_pr = ERA5_pr.to_dataset(name="pr", promote_attrs=True)
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [94mTraceback:[0m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.355Z] Cell [0;32mIn[1], line 3[0m
[2024-12-19T22:12:24.355Z] [1;32m      1[0m [38;5;28;01mwith[39;00m xr[38;5;241m.[39mset_options(keep_attrs[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[2024-12-19T22:12:24.355Z] [1;32m      2[0m     [38;5;66;03m# Average the variables[39;00m
[2024-12-19T22:12:24.355Z] [0;32m----> 3[0m     ERA5_tmin [38;5;241m=[39m [43mERA5_tmin[49m[38;5;241m.[39mmean({[38;5;124m"[39m[38;5;124mlatitude[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mlongitude[39m[38;5;124m"[39m})
[2024-12-19T22:12:24.355Z] [1;32m      4[0m     ERA5_tmax [38;5;241m=[39m ERA5_tmax[38;5;241m.[39mmean({[38;5;124m"[39m[38;5;124mlatitude[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mlongitude[39m[38;5;124m"[39m})
[2024-12-19T22:12:24.355Z] [1;32m      5[0m     ERA5_pr [38;5;241m=[39m ERA5_pr[38;5;241m.[39mmean({[38;5;124m"[39m[38;5;124mlatitude[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mlongitude[39m[38;5;124m"[39m})
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 8 ____
[2024-12-19T22:12:24.355Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.355Z] [94mCell 8: Cell execution caused an exception
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] Input:
[2024-12-19T22:12:24.355Z] [0m# Check and see if the precipitation makes sense:
[2024-12-19T22:12:24.355Z] ERA5_pr.pr.plot()
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [94mTraceback:[0m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.355Z] Cell [0;32mIn[1], line 2[0m
[2024-12-19T22:12:24.355Z] [1;32m      1[0m [38;5;66;03m# Check and see if the precipitation makes sense:[39;00m
[2024-12-19T22:12:24.355Z] [0;32m----> 2[0m [43mERA5_pr[49m[38;5;241m.[39mpr[38;5;241m.[39mplot()
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m: name 'ERA5_pr' is not defined
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] ____ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 9 ____
[2024-12-19T22:12:24.355Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.355Z] [94mCell 9: Cell execution caused an exception
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] Input:
[2024-12-19T22:12:24.355Z] [0m# Option 1, which is not recommended to use in other notebooks but can be really useful in various other workflows:
[2024-12-19T22:12:24.355Z] with xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.355Z]     # Write to disk.
[2024-12-19T22:12:24.355Z]     tmp = Path(tempfile.mkdtemp())
[2024-12-19T22:12:24.355Z]     ERA5_tmin.to_netcdf(tmp / "ERA5_tmin.nc")
[2024-12-19T22:12:24.355Z]     ERA5_tmax.to_netcdf(tmp / "ERA5_tmax.nc")
[2024-12-19T22:12:24.355Z]     ERA5_pr.to_netcdf(tmp / "ERA5_pr.nc")
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [94mTraceback:[0m
[2024-12-19T22:12:24.355Z] 
[2024-12-19T22:12:24.355Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.355Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.355Z] Cell [0;32mIn[1], line 5[0m
[2024-12-19T22:12:24.355Z] [1;32m      2[0m [38;5;28;01mwith[39;00m xr[38;5;241m.[39mset_options(keep_attrs[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[2024-12-19T22:12:24.355Z] [1;32m      3[0m     [38;5;66;03m# Write to disk.[39;00m
[2024-12-19T22:12:24.355Z] [1;32m      4[0m     tmp [38;5;241m=[39m Path(tempfile[38;5;241m.[39mmkdtemp())
[2024-12-19T22:12:24.355Z] [0;32m----> 5[0m     [43mERA5_tmin[49m[38;5;241m.[39mto_netcdf(tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mERA5_tmin.nc[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.356Z] [1;32m      6[0m     ERA5_tmax[38;5;241m.[39mto_netcdf(tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mERA5_tmax.nc[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.356Z] [1;32m      7[0m     ERA5_pr[38;5;241m.[39mto_netcdf(tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mERA5_pr.nc[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] ___ RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 10 ____
[2024-12-19T22:12:24.356Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.356Z] [94mCell 10: Cell execution caused an exception
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] Input:
[2024-12-19T22:12:24.356Z] [0m# Option 2, which is recommended, in which we prepare a single file that merges all three variables into one netcdf file:
[2024-12-19T22:12:24.356Z] with xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.356Z]     xr.merge([ERA5_tmin, ERA5_tmax, ERA5_pr]).to_netcdf(tmp / "ERA5_weather_data.nc")
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [94mTraceback:[0m
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.356Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.356Z] Cell [0;32mIn[1], line 3[0m
[2024-12-19T22:12:24.356Z] [1;32m      1[0m [38;5;66;03m# Option 2, which is recommended, in which we prepare a single file that merges all three variables into one netcdf file:[39;00m
[2024-12-19T22:12:24.356Z] [1;32m      2[0m [38;5;28;01mwith[39;00m xr[38;5;241m.[39mset_options(keep_attrs[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[2024-12-19T22:12:24.356Z] [0;32m----> 3[0m     xr[38;5;241m.[39mmerge([[43mERA5_tmin[49m, ERA5_tmax, ERA5_pr])[38;5;241m.[39mto_netcdf(tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mERA5_weather_data.nc[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [0;31mNameError[0m: name 'ERA5_tmin' is not defined
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 10 _
[2024-12-19T22:12:24.356Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.356Z] [94mCell 10: Cell execution caused an exception
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] Input:
[2024-12-19T22:12:24.356Z] [0m# Regenerate the ERA5 data to be sure. In an operational context, you could combine everything onto one notebook and ensure that the
[2024-12-19T22:12:24.356Z] # dates and locations are constant!
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] # Get the ERA5 data from the Wasabi/Amazon S3 server.
[2024-12-19T22:12:24.356Z] catalog_name = "https://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml"
[2024-12-19T22:12:24.356Z] cat = intake.open_catalog(catalog_name)
[2024-12-19T22:12:24.356Z] ds = cat.era5_reanalysis_single_levels.to_dask()
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] """
[2024-12-19T22:12:24.356Z] Get the ERA5 data. We will rechunk it to a single chunck to make it compatible with other codes on the platform, especially bias-correction.
[2024-12-19T22:12:24.356Z] We are also taking the daily min and max temperatures as well as the daily total precipitation.
[2024-12-19T22:12:24.356Z] """
[2024-12-19T22:12:24.356Z] # We will add a wrapper to ensure that the following operations will preserve the original data attributes, such as units and variable names.
[2024-12-19T22:12:24.356Z] with xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.356Z]     ERA5_reference = subset.subset_shape(
[2024-12-19T22:12:24.356Z]         ds.sel(time=slice(reference_start_day, reference_end_day)), basin_contour
[2024-12-19T22:12:24.356Z]     ).mean({"latitude", "longitude"})
[2024-12-19T22:12:24.356Z]     ERA5_tmin = (
[2024-12-19T22:12:24.356Z]         ERA5_reference.t2m.resample(time="1D")
[2024-12-19T22:12:24.356Z]         .min()
[2024-12-19T22:12:24.356Z]         .chunk(
[2024-12-19T22:12:24.356Z]             time=-1,
[2024-12-19T22:12:24.356Z]         )
[2024-12-19T22:12:24.356Z]     )
[2024-12-19T22:12:24.356Z]     ERA5_tmax = ERA5_reference.t2m.resample(time="1D").max().chunk(time=-1)
[2024-12-19T22:12:24.356Z]     ERA5_pr = ERA5_reference.tp.resample(time="1D").sum().chunk(time=-1)
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [94mTraceback:[0m
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.356Z] [0;31mImportError[0m                               Traceback (most recent call last)
[2024-12-19T22:12:24.356Z] Cell [0;32mIn[1], line 6[0m
[2024-12-19T22:12:24.356Z] [1;32m      1[0m [38;5;66;03m# Regenerate the ERA5 data to be sure. In an operational context, you could combine everything onto one notebook and ensure that the[39;00m
[2024-12-19T22:12:24.356Z] [1;32m      2[0m [38;5;66;03m# dates and locations are constant![39;00m
[2024-12-19T22:12:24.356Z] [1;32m      3[0m 
[2024-12-19T22:12:24.356Z] [1;32m      4[0m [38;5;66;03m# Get the ERA5 data from the Wasabi/Amazon S3 server.[39;00m
[2024-12-19T22:12:24.356Z] [1;32m      5[0m catalog_name [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttps://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml[39m[38;5;124m"[39m
[2024-12-19T22:12:24.356Z] [0;32m----> 6[0m cat [38;5;241m=[39m [43mintake[49m[38;5;241;43m.[39;49m[43mopen_catalog[49m[43m([49m[43mcatalog_name[49m[43m)[49m
[2024-12-19T22:12:24.356Z] [1;32m      7[0m ds [38;5;241m=[39m cat[38;5;241m.[39mera5_reanalysis_single_levels[38;5;241m.[39mto_dask()
[2024-12-19T22:12:24.356Z] [1;32m      9[0m [38;5;124;03m"""[39;00m
[2024-12-19T22:12:24.356Z] [1;32m     10[0m [38;5;124;03mGet the ERA5 data. We will rechunk it to a single chunck to make it compatible with other codes on the platform, especially bias-correction.[39;00m
[2024-12-19T22:12:24.356Z] [1;32m     11[0m [38;5;124;03mWe are also taking the daily min and max temperatures as well as the daily total precipitation.[39;00m
[2024-12-19T22:12:24.356Z] [1;32m     12[0m [38;5;124;03m"""[39;00m
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py:163[0m, in [0;36mopen_catalog[0;34m(uri, **kwargs)[0m
[2024-12-19T22:12:24.356Z] [1;32m    156[0m [38;5;28;01mif[39;00m driver [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.356Z] [1;32m    157[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-12-19T22:12:24.356Z] [1;32m    158[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnknown catalog driver [39m[38;5;124m'[39m[38;5;132;01m{[39;00mdriver[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m. [39m[38;5;124m"[39m
[2024-12-19T22:12:24.356Z] [1;32m    159[0m         [38;5;124m"[39m[38;5;124mDo you need to install a new driver from the plugin directory? [39m[38;5;124m"[39m
[2024-12-19T22:12:24.356Z] [1;32m    160[0m         [38;5;124m"[39m[38;5;124mhttps://intake.readthedocs.io/en/latest/plugin-directory.html[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.356Z] [1;32m    161[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mCurrent registry: [39m[38;5;132;01m{[39;00m[38;5;28mlist[39m([38;5;28msorted[39m(registry))[38;5;132;01m}[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.356Z] [1;32m    162[0m     )
[2024-12-19T22:12:24.356Z] [0;32m--> 163[0m [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mdriver[49m[43m][49m[43m([49m[43muri[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.356Z] 
[2024-12-19T22:12:24.356Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:549[0m, in [0;36mYAMLFileCatalog.__init__[0;34m(self, path, text, autoreload, **kwargs)[0m
[2024-12-19T22:12:24.356Z] [1;32m    547[0m [38;5;28mself[39m[38;5;241m.[39mfilesystem [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mfs[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[2024-12-19T22:12:24.356Z] [1;32m    548[0m [38;5;28mself[39m[38;5;241m.[39maccess [38;5;241m=[39m [38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m kwargs
[2024-12-19T22:12:24.357Z] [0;32m--> 549[0m [38;5;28;43msuper[39;49m[43m([49m[43mYAMLFileCatalog[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:121[0m, in [0;36mCatalog.__init__[0;34m(self, entries, name, description, metadata, ttl, getenv, getshell, persist_mode, storage_options, user_parameters)[0m
[2024-12-19T22:12:24.357Z] [1;32m    119[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.357Z] [1;32m    120[0m [38;5;28mself[39m[38;5;241m.[39m_entries [38;5;241m=[39m entries [38;5;28;01mif[39;00m entries [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_entries_container()
[2024-12-19T22:12:24.357Z] [0;32m--> 121[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mforce_reload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:179[0m, in [0;36mCatalog.force_reload[0;34m(self)[0m
[2024-12-19T22:12:24.357Z] [1;32m    177[0m [38;5;250m[39m[38;5;124;03m"""Imperative reload data now"""[39;00m
[2024-12-19T22:12:24.357Z] [1;32m    178[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.357Z] [0;32m--> 179[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:582[0m, in [0;36mYAMLFileCatalog._load[0;34m(self, reload)[0m
[2024-12-19T22:12:24.357Z] [1;32m    580[0m     logger[38;5;241m.[39mwarning([38;5;124m"[39m[38;5;124mUse of [39m[38;5;124m'[39m[38;5;124m!template[39m[38;5;124m'[39m[38;5;124m deprecated - fixing[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.357Z] [1;32m    581[0m     text [38;5;241m=[39m text[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m!template [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.357Z] [0;32m--> 582[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparse[49m[43m([49m[43mtext[49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:658[0m, in [0;36mYAMLFileCatalog.parse[0;34m(self, text)[0m
[2024-12-19T22:12:24.357Z] [1;32m    656[0m [38;5;66;03m# Second, we validate the schema and semantics[39;00m
[2024-12-19T22:12:24.357Z] [1;32m    657[0m context [38;5;241m=[39m [38;5;28mdict[39m(root[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_dir)
[2024-12-19T22:12:24.357Z] [0;32m--> 658[0m result [38;5;241m=[39m [43mCatalogParser[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mcontext[49m[38;5;241;43m=[39;49m[43mcontext[49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m)[49m
[2024-12-19T22:12:24.357Z] [1;32m    659[0m [38;5;28;01mif[39;00m result[38;5;241m.[39merrors:
[2024-12-19T22:12:24.357Z] [1;32m    660[0m     [38;5;28;01mraise[39;00m exceptions[38;5;241m.[39mValidationError([38;5;124m"[39m[38;5;124mCatalog [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m has validation errors:[39m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39mpath, [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(result[38;5;241m.[39merrors)), result[38;5;241m.[39merrors)
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:302[0m, in [0;36mCatalogParser.__init__[0;34m(self, data, getenv, getshell, context)[0m
[2024-12-19T22:12:24.357Z] [1;32m    300[0m [38;5;28mself[39m[38;5;241m.[39mgetenv [38;5;241m=[39m getenv
[2024-12-19T22:12:24.357Z] [1;32m    301[0m [38;5;28mself[39m[38;5;241m.[39mgetshell [38;5;241m=[39m getshell
[2024-12-19T22:12:24.357Z] [0;32m--> 302[0m [38;5;28mself[39m[38;5;241m.[39m_data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse[49m[43m([49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:488[0m, in [0;36mCatalogParser._parse[0;34m(self, data)[0m
[2024-12-19T22:12:24.357Z] [1;32m    483[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mcatalog must be a dictionary[39m[38;5;124m"[39m, data)
[2024-12-19T22:12:24.357Z] [1;32m    484[0m     [38;5;28;01mreturn[39;00m
[2024-12-19T22:12:24.357Z] [1;32m    486[0m [38;5;28;01mreturn[39;00m [38;5;28mdict[39m(
[2024-12-19T22:12:24.357Z] [1;32m    487[0m     plugin_sources[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_parse_plugins(data),
[2024-12-19T22:12:24.357Z] [0;32m--> 488[0m     data_sources[38;5;241m=[39m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_sources[49m[43m([49m[43mdata[49m[43m)[49m,
[2024-12-19T22:12:24.357Z] [1;32m    489[0m     metadata[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mmetadata[39m[38;5;124m"[39m, {}),
[2024-12-19T22:12:24.357Z] [1;32m    490[0m     name[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.357Z] [1;32m    491[0m     description[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mdescription[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.357Z] [1;32m    492[0m )
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:475[0m, in [0;36mCatalogParser._parse_data_sources[0;34m(self, data)[0m
[2024-12-19T22:12:24.357Z] [1;32m    472[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mvalue of key [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m must be a dictionary[39m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat(name), data[[38;5;124m"[39m[38;5;124msources[39m[38;5;124m"[39m], name)
[2024-12-19T22:12:24.357Z] [1;32m    473[0m     [38;5;28;01mcontinue[39;00m
[2024-12-19T22:12:24.357Z] [0;32m--> 475[0m obj [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43msource[49m[43m)[49m
[2024-12-19T22:12:24.357Z] [1;32m    476[0m [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.357Z] [1;32m    477[0m     sources[38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:411[0m, in [0;36mCatalogParser._parse_data_source[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.357Z] [1;32m    409[0m     [38;5;28;01mreturn[39;00m remake_instance(data)
[2024-12-19T22:12:24.357Z] [1;32m    410[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.357Z] [0;32m--> 411[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source_local[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.357Z] 
[2024-12-19T22:12:24.357Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:450[0m, in [0;36mCatalogParser._parse_data_source_local[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.357Z] [1;32m    447[0m         [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.357Z] [1;32m    448[0m             ds[[38;5;124m"[39m[38;5;124mparameters[39m[38;5;124m"[39m][38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.358Z] [0;32m--> 450[0m [38;5;28;01mreturn[39;00m [43mLocalCatalogEntry[49m[43m([49m[43mcatalog_dir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_context[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mroot[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mds[49m[43m)[49m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:177[0m, in [0;36mLocalCatalogEntry.__init__[0;34m(self, name, description, driver, direct_access, args, cache, parameters, metadata, catalog_dir, getenv, getshell, catalog)[0m
[2024-12-19T22:12:24.358Z] [1;32m    175[0m [38;5;28mself[39m[38;5;241m.[39m_catalog [38;5;241m=[39m catalog
[2024-12-19T22:12:24.358Z] [1;32m    176[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(driver, [38;5;28mstr[39m):
[2024-12-19T22:12:24.358Z] [0;32m--> 177[0m     dr [38;5;241m=[39m [43mget_plugin_class[49m[43m([49m[43mdriver[49m[43m)[49m
[2024-12-19T22:12:24.358Z] [1;32m    178[0m     [38;5;28mself[39m[38;5;241m.[39m_plugin [38;5;241m=[39m [dr] [38;5;28;01mif[39;00m dr [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m []
[2024-12-19T22:12:24.358Z] [1;32m    179[0m     containers [38;5;241m=[39m [38;5;28mset[39m(p[38;5;241m.[39mcontainer [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_plugin)
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:82[0m, in [0;36mget_plugin_class[0;34m(name)[0m
[2024-12-19T22:12:24.358Z] [1;32m     80[0m [38;5;28;01mdef[39;00m [38;5;21mget_plugin_class[39m(name):
[2024-12-19T22:12:24.358Z] [1;32m     81[0m     [38;5;28;01mif[39;00m name [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.358Z] [0;32m---> 82[0m         [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mname[49m[43m][49m
[2024-12-19T22:12:24.358Z] [1;32m     83[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m.[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m name:
[2024-12-19T22:12:24.358Z] [1;32m     84[0m         logger[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mPlugin name [39m[38;5;124m"[39m[38;5;132;01m%s[39;00m[38;5;124m"[39m[38;5;124m not known[39m[38;5;124m'[39m [38;5;241m%[39m name)
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:32[0m, in [0;36mDriverRegistry.__getitem__[0;34m(self, item)[0m
[2024-12-19T22:12:24.358Z] [1;32m     30[0m it [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mdrivers[38;5;241m.[39menabled_plugins()[item]
[2024-12-19T22:12:24.358Z] [1;32m     31[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(it, entrypoints[38;5;241m.[39mEntryPoint):
[2024-12-19T22:12:24.358Z] [0;32m---> 32[0m     [38;5;28;01mreturn[39;00m [43mit[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.358Z] [1;32m     33[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(it, [38;5;28mstr[39m):
[2024-12-19T22:12:24.358Z] [1;32m     34[0m     [38;5;28;01mreturn[39;00m import_name(it)
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/entrypoints.py:79[0m, in [0;36mEntryPoint.load[0;34m(self)[0m
[2024-12-19T22:12:24.358Z] [1;32m     76[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m([38;5;28mself[39m):
[2024-12-19T22:12:24.358Z] [1;32m     77[0m [38;5;250m    [39m[38;5;124;03m"""Load the object to which this entry point refers.[39;00m
[2024-12-19T22:12:24.358Z] [1;32m     78[0m [38;5;124;03m    """[39;00m
[2024-12-19T22:12:24.358Z] [0;32m---> 79[0m     mod [38;5;241m=[39m [43mimport_module[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodule_name[49m[43m)[49m
[2024-12-19T22:12:24.358Z] [1;32m     80[0m     obj [38;5;241m=[39m mod
[2024-12-19T22:12:24.358Z] [1;32m     81[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mobject_name:
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/importlib/__init__.py:126[0m, in [0;36mimport_module[0;34m(name, package)[0m
[2024-12-19T22:12:24.358Z] [1;32m    124[0m             [38;5;28;01mbreak[39;00m
[2024-12-19T22:12:24.358Z] [1;32m    125[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[2024-12-19T22:12:24.358Z] [0;32m--> 126[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1126[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:1147[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:690[0m, in [0;36m_load_unlocked[0;34m(spec)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap_external>:940[0m, in [0;36mexec_module[0;34m(self, module)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/__init__.py:7[0m
[2024-12-19T22:12:24.358Z] [1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m
[2024-12-19T22:12:24.358Z] [1;32m      6[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake[39;00m
[2024-12-19T22:12:24.358Z] [0;32m----> 7[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mnetcdf[39;00m [38;5;28;01mimport[39;00m NetCDFSource
[2024-12-19T22:12:24.358Z] [1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mopendap[39;00m [38;5;28;01mimport[39;00m OpenDapSource
[2024-12-19T22:12:24.358Z] [1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mraster[39;00m [38;5;28;01mimport[39;00m RasterIOSource
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.358Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/netcdf.py:2[0m
[2024-12-19T22:12:24.358Z] [1;32m      1[0m [38;5;66;03m# -*- coding: utf-8 -*-[39;00m
[2024-12-19T22:12:24.358Z] [0;32m----> 2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake[39;00m [38;5;28;01mimport[39;00m readers
[2024-12-19T22:12:24.358Z] [1;32m      4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m [38;5;28;01mimport[39;00m IntakeXarraySourceAdapter
[2024-12-19T22:12:24.358Z] [1;32m      7[0m [38;5;28;01mclass[39;00m [38;5;21;01mNetCDFSource[39;00m(IntakeXarraySourceAdapter):
[2024-12-19T22:12:24.358Z] 
[2024-12-19T22:12:24.359Z] [0;31mImportError[0m: cannot import name 'readers' from 'intake' (/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py)
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 11 _
[2024-12-19T22:12:24.359Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.359Z] [94mCell 11: Cell execution caused an exception
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] Input:
[2024-12-19T22:12:24.359Z] [0mERA5_pr.plot()
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [94mTraceback:[0m
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.359Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.359Z] [0;32m----> 1[0m [43mERA5_pr[49m[38;5;241m.[39mplot()
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [0;31mNameError[0m: name 'ERA5_pr' is not defined
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 12 _
[2024-12-19T22:12:24.359Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.359Z] [94mCell 12: Cell execution caused an exception
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] Input:
[2024-12-19T22:12:24.359Z] [0m# Here we need to make sure that our units are all in the correct format.
[2024-12-19T22:12:24.359Z] # You can play around with the tools we've seen thus far to explore the units and make sure everything is consistent.
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Let's start with precipitation:
[2024-12-19T22:12:24.359Z] ERA5_pr = xclim.core.units.convert_units_to(ERA5_pr, "mm", context="hydro")
[2024-12-19T22:12:24.359Z] # The CMIP data is a rate rather than an absolute value, so let's get the absolute values:
[2024-12-19T22:12:24.359Z] historical_pr = xclim.core.units.rate2amount(historical_pr)
[2024-12-19T22:12:24.359Z] future_pr = xclim.core.units.rate2amount(future_pr)
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Now we can actually convert units in absolute terms.
[2024-12-19T22:12:24.359Z] historical_pr = xclim.core.units.convert_units_to(historical_pr, "mm", context="hydro")
[2024-12-19T22:12:24.359Z] future_pr = xclim.core.units.convert_units_to(future_pr, "mm", context="hydro")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Now let's do temperature:
[2024-12-19T22:12:24.359Z] ERA5_tmin = xclim.core.units.convert_units_to(ERA5_tmin, "degC")
[2024-12-19T22:12:24.359Z] ERA5_tmax = xclim.core.units.convert_units_to(ERA5_tmax, "degC")
[2024-12-19T22:12:24.359Z] historical_tasmin = xclim.core.units.convert_units_to(historical_tasmin, "degC")
[2024-12-19T22:12:24.359Z] historical_tasmax = xclim.core.units.convert_units_to(historical_tasmax, "degC")
[2024-12-19T22:12:24.359Z] future_tasmin = xclim.core.units.convert_units_to(future_tasmin, "degC")
[2024-12-19T22:12:24.359Z] future_tasmax = xclim.core.units.convert_units_to(future_tasmax, "degC")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [94mTraceback:[0m
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.359Z] Cell [0;32mIn[1], line 5[0m
[2024-12-19T22:12:24.359Z] [1;32m      1[0m [38;5;66;03m# Here we need to make sure that our units are all in the correct format.[39;00m
[2024-12-19T22:12:24.359Z] [1;32m      2[0m [38;5;66;03m# You can play around with the tools we've seen thus far to explore the units and make sure everything is consistent.[39;00m
[2024-12-19T22:12:24.359Z] [1;32m      3[0m 
[2024-12-19T22:12:24.359Z] [1;32m      4[0m [38;5;66;03m# Let's start with precipitation:[39;00m
[2024-12-19T22:12:24.359Z] [0;32m----> 5[0m ERA5_pr [38;5;241m=[39m xclim[38;5;241m.[39mcore[38;5;241m.[39munits[38;5;241m.[39mconvert_units_to([43mERA5_pr[49m, [38;5;124m"[39m[38;5;124mmm[39m[38;5;124m"[39m, context[38;5;241m=[39m[38;5;124m"[39m[38;5;124mhydro[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.359Z] [1;32m      6[0m [38;5;66;03m# The CMIP data is a rate rather than an absolute value, so let's get the absolute values:[39;00m
[2024-12-19T22:12:24.359Z] [1;32m      7[0m historical_pr [38;5;241m=[39m xclim[38;5;241m.[39mcore[38;5;241m.[39munits[38;5;241m.[39mrate2amount(historical_pr)
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [0;31mNameError[0m: name 'ERA5_pr' is not defined
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 13 _
[2024-12-19T22:12:24.359Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.359Z] [94mCell 13: Cell execution caused an exception
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] Input:
[2024-12-19T22:12:24.359Z] [0m# Use xclim utilities (SDBA) to give information on the type of window used for the bias correction.
[2024-12-19T22:12:24.359Z] group_month_window = sdba.utils.Grouper("time.dayofyear", window=15)
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # This is an adjusting function. It builds the tool that will perform the corrections.
[2024-12-19T22:12:24.359Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.359Z]     ref=ERA5_pr, hist=historical_pr, nquantiles=50, kind="+", group=group_month_window
[2024-12-19T22:12:24.359Z] )
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the reference period.
[2024-12-19T22:12:24.359Z] corrected_ref_precip = Adjustment.adjust(historical_pr, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the future period.
[2024-12-19T22:12:24.359Z] corrected_fut_precip = Adjustment.adjust(future_pr, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Ensure that the precipitation is non-negative, which can happen with some climate models.
[2024-12-19T22:12:24.359Z] corrected_ref_precip = corrected_ref_precip.where(corrected_ref_precip > 0, 0)
[2024-12-19T22:12:24.359Z] corrected_fut_precip = corrected_fut_precip.where(corrected_fut_precip > 0, 0)
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Train the model to find the correction factors for the maximum temperature (tasmax) data.
[2024-12-19T22:12:24.359Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.359Z]     ref=ERA5_tmax,
[2024-12-19T22:12:24.359Z]     hist=historical_tasmax,
[2024-12-19T22:12:24.359Z]     nquantiles=50,
[2024-12-19T22:12:24.359Z]     kind="+",
[2024-12-19T22:12:24.359Z]     group=group_month_window,
[2024-12-19T22:12:24.359Z] )
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the reference period.
[2024-12-19T22:12:24.359Z] corrected_ref_tasmax = Adjustment.adjust(historical_tasmax, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the future period.
[2024-12-19T22:12:24.359Z] corrected_fut_tasmax = Adjustment.adjust(future_tasmax, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Train the model to find the correction factors for the minimum temperature (tasmin) data.
[2024-12-19T22:12:24.359Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.359Z]     ref=ERA5_tmin,
[2024-12-19T22:12:24.359Z]     hist=historical_tasmin,
[2024-12-19T22:12:24.359Z]     nquantiles=50,
[2024-12-19T22:12:24.359Z]     kind="+",
[2024-12-19T22:12:24.359Z]     group=group_month_window,
[2024-12-19T22:12:24.359Z] )
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the reference period
[2024-12-19T22:12:24.359Z] corrected_ref_tasmin = Adjustment.adjust(historical_tasmin, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] # Apply the correction factors on the future period
[2024-12-19T22:12:24.359Z] corrected_fut_tasmin = Adjustment.adjust(future_tasmin, interp="linear")
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [94mTraceback:[0m
[2024-12-19T22:12:24.359Z] 
[2024-12-19T22:12:24.359Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.359Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.359Z] Cell [0;32mIn[1], line 6[0m
[2024-12-19T22:12:24.360Z] [1;32m      2[0m group_month_window [38;5;241m=[39m sdba[38;5;241m.[39mutils[38;5;241m.[39mGrouper([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m, window[38;5;241m=[39m[38;5;241m15[39m)
[2024-12-19T22:12:24.360Z] [1;32m      4[0m [38;5;66;03m# This is an adjusting function. It builds the tool that will perform the corrections.[39;00m
[2024-12-19T22:12:24.360Z] [1;32m      5[0m Adjustment [38;5;241m=[39m sdba[38;5;241m.[39mDetrendedQuantileMapping[38;5;241m.[39mtrain(
[2024-12-19T22:12:24.360Z] [0;32m----> 6[0m     ref[38;5;241m=[39m[43mERA5_pr[49m, hist[38;5;241m=[39mhistorical_pr, nquantiles[38;5;241m=[39m[38;5;241m50[39m, kind[38;5;241m=[39m[38;5;124m"[39m[38;5;124m+[39m[38;5;124m"[39m, group[38;5;241m=[39mgroup_month_window
[2024-12-19T22:12:24.360Z] [1;32m      7[0m )
[2024-12-19T22:12:24.360Z] [1;32m      9[0m [38;5;66;03m# Apply the correction factors on the reference period.[39;00m
[2024-12-19T22:12:24.360Z] [1;32m     10[0m corrected_ref_precip [38;5;241m=[39m Adjustment[38;5;241m.[39madjust(historical_pr, interp[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlinear[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31mNameError[0m: name 'ERA5_pr' is not defined
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 14 _
[2024-12-19T22:12:24.360Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.360Z] [94mCell 14: Cell execution caused an exception
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] Input:
[2024-12-19T22:12:24.360Z] [0m# Convert the reference corrected data into netCDF file.
[2024-12-19T22:12:24.360Z] # We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.
[2024-12-19T22:12:24.360Z] ref_dataset = xr.merge(
[2024-12-19T22:12:24.360Z]     [
[2024-12-19T22:12:24.360Z]         corrected_ref_precip.to_dataset(name="pr"),
[2024-12-19T22:12:24.360Z]         corrected_ref_tasmax.to_dataset(name="tasmax"),
[2024-12-19T22:12:24.360Z]         corrected_ref_tasmin.to_dataset(name="tasmin"),
[2024-12-19T22:12:24.360Z]     ]
[2024-12-19T22:12:24.360Z] )
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] # Write to temporary folder.
[2024-12-19T22:12:24.360Z] fn_ref = tmp / "reference_dataset.nc"
[2024-12-19T22:12:24.360Z] ref_dataset.to_netcdf(fn_ref)
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] # Convert the future corrected data into netCDF file.
[2024-12-19T22:12:24.360Z] fut_dataset = xr.merge(
[2024-12-19T22:12:24.360Z]     [
[2024-12-19T22:12:24.360Z]         corrected_fut_precip.to_dataset(name="pr"),
[2024-12-19T22:12:24.360Z]         corrected_fut_tasmax.to_dataset(name="tasmax"),
[2024-12-19T22:12:24.360Z]         corrected_fut_tasmin.to_dataset(name="tasmin"),
[2024-12-19T22:12:24.360Z]     ]
[2024-12-19T22:12:24.360Z] )
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] fn_fut = tmp / "future_dataset.nc"
[2024-12-19T22:12:24.360Z] fut_dataset.to_netcdf(fn_fut)
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [94mTraceback:[0m
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.360Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.360Z] Cell [0;32mIn[1], line 5[0m
[2024-12-19T22:12:24.360Z] [1;32m      1[0m [38;5;66;03m# Convert the reference corrected data into netCDF file.[39;00m
[2024-12-19T22:12:24.360Z] [1;32m      2[0m [38;5;66;03m# We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.[39;00m
[2024-12-19T22:12:24.360Z] [1;32m      3[0m ref_dataset [38;5;241m=[39m xr[38;5;241m.[39mmerge(
[2024-12-19T22:12:24.360Z] [1;32m      4[0m     [
[2024-12-19T22:12:24.360Z] [0;32m----> 5[0m         [43mcorrected_ref_precip[49m[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mpr[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.360Z] [1;32m      6[0m         corrected_ref_tasmax[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmax[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.360Z] [1;32m      7[0m         corrected_ref_tasmin[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmin[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.360Z] [1;32m      8[0m     ]
[2024-12-19T22:12:24.360Z] [1;32m      9[0m )
[2024-12-19T22:12:24.360Z] [1;32m     11[0m [38;5;66;03m# Write to temporary folder.[39;00m
[2024-12-19T22:12:24.360Z] [1;32m     12[0m fn_ref [38;5;241m=[39m tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mreference_dataset.nc[39m[38;5;124m"[39m
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31mNameError[0m: name 'corrected_ref_precip' is not defined
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] _ RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 15 _
[2024-12-19T22:12:24.360Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.360Z] [94mCell 15: Cell execution caused an exception
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] Input:
[2024-12-19T22:12:24.360Z] [0m# Show the corrected future precipitation.
[2024-12-19T22:12:24.360Z] corrected_fut_precip.plot()
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [94mTraceback:[0m
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.360Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.360Z] Cell [0;32mIn[1], line 2[0m
[2024-12-19T22:12:24.360Z] [1;32m      1[0m [38;5;66;03m# Show the corrected future precipitation.[39;00m
[2024-12-19T22:12:24.360Z] [0;32m----> 2[0m [43mcorrected_fut_precip[49m[38;5;241m.[39mplot()
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31mNameError[0m: name 'corrected_fut_precip' is not defined
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 0 ______
[2024-12-19T22:12:24.360Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.360Z] [94mCell 0: Cell execution caused an exception
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] Input:
[2024-12-19T22:12:24.360Z] [0mimport os
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] from hsclient import HydroShare, Token
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] # Authentication method using username and password
[2024-12-19T22:12:24.360Z] """
[2024-12-19T22:12:24.360Z] username = 'XXXXX'
[2024-12-19T22:12:24.360Z] password = 'XXXXX'
[2024-12-19T22:12:24.360Z] hs = HydroShare(username=username, password=password)
[2024-12-19T22:12:24.360Z] """
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] client_id = os.environ.get("HYDROSHARE_AUTH_CLIENT_ID", "<your_client_id>")
[2024-12-19T22:12:24.360Z] access_token = os.environ.get("HYDROSHARE_AUTH_TOKEN", "<your_auth_token>")
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] token = Token(access_token=access_token, token_type="bearer")
[2024-12-19T22:12:24.360Z] hs = HydroShare(client_id=client_id, token=token)
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [94mTraceback:[0m
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.360Z] [0;31mException[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.360Z] Cell [0;32mIn[1], line 16[0m
[2024-12-19T22:12:24.360Z] [1;32m     13[0m access_token [38;5;241m=[39m os[38;5;241m.[39menviron[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mHYDROSHARE_AUTH_TOKEN[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m<your_auth_token>[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.360Z] [1;32m     15[0m token [38;5;241m=[39m Token(access_token[38;5;241m=[39maccess_token, token_type[38;5;241m=[39m[38;5;124m"[39m[38;5;124mbearer[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.360Z] [0;32m---> 16[0m hs [38;5;241m=[39m [43mHydroShare[49m[43m([49m[43mclient_id[49m[38;5;241;43m=[39;49m[43mclient_id[49m[43m,[49m[43m [49m[43mtoken[49m[38;5;241;43m=[39;49m[43mtoken[49m[43m)[49m
[2024-12-19T22:12:24.360Z] 
[2024-12-19T22:12:24.360Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/hsclient/hydroshare.py:1488[0m, in [0;36mHydroShare.__init__[0;34m(self, username, password, host, protocol, port, client_id, token)[0m
[2024-12-19T22:12:24.360Z] [1;32m   1484[0m     [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.360Z] [1;32m   1485[0m         [38;5;28mself[39m[38;5;241m.[39m_hs_session [38;5;241m=[39m HydroShareSession(
[2024-12-19T22:12:24.360Z] [1;32m   1486[0m             host[38;5;241m=[39mhost, protocol[38;5;241m=[39mprotocol, port[38;5;241m=[39mport, client_id[38;5;241m=[39mclient_id, token[38;5;241m=[39mtoken
[2024-12-19T22:12:24.360Z] [1;32m   1487[0m         )
[2024-12-19T22:12:24.361Z] [0;32m-> 1488[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmy_user_info[49m[43m([49m[43m)[49m  [38;5;66;03m# validate credentials[39;00m
[2024-12-19T22:12:24.361Z] [1;32m   1489[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.361Z] [1;32m   1490[0m     [38;5;28mself[39m[38;5;241m.[39m_hs_session [38;5;241m=[39m HydroShareSession(
[2024-12-19T22:12:24.361Z] [1;32m   1491[0m         username[38;5;241m=[39musername, password[38;5;241m=[39mpassword, host[38;5;241m=[39mhost, protocol[38;5;241m=[39mprotocol, port[38;5;241m=[39mport
[2024-12-19T22:12:24.361Z] [1;32m   1492[0m     )
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/hsclient/hydroshare.py:1655[0m, in [0;36mHydroShare.my_user_info[0;34m(self)[0m
[2024-12-19T22:12:24.361Z] [1;32m   1650[0m [38;5;28;01mdef[39;00m [38;5;21mmy_user_info[39m([38;5;28mself[39m):
[2024-12-19T22:12:24.361Z] [1;32m   1651[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[2024-12-19T22:12:24.361Z] [1;32m   1652[0m [38;5;124;03m    Retrieves the user info of the user's credentials provided[39;00m
[2024-12-19T22:12:24.361Z] [1;32m   1653[0m [38;5;124;03m    :return: JSON object representing the user info[39;00m
[2024-12-19T22:12:24.361Z] [1;32m   1654[0m [38;5;124;03m    """[39;00m
[2024-12-19T22:12:24.361Z] [0;32m-> 1655[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_hs_session[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m/hsapi/userInfo/[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mstatus_code[49m[38;5;241;43m=[39;49m[38;5;241;43m200[39;49m[43m)[49m
[2024-12-19T22:12:24.361Z] [1;32m   1656[0m     [38;5;28;01mreturn[39;00m response[38;5;241m.[39mjson()
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/hsclient/hydroshare.py:1419[0m, in [0;36mHydroShareSession.get[0;34m(self, path, status_code, **kwargs)[0m
[2024-12-19T22:12:24.361Z] [1;32m   1417[0m response [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_session[38;5;241m.[39mget(url, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[2024-12-19T22:12:24.361Z] [1;32m   1418[0m [38;5;28;01mif[39;00m response[38;5;241m.[39mstatus_code [38;5;241m!=[39m status_code:
[2024-12-19T22:12:24.361Z] [0;32m-> 1419[0m     [38;5;28;01mraise[39;00m [38;5;167;01mException[39;00m(
[2024-12-19T22:12:24.361Z] [1;32m   1420[0m         [38;5;124m"[39m[38;5;124mFailed GET [39m[38;5;132;01m{}[39;00m[38;5;124m, status_code [39m[38;5;132;01m{}[39;00m[38;5;124m, message [39m[38;5;132;01m{}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(url, response[38;5;241m.[39mstatus_code, response[38;5;241m.[39mcontent)
[2024-12-19T22:12:24.361Z] [1;32m   1421[0m     )
[2024-12-19T22:12:24.361Z] [1;32m   1422[0m [38;5;28;01mreturn[39;00m response
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31mException[0m: Failed GET https://www.hydroshare.org:443/hsapi/userInfo/, status_code 403, message b'{"detail":"Token verification failed"}'
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 1 ______
[2024-12-19T22:12:24.361Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.361Z] [94mCell 1: Cell execution caused an exception
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] Input:
[2024-12-19T22:12:24.361Z] [0mresults = hs.search(subject=["Harvey"])
[2024-12-19T22:12:24.361Z] for r in results:
[2024-12-19T22:12:24.361Z]     print(r.resource_title, ": ", r.resource_id)
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [94mTraceback:[0m
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.361Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.361Z] [0;32m----> 1[0m results [38;5;241m=[39m [43mhs[49m[38;5;241m.[39msearch(subject[38;5;241m=[39m[[38;5;124m"[39m[38;5;124mHarvey[39m[38;5;124m"[39m])
[2024-12-19T22:12:24.361Z] [1;32m      2[0m [38;5;28;01mfor[39;00m r [38;5;129;01min[39;00m results:
[2024-12-19T22:12:24.361Z] [1;32m      3[0m     [38;5;28mprint[39m(r[38;5;241m.[39mresource_title, [38;5;124m"[39m[38;5;124m: [39m[38;5;124m"[39m, r[38;5;241m.[39mresource_id)
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m: name 'hs' is not defined
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 2 ______
[2024-12-19T22:12:24.361Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.361Z] [94mCell 2: Cell execution caused an exception
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] Input:
[2024-12-19T22:12:24.361Z] [0mres = hs.resource("51d1539bf6e94b15ac33f7631228118c", validate=False)
[2024-12-19T22:12:24.361Z] res.files()
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [94mTraceback:[0m
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.361Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.361Z] [0;32m----> 1[0m res [38;5;241m=[39m [43mhs[49m[38;5;241m.[39mresource([38;5;124m"[39m[38;5;124m51d1539bf6e94b15ac33f7631228118c[39m[38;5;124m"[39m, validate[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[2024-12-19T22:12:24.361Z] [1;32m      2[0m res[38;5;241m.[39mfiles()
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m: name 'hs' is not defined
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] ______ RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 3 ______
[2024-12-19T22:12:24.361Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.361Z] [94mCell 3: Cell execution caused an exception
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] Input:
[2024-12-19T22:12:24.361Z] [0mres.file_download("USGS_Harvey_gages_TxLaMsAr.csv", save_path="/tmp")
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [94mTraceback:[0m
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.361Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.361Z] [0;32m----> 1[0m [43mres[49m[38;5;241m.[39mfile_download([38;5;124m"[39m[38;5;124mUSGS_Harvey_gages_TxLaMsAr.csv[39m[38;5;124m"[39m, save_path[38;5;241m=[39m[38;5;124m"[39m[38;5;124m/tmp[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31mNameError[0m: name 'res' is not defined
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 7 _
[2024-12-19T22:12:24.361Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.361Z] [94mCell 7: Cell execution caused an exception
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] Input:
[2024-12-19T22:12:24.361Z] [0mfeatures, statistics, grid0 = stats_resp.get(asobj=True)
[2024-12-19T22:12:24.361Z] lu = statistics[0]
[2024-12-19T22:12:24.361Z] total = sum(lu.values())
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] land_use = {k: (v / total) for (k, v) in lu.items()}
[2024-12-19T22:12:24.361Z] display("Land use ratios", land_use)
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] land_use_pct = {k: f"{np.round(v/total*100, 2)} %" for (k, v) in lu.items()}
[2024-12-19T22:12:24.361Z] display("Land use percentages", land_use_pct)
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [94mTraceback:[0m
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.361Z] [0;31mSSLError[0m                                  Traceback (most recent call last)
[2024-12-19T22:12:24.361Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.361Z] [0;32m----> 1[0m features, statistics, grid0 [38;5;241m=[39m [43mstats_resp[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43masobj[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[2024-12-19T22:12:24.361Z] [1;32m      2[0m lu [38;5;241m=[39m statistics[[38;5;241m0[39m]
[2024-12-19T22:12:24.361Z] [1;32m      3[0m total [38;5;241m=[39m [38;5;28msum[39m(lu[38;5;241m.[39mvalues())
[2024-12-19T22:12:24.361Z] 
[2024-12-19T22:12:24.361Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/outputs.py:41[0m, in [0;36mWPSResult.get[0;34m(self, asobj)[0m
[2024-12-19T22:12:24.361Z] [1;32m     38[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39misSucceded():
[2024-12-19T22:12:24.362Z] [1;32m     39[0m     [38;5;66;03m# TODO: add reason for failure[39;00m
[2024-12-19T22:12:24.362Z] [1;32m     40[0m     [38;5;28;01mraise[39;00m ProcessFailed([38;5;124m"[39m[38;5;124mSorry, process failed.[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.362Z] [0;32m---> 41[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_output[49m[43m([49m[43masobj[49m[43m)[49m
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/outputs.py:50[0m, in [0;36mWPSResult._make_output[0;34m(self, convert_objects)[0m
[2024-12-19T22:12:24.362Z] [1;32m     44[0m Output [38;5;241m=[39m namedtuple(
[2024-12-19T22:12:24.362Z] [1;32m     45[0m     sanitize([38;5;28mself[39m[38;5;241m.[39mprocess[38;5;241m.[39midentifier) [38;5;241m+[39m [38;5;124m"[39m[38;5;124mResponse[39m[38;5;124m"[39m,
[2024-12-19T22:12:24.362Z] [1;32m     46[0m     [sanitize(o[38;5;241m.[39midentifier) [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocessOutputs],
[2024-12-19T22:12:24.362Z] [1;32m     47[0m )
[2024-12-19T22:12:24.362Z] [1;32m     48[0m Output[38;5;241m.[39m[38;5;21m__repr__[39m [38;5;241m=[39m utils[38;5;241m.[39mpretty_repr
[2024-12-19T22:12:24.362Z] [1;32m     49[0m [38;5;28;01mreturn[39;00m Output(
[2024-12-19T22:12:24.362Z] [0;32m---> 50[0m     [38;5;241m*[39m[43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_process_output[49m[43m([49m[43mo[49m[43m,[49m[43m [49m[43mconvert_objects[49m[43m)[49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mo[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mprocessOutputs[49m[43m][49m
[2024-12-19T22:12:24.362Z] [1;32m     51[0m )
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/outputs.py:50[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[2024-12-19T22:12:24.362Z] [1;32m     44[0m Output [38;5;241m=[39m namedtuple(
[2024-12-19T22:12:24.362Z] [1;32m     45[0m     sanitize([38;5;28mself[39m[38;5;241m.[39mprocess[38;5;241m.[39midentifier) [38;5;241m+[39m [38;5;124m"[39m[38;5;124mResponse[39m[38;5;124m"[39m,
[2024-12-19T22:12:24.362Z] [1;32m     46[0m     [sanitize(o[38;5;241m.[39midentifier) [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocessOutputs],
[2024-12-19T22:12:24.362Z] [1;32m     47[0m )
[2024-12-19T22:12:24.362Z] [1;32m     48[0m Output[38;5;241m.[39m[38;5;21m__repr__[39m [38;5;241m=[39m utils[38;5;241m.[39mpretty_repr
[2024-12-19T22:12:24.362Z] [1;32m     49[0m [38;5;28;01mreturn[39;00m Output(
[2024-12-19T22:12:24.362Z] [0;32m---> 50[0m     [38;5;241m*[39m[[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_process_output[49m[43m([49m[43mo[49m[43m,[49m[43m [49m[43mconvert_objects[49m[43m)[49m [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocessOutputs]
[2024-12-19T22:12:24.362Z] [1;32m     51[0m )
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/outputs.py:71[0m, in [0;36mWPSResult._process_output[0;34m(self, output, convert_objects)[0m
[2024-12-19T22:12:24.362Z] [1;32m     68[0m     [38;5;28;01mreturn[39;00m delist(data)
[2024-12-19T22:12:24.362Z] [1;32m     70[0m [38;5;28;01mif[39;00m convert_objects:
[2024-12-19T22:12:24.362Z] [0;32m---> 71[0m     [38;5;28;01mreturn[39;00m [43mconvert[49m[43m([49m[43moutput[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_path[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_converters[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[38;5;241;43m.[39;49m[43mverify[49m[43m)[49m
[2024-12-19T22:12:24.362Z] [1;32m     72[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.362Z] [1;32m     73[0m     [38;5;28;01mreturn[39;00m output[38;5;241m.[39mreference
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/converters.py:359[0m, in [0;36mconvert[0;34m(output, path, converters, verify)[0m
[2024-12-19T22:12:24.362Z] [1;32m    357[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.362Z] [1;32m    358[0m     converter [38;5;241m=[39m [38;5;28mcls[39m(output, path[38;5;241m=[39mpath, verify[38;5;241m=[39mverify)
[2024-12-19T22:12:24.362Z] [0;32m--> 359[0m     out [38;5;241m=[39m [43mconverter[49m[38;5;241;43m.[39;49m[43mconvert[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.362Z] [1;32m    360[0m     [38;5;28;01mif[39;00m converter[38;5;241m.[39mnested:  [38;5;66;03m# Then the output is a list of files.[39;00m
[2024-12-19T22:12:24.362Z] [1;32m    361[0m         out [38;5;241m=[39m [convert(o, path) [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m out]
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/converters.py:160[0m, in [0;36mMetalinkConverter.convert[0;34m(self)[0m
[2024-12-19T22:12:24.362Z] [1;32m    157[0m [38;5;28;01mdef[39;00m [38;5;21mconvert[39m([38;5;28mself[39m):  [38;5;66;03m# noqa: D102[39;00m
[2024-12-19T22:12:24.362Z] [1;32m    158[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmetalink[39;00m [38;5;28;01mimport[39;00m download [38;5;28;01mas[39;00m md
[2024-12-19T22:12:24.362Z] [0;32m--> 160[0m     files [38;5;241m=[39m [43mmd[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43murl[49m[43m,[49m[43m [49m[43mpath[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mpath[49m[43m,[49m[43m [49m[43msegmented[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[2024-12-19T22:12:24.362Z] [1;32m    161[0m     [38;5;28;01mreturn[39;00m files
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:310[0m, in [0;36mget[0;34m(src, path, checksums, force, handlers, segmented, headers)[0m
[2024-12-19T22:12:24.362Z] [1;32m    307[0m     [38;5;28;01mreturn[39;00m download_jigdo(src, path, force, handlers, segmented, headers)
[2024-12-19T22:12:24.362Z] [1;32m    308[0m [38;5;66;03m# assume metalink if ends with .metalink[39;00m
[2024-12-19T22:12:24.362Z] [0;32m--> 310[0m result [38;5;241m=[39m [43mdownload_metalink[49m[43m([49m[43msrc[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[43m [49m[43mforce[49m[43m,[49m[43m [49m[43mhandlers[49m[43m,[49m[43m [49m[43msegmented[49m[43m,[49m[43m [49m[43mheaders[49m[43m)[49m
[2024-12-19T22:12:24.362Z] [1;32m    311[0m [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.362Z] [1;32m    312[0m     [38;5;28;01mreturn[39;00m result
[2024-12-19T22:12:24.362Z] 
[2024-12-19T22:12:24.362Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:925[0m, in [0;36mdownload_metalink[0;34m(src, path, force, handlers, segmented, headers, nocheck)[0m
[2024-12-19T22:12:24.362Z] [1;32m    923[0m [38;5;28;01mif[39;00m OS [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m [38;5;28mlen[39m(ostag) [38;5;241m==[39m [38;5;241m0[39m [38;5;129;01mor[39;00m ostag[[38;5;241m0[39m][38;5;241m.[39mlower() [38;5;241m==[39m OS[38;5;241m.[39mlower():
[2024-12-19T22:12:24.362Z] [1;32m    924[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124many[39m[38;5;124m"[39m [38;5;129;01min[39;00m LANG [38;5;129;01mor[39;00m [38;5;28mlen[39m(langtag) [38;5;241m==[39m [38;5;241m0[39m [38;5;129;01mor[39;00m langtag[38;5;241m.[39mlower() [38;5;129;01min[39;00m LANG:
[2024-12-19T22:12:24.362Z] [0;32m--> 925[0m         result [38;5;241m=[39m [43mdownload_file_node[49m[43m([49m
[2024-12-19T22:12:24.363Z] [1;32m    926[0m [43m            [49m[43mfilenode[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[43m [49m[43mforce[49m[43m,[49m[43m [49m[43mhandlers[49m[43m,[49m[43m [49m[43msegmented[49m[43m,[49m[43m [49m[43mmy_headers[49m
[2024-12-19T22:12:24.363Z] [1;32m    927[0m [43m        [49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    928[0m         [38;5;28;01mif[39;00m result:
[2024-12-19T22:12:24.363Z] [1;32m    929[0m             results[38;5;241m.[39mappend(result)
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:1060[0m, in [0;36mdownload_file_node[0;34m(item, path, force, handler, segmented, headers)[0m
[2024-12-19T22:12:24.363Z] [1;32m   1057[0m local_file [38;5;241m=[39m item[38;5;241m.[39mfilename
[2024-12-19T22:12:24.363Z] [1;32m   1058[0m item[38;5;241m.[39mfilename [38;5;241m=[39m path_join(path, local_file)
[2024-12-19T22:12:24.363Z] [0;32m-> 1060[0m [38;5;28;01mreturn[39;00m [43mdownload_file_urls[49m[43m([49m[43mitem[49m[43m,[49m[43m [49m[43mforce[49m[43m,[49m[43m [49m[43mhandler[49m[43m,[49m[43m [49m[43msegmented[49m[43m,[49m[43m [49m[43mheaders[49m[43m)[49m
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:451[0m, in [0;36mdownload_file_urls[0;34m(metalinkfile, force, handlers, segmented, headers)[0m
[2024-12-19T22:12:24.363Z] [1;32m    449[0m     manager [38;5;241m=[39m NormalManager(metalinkfile, headers)
[2024-12-19T22:12:24.363Z] [1;32m    450[0m     manager[38;5;241m.[39mset_callbacks(handlers)
[2024-12-19T22:12:24.363Z] [0;32m--> 451[0m     [43mmanager[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    453[0m [38;5;28;01mif[39;00m manager [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.363Z] [1;32m    454[0m     [38;5;28;01mif[39;00m manager[38;5;241m.[39mget_status():
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:501[0m, in [0;36mManager.run[0;34m(self, wait)[0m
[2024-12-19T22:12:24.363Z] [1;32m    499[0m         [38;5;28;01mif[39;00m wait [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.363Z] [1;32m    500[0m             time[38;5;241m.[39msleep(wait)
[2024-12-19T22:12:24.363Z] [0;32m--> 501[0m         result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcycle[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    503[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mget_status()
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:587[0m, in [0;36mNormalManager.cycle[0;34m(self)[0m
[2024-12-19T22:12:24.363Z] [1;32m    585[0m manager[38;5;241m.[39mset_time_callback([38;5;28mself[39m[38;5;241m.[39mtime_handler)
[2024-12-19T22:12:24.363Z] [1;32m    586[0m [38;5;28mself[39m[38;5;241m.[39mget_bitrate [38;5;241m=[39m manager[38;5;241m.[39mget_bitrate
[2024-12-19T22:12:24.363Z] [0;32m--> 587[0m [43mmanager[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    588[0m [38;5;66;03m# print self.status[39;00m
[2024-12-19T22:12:24.363Z] [1;32m    589[0m [38;5;28;01mif[39;00m manager[38;5;241m.[39mget_status():
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:501[0m, in [0;36mManager.run[0;34m(self, wait)[0m
[2024-12-19T22:12:24.363Z] [1;32m    499[0m         [38;5;28;01mif[39;00m wait [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.363Z] [1;32m    500[0m             time[38;5;241m.[39msleep(wait)
[2024-12-19T22:12:24.363Z] [0;32m--> 501[0m         result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcycle[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    503[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mget_status()
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/metalink/download.py:673[0m, in [0;36mURLManager.cycle[0;34m(self)[0m
[2024-12-19T22:12:24.363Z] [1;32m    670[0m     [38;5;28mself[39m[38;5;241m.[39mclose_handler()
[2024-12-19T22:12:24.363Z] [1;32m    671[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mFalse[39;00m
[2024-12-19T22:12:24.363Z] [0;32m--> 673[0m block [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtemp[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mblock_size[49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    674[0m [38;5;28mself[39m[38;5;241m.[39mdata[38;5;241m.[39macquire()
[2024-12-19T22:12:24.363Z] [1;32m    675[0m [38;5;28mself[39m[38;5;241m.[39mdata[38;5;241m.[39mwrite(block)
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/http/client.py:473[0m, in [0;36mHTTPResponse.read[0;34m(self, amt)[0m
[2024-12-19T22:12:24.363Z] [1;32m    470[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mlength [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m amt [38;5;241m>[39m [38;5;28mself[39m[38;5;241m.[39mlength:
[2024-12-19T22:12:24.363Z] [1;32m    471[0m     [38;5;66;03m# clip the read to the "end of response"[39;00m
[2024-12-19T22:12:24.363Z] [1;32m    472[0m     amt [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mlength
[2024-12-19T22:12:24.363Z] [0;32m--> 473[0m s [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mfp[38;5;241m.[39mread(amt)
[2024-12-19T22:12:24.363Z] [1;32m    474[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m s [38;5;129;01mand[39;00m amt:
[2024-12-19T22:12:24.363Z] [1;32m    475[0m     [38;5;66;03m# Ideally, we would raise IncompleteRead if the content-length[39;00m
[2024-12-19T22:12:24.363Z] [1;32m    476[0m     [38;5;66;03m# wasn't satisfied, but it might break compatibility.[39;00m
[2024-12-19T22:12:24.363Z] [1;32m    477[0m     [38;5;28mself[39m[38;5;241m.[39m_close_conn()
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/socket.py:718[0m, in [0;36mSocketIO.readinto[0;34m(self, b)[0m
[2024-12-19T22:12:24.363Z] [1;32m    716[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[2024-12-19T22:12:24.363Z] [1;32m    717[0m     [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.363Z] [0;32m--> 718[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sock[49m[38;5;241;43m.[39;49m[43mrecv_into[49m[43m([49m[43mb[49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m    719[0m     [38;5;28;01mexcept[39;00m timeout:
[2024-12-19T22:12:24.363Z] [1;32m    720[0m         [38;5;28mself[39m[38;5;241m.[39m_timeout_occurred [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[2024-12-19T22:12:24.363Z] 
[2024-12-19T22:12:24.363Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/ssl.py:1314[0m, in [0;36mSSLSocket.recv_into[0;34m(self, buffer, nbytes, flags)[0m
[2024-12-19T22:12:24.363Z] [1;32m   1310[0m     [38;5;28;01mif[39;00m flags [38;5;241m!=[39m [38;5;241m0[39m:
[2024-12-19T22:12:24.363Z] [1;32m   1311[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-12-19T22:12:24.363Z] [1;32m   1312[0m           [38;5;124m"[39m[38;5;124mnon-zero flags not allowed in calls to recv_into() on [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m
[2024-12-19T22:12:24.363Z] [1;32m   1313[0m           [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m)
[2024-12-19T22:12:24.363Z] [0;32m-> 1314[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43mnbytes[49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[2024-12-19T22:12:24.363Z] [1;32m   1315[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.364Z] [1;32m   1316[0m     [38;5;28;01mreturn[39;00m [38;5;28msuper[39m()[38;5;241m.[39mrecv_into(buffer, nbytes, flags)
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/ssl.py:1166[0m, in [0;36mSSLSocket.read[0;34m(self, len, buffer)[0m
[2024-12-19T22:12:24.364Z] [1;32m   1164[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.364Z] [1;32m   1165[0m     [38;5;28;01mif[39;00m buffer [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.364Z] [0;32m-> 1166[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sslobj[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;28;43mlen[39;49m[43m,[49m[43m [49m[43mbuffer[49m[43m)[49m
[2024-12-19T22:12:24.364Z] [1;32m   1167[0m     [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.364Z] [1;32m   1168[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_sslobj[38;5;241m.[39mread([38;5;28mlen[39m)
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] [0;31mSSLError[0m: [SYS] unknown error (_ssl.c:2580)
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 8 _
[2024-12-19T22:12:24.364Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.364Z] [94mCell 8: Cell execution caused an exception
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] Input:
[2024-12-19T22:12:24.364Z] [0mterrain_resp = wps.terrain_analysis(
[2024-12-19T22:12:24.364Z]     shape=basin_contour, select_all_touching=True, projected_crs=3978
[2024-12-19T22:12:24.364Z] )
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] properties, dem0 = terrain_resp.get(asobj=True)
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] elevation = properties[0]["elevation"]
[2024-12-19T22:12:24.364Z] slope = properties[0]["slope"]
[2024-12-19T22:12:24.364Z] aspect = properties[0]["aspect"]
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] terrain = {"elevation": elevation, "slope": slope, "aspect": aspect}
[2024-12-19T22:12:24.364Z] display(terrain)
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] [94mTraceback:[0m
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.364Z] [0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connection.py:199[0m, in [0;36mHTTPConnection._new_conn[0;34m(self)[0m
[2024-12-19T22:12:24.364Z] [1;32m    198[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.364Z] [0;32m--> 199[0m     sock [38;5;241m=[39m [43mconnection[49m[38;5;241;43m.[39;49m[43mcreate_connection[49m[43m([49m
[2024-12-19T22:12:24.364Z] [1;32m    200[0m [43m        [49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_dns_host[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mport[49m[43m)[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    201[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    202[0m [43m        [49m[43msource_address[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msource_address[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    203[0m [43m        [49m[43msocket_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msocket_options[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    204[0m [43m    [49m[43m)[49m
[2024-12-19T22:12:24.364Z] [1;32m    205[0m [38;5;28;01mexcept[39;00m socket[38;5;241m.[39mgaierror [38;5;28;01mas[39;00m e:
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/util/connection.py:85[0m, in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[2024-12-19T22:12:24.364Z] [1;32m     84[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.364Z] [0;32m---> 85[0m     [38;5;28;01mraise[39;00m err
[2024-12-19T22:12:24.364Z] [1;32m     86[0m [38;5;28;01mfinally[39;00m:
[2024-12-19T22:12:24.364Z] [1;32m     87[0m     [38;5;66;03m# Break explicitly a reference cycle[39;00m
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/util/connection.py:73[0m, in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[2024-12-19T22:12:24.364Z] [1;32m     72[0m     sock[38;5;241m.[39mbind(source_address)
[2024-12-19T22:12:24.364Z] [0;32m---> 73[0m [43msock[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43msa[49m[43m)[49m
[2024-12-19T22:12:24.364Z] [1;32m     74[0m [38;5;66;03m# Break explicitly a reference cycle[39;00m
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] [0;31mConnectionRefusedError[0m: [Errno 111] Connection refused
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] The above exception was the direct cause of the following exception:
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] [0;31mNewConnectionError[0m                        Traceback (most recent call last)
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connectionpool.py:789[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[2024-12-19T22:12:24.364Z] [1;32m    788[0m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[2024-12-19T22:12:24.364Z] [0;32m--> 789[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[2024-12-19T22:12:24.364Z] [1;32m    790[0m [43m    [49m[43mconn[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    791[0m [43m    [49m[43mmethod[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    792[0m [43m    [49m[43murl[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    793[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    794[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    795[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    796[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    797[0m [43m    [49m[43mretries[49m[38;5;241;43m=[39;49m[43mretries[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    798[0m [43m    [49m[43mresponse_conn[49m[38;5;241;43m=[39;49m[43mresponse_conn[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    799[0m [43m    [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[43mpreload_content[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    800[0m [43m    [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[43mdecode_content[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    801[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mresponse_kw[49m[43m,[49m
[2024-12-19T22:12:24.364Z] [1;32m    802[0m [43m[49m[43m)[49m
[2024-12-19T22:12:24.364Z] [1;32m    804[0m [38;5;66;03m# Everything went great![39;00m
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connectionpool.py:490[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[2024-12-19T22:12:24.364Z] [1;32m    489[0m         new_e [38;5;241m=[39m _wrap_proxy_error(new_e, conn[38;5;241m.[39mproxy[38;5;241m.[39mscheme)
[2024-12-19T22:12:24.364Z] [0;32m--> 490[0m     [38;5;28;01mraise[39;00m new_e
[2024-12-19T22:12:24.364Z] [1;32m    492[0m [38;5;66;03m# conn.request() calls http.client.*.request, not the method in[39;00m
[2024-12-19T22:12:24.364Z] [1;32m    493[0m [38;5;66;03m# urllib3.request. It also calls makefile (recv) on the socket.[39;00m
[2024-12-19T22:12:24.364Z] 
[2024-12-19T22:12:24.364Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connectionpool.py:466[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[2024-12-19T22:12:24.364Z] [1;32m    465[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.365Z] [0;32m--> 466[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_conn[49m[43m([49m[43mconn[49m[43m)[49m
[2024-12-19T22:12:24.365Z] [1;32m    467[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connectionpool.py:1095[0m, in [0;36mHTTPSConnectionPool._validate_conn[0;34m(self, conn)[0m
[2024-12-19T22:12:24.365Z] [1;32m   1094[0m [38;5;28;01mif[39;00m conn[38;5;241m.[39mis_closed:
[2024-12-19T22:12:24.365Z] [0;32m-> 1095[0m     [43mconn[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.365Z] [1;32m   1097[0m [38;5;66;03m# TODO revise this, see https://github.com/urllib3/urllib3/issues/2791[39;00m
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connection.py:693[0m, in [0;36mHTTPSConnection.connect[0;34m(self)[0m
[2024-12-19T22:12:24.365Z] [1;32m    692[0m sock: socket[38;5;241m.[39msocket [38;5;241m|[39m ssl[38;5;241m.[39mSSLSocket
[2024-12-19T22:12:24.365Z] [0;32m--> 693[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m sock [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_new_conn[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.365Z] [1;32m    694[0m server_hostname: [38;5;28mstr[39m [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhost
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connection.py:214[0m, in [0;36mHTTPConnection._new_conn[0;34m(self)[0m
[2024-12-19T22:12:24.365Z] [1;32m    213[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m e:
[2024-12-19T22:12:24.365Z] [0;32m--> 214[0m     [38;5;28;01mraise[39;00m NewConnectionError(
[2024-12-19T22:12:24.365Z] [1;32m    215[0m         [38;5;28mself[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mFailed to establish a new connection: [39m[38;5;132;01m{[39;00me[38;5;132;01m}[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.365Z] [1;32m    216[0m     ) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[2024-12-19T22:12:24.365Z] [1;32m    218[0m [38;5;66;03m# Audit hooks are only available in Python 3.8+[39;00m
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] [0;31mNewConnectionError[0m: <urllib3.connection.HTTPSConnection object at 0x7f70b769edd0>: Failed to establish a new connection: [Errno 111] Connection refused
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] The above exception was the direct cause of the following exception:
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] [0;31mMaxRetryError[0m                             Traceback (most recent call last)
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/requests/adapters.py:667[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[2024-12-19T22:12:24.365Z] [1;32m    666[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.365Z] [0;32m--> 667[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[2024-12-19T22:12:24.365Z] [1;32m    668[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    669[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    670[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    671[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    672[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    673[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    674[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    675[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    676[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    677[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    678[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[2024-12-19T22:12:24.365Z] [1;32m    679[0m [43m    [49m[43m)[49m
[2024-12-19T22:12:24.365Z] [1;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/connectionpool.py:843[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[2024-12-19T22:12:24.365Z] [1;32m    841[0m     new_e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, new_e)
[2024-12-19T22:12:24.365Z] [0;32m--> 843[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[2024-12-19T22:12:24.365Z] [1;32m    844[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43mnew_e[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[2024-12-19T22:12:24.365Z] [1;32m    845[0m [43m[49m[43m)[49m
[2024-12-19T22:12:24.365Z] [1;32m    846[0m retries[38;5;241m.[39msleep()
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/urllib3/util/retry.py:519[0m, in [0;36mRetry.increment[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[2024-12-19T22:12:24.365Z] [1;32m    518[0m     reason [38;5;241m=[39m error [38;5;129;01mor[39;00m ResponseError(cause)
[2024-12-19T22:12:24.365Z] [0;32m--> 519[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, reason) [38;5;28;01mfrom[39;00m [38;5;21;01mreason[39;00m  [38;5;66;03m# type: ignore[arg-type][39;00m
[2024-12-19T22:12:24.365Z] [1;32m    521[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] [0;31mMaxRetryError[0m: HTTPSConnectionPool(host='pavics.ouranos.ca', port=443): Max retries exceeded with url: /twitcher/ows/proxy/raven/wps (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f70b769edd0>: Failed to establish a new connection: [Errno 111] Connection refused'))
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] During handling of the above exception, another exception occurred:
[2024-12-19T22:12:24.365Z] 
[2024-12-19T22:12:24.365Z] [0;31mConnectionError[0m                           Traceback (most recent call last)
[2024-12-19T22:12:24.365Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.365Z] [0;32m----> 1[0m terrain_resp [38;5;241m=[39m [43mwps[49m[38;5;241;43m.[39;49m[43mterrain_analysis[49m[43m([49m
[2024-12-19T22:12:24.366Z] [1;32m      2[0m [43m    [49m[43mshape[49m[38;5;241;43m=[39;49m[43mbasin_contour[49m[43m,[49m[43m [49m[43mselect_all_touching[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mprojected_crs[49m[38;5;241;43m=[39;49m[38;5;241;43m3978[39;49m
[2024-12-19T22:12:24.366Z] [1;32m      3[0m [43m)[49m
[2024-12-19T22:12:24.366Z] [1;32m      5[0m properties, dem0 [38;5;241m=[39m terrain_resp[38;5;241m.[39mget(asobj[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[2024-12-19T22:12:24.366Z] [1;32m      7[0m elevation [38;5;241m=[39m properties[[38;5;241m0[39m][[38;5;124m"[39m[38;5;124melevation[39m[38;5;124m"[39m]
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m</opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/base.py-313>:5[0m, in [0;36mterrain_analysis[0;34m(self, shape, projected_crs, raster, select_all_touching, output_formats)[0m
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/birdy/client/base.py:381[0m, in [0;36mWPSClient._execute[0;34m(self, pid, **kwargs)[0m
[2024-12-19T22:12:24.366Z] [1;32m    378[0m mode [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_processes[pid][38;5;241m.[39mstoreSupported [38;5;28;01melse[39;00m SYNC
[2024-12-19T22:12:24.366Z] [1;32m    380[0m [38;5;28;01mtry[39;00m:
[2024-12-19T22:12:24.366Z] [0;32m--> 381[0m     wps_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_wps[49m[38;5;241;43m.[39;49m[43mexecute[49m[43m([49m
[2024-12-19T22:12:24.366Z] [1;32m    382[0m [43m        [49m[43mpid[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    383[0m [43m        [49m[43minputs[49m[38;5;241;43m=[39;49m[43mwps_inputs[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    384[0m [43m        [49m[43moutput[49m[38;5;241;43m=[39;49m[43mwps_outputs[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    385[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    386[0m [43m        [49m[43mlineage[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_lineage[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    387[0m [43m    [49m[43m)[49m
[2024-12-19T22:12:24.366Z] [1;32m    389[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_interactive [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_processes[pid][38;5;241m.[39mstatusSupported:
[2024-12-19T22:12:24.366Z] [1;32m    390[0m         [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_notebook:
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/owslib/wps.py:362[0m, in [0;36mWebProcessingService.execute[0;34m(self, identifier, inputs, output, mode, lineage, request, response)[0m
[2024-12-19T22:12:24.366Z] [1;32m    360[0m [38;5;66;03m# submit the request to the live server[39;00m
[2024-12-19T22:12:24.366Z] [1;32m    361[0m [38;5;28;01mif[39;00m response [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.366Z] [0;32m--> 362[0m     response [38;5;241m=[39m [43mexecution[49m[38;5;241;43m.[39;49m[43msubmitRequest[49m[43m([49m[43mrequest[49m[43m)[49m
[2024-12-19T22:12:24.366Z] [1;32m    363[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.366Z] [1;32m    364[0m     response [38;5;241m=[39m etree[38;5;241m.[39mfromstring(response)
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/owslib/wps.py:925[0m, in [0;36mWPSExecution.submitRequest[0;34m(self, request)[0m
[2024-12-19T22:12:24.366Z] [1;32m    919[0m [38;5;28mself[39m[38;5;241m.[39mrequest [38;5;241m=[39m request
[2024-12-19T22:12:24.366Z] [1;32m    920[0m reader [38;5;241m=[39m WPSExecuteReader(
[2024-12-19T22:12:24.366Z] [1;32m    921[0m     auth[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mauth,
[2024-12-19T22:12:24.366Z] [1;32m    922[0m     language[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlanguage,
[2024-12-19T22:12:24.366Z] [1;32m    923[0m     timeout[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mtimeout,
[2024-12-19T22:12:24.366Z] [1;32m    924[0m )
[2024-12-19T22:12:24.366Z] [0;32m--> 925[0m response [38;5;241m=[39m [43mreader[49m[38;5;241;43m.[39;49m[43mreadFromUrl[49m[43m([49m
[2024-12-19T22:12:24.366Z] [1;32m    926[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43murl[49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mPost[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mheaders[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mheaders[49m[43m)[49m
[2024-12-19T22:12:24.366Z] [1;32m    927[0m [38;5;28mself[39m[38;5;241m.[39mresponse [38;5;241m=[39m response
[2024-12-19T22:12:24.366Z] [1;32m    928[0m [38;5;28;01mreturn[39;00m response
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/owslib/wps.py:599[0m, in [0;36mWPSExecuteReader.readFromUrl[0;34m(self, url, data, method, username, password, headers, verify, cert)[0m
[2024-12-19T22:12:24.366Z] [1;32m    592[0m [38;5;28;01mdef[39;00m [38;5;21mreadFromUrl[39m([38;5;28mself[39m, url, data[38;5;241m=[39m{}, method[38;5;241m=[39m[38;5;124m'[39m[38;5;124mGet[39m[38;5;124m'[39m, username[38;5;241m=[39m[38;5;28;01mNone[39;00m, password[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[2024-12-19T22:12:24.366Z] [1;32m    593[0m                 headers[38;5;241m=[39m[38;5;28;01mNone[39;00m, verify[38;5;241m=[39m[38;5;28;01mNone[39;00m, cert[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[2024-12-19T22:12:24.366Z] [1;32m    594[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[2024-12-19T22:12:24.366Z] [1;32m    595[0m [38;5;124;03m    Reads a WPS status document from a remote service and returns the XML etree object.[39;00m
[2024-12-19T22:12:24.366Z] [1;32m    596[0m [38;5;124;03m    :param str url: the URL to submit the GET/POST request to.[39;00m
[2024-12-19T22:12:24.366Z] [1;32m    597[0m [38;5;124;03m    """[39;00m
[2024-12-19T22:12:24.366Z] [0;32m--> 599[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_readFromUrl[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mmethod[49m[43m,[49m[43m [49m[43musername[49m[38;5;241;43m=[39;49m[43musername[49m[43m,[49m[43m [49m[43mpassword[49m[38;5;241;43m=[39;49m[43mpassword[49m[43m,[49m
[2024-12-19T22:12:24.366Z] [1;32m    600[0m [43m                             [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m[43m,[49m[43m [49m[43mcert[49m[38;5;241;43m=[39;49m[43mcert[49m[43m)[49m
[2024-12-19T22:12:24.366Z] 
[2024-12-19T22:12:24.366Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/owslib/wps.py:510[0m, in [0;36mWPSReader._readFromUrl[0;34m(self, url, data, timeout, method, username, password, headers, verify, cert)[0m
[2024-12-19T22:12:24.366Z] [1;32m    507[0m     [38;5;28;01mreturn[39;00m etree[38;5;241m.[39mfromstring(u[38;5;241m.[39mread())
[2024-12-19T22:12:24.366Z] [1;32m    509[0m [38;5;28;01melif[39;00m method [38;5;241m==[39m [38;5;124m'[39m[38;5;124mPost[39m[38;5;124m'[39m:
[2024-12-19T22:12:24.366Z] [0;32m--> 510[0m     u [38;5;241m=[39m [43mopenURL[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mPost[39;49m[38;5;124;43m'[39;49m[43m,[49m
[2024-12-19T22:12:24.367Z] [1;32m    511[0m [43m                [49m[43musername[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[38;5;241;43m.[39;49m[43musername[49m[43m,[49m[43m [49m[43mpassword[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[38;5;241;43m.[39;49m[43mpassword[49m[43m,[49m
[2024-12-19T22:12:24.367Z] [1;32m    512[0m [43m                [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[38;5;241;43m.[39;49m[43mverify[49m[43m,[49m[43m [49m[43mcert[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[38;5;241;43m.[39;49m[43mcert[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m)[49m
[2024-12-19T22:12:24.367Z] [1;32m    513[0m     [38;5;28;01mreturn[39;00m etree[38;5;241m.[39mfromstring(u[38;5;241m.[39mread())
[2024-12-19T22:12:24.367Z] [1;32m    515[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/owslib/util.py:207[0m, in [0;36mopenURL[0;34m(url_base, data, method, cookies, username, password, timeout, headers, verify, cert, auth)[0m
[2024-12-19T22:12:24.367Z] [1;32m    204[0m [38;5;28;01mif[39;00m cookies [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[2024-12-19T22:12:24.367Z] [1;32m    205[0m     rkwargs[[38;5;124m'[39m[38;5;124mcookies[39m[38;5;124m'[39m] [38;5;241m=[39m cookies
[2024-12-19T22:12:24.367Z] [0;32m--> 207[0m req [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m.[39;49m[43mupper[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43murl_base[49m[43m,[49m[43m [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mrkwargs[49m[43m)[49m
[2024-12-19T22:12:24.367Z] [1;32m    209[0m [38;5;28;01mif[39;00m req[38;5;241m.[39mstatus_code [38;5;129;01min[39;00m [[38;5;241m400[39m, [38;5;241m401[39m]:
[2024-12-19T22:12:24.367Z] [1;32m    210[0m     [38;5;28;01mraise[39;00m ServiceException(req[38;5;241m.[39mtext)
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/requests/api.py:59[0m, in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[2024-12-19T22:12:24.367Z] [1;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[2024-12-19T22:12:24.367Z] [1;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[2024-12-19T22:12:24.367Z] [1;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[2024-12-19T22:12:24.367Z] [1;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[2024-12-19T22:12:24.367Z] [0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/requests/sessions.py:589[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[2024-12-19T22:12:24.367Z] [1;32m    584[0m send_kwargs [38;5;241m=[39m {
[2024-12-19T22:12:24.367Z] [1;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[2024-12-19T22:12:24.367Z] [1;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[2024-12-19T22:12:24.367Z] [1;32m    587[0m }
[2024-12-19T22:12:24.367Z] [1;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[2024-12-19T22:12:24.367Z] [0;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[2024-12-19T22:12:24.367Z] [1;32m    591[0m [38;5;28;01mreturn[39;00m resp
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/requests/sessions.py:703[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[2024-12-19T22:12:24.367Z] [1;32m    700[0m start [38;5;241m=[39m preferred_clock()
[2024-12-19T22:12:24.367Z] [1;32m    702[0m [38;5;66;03m# Send the request[39;00m
[2024-12-19T22:12:24.367Z] [0;32m--> 703[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.367Z] [1;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[2024-12-19T22:12:24.367Z] [1;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/requests/adapters.py:700[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[2024-12-19T22:12:24.367Z] [1;32m    696[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[2024-12-19T22:12:24.367Z] [1;32m    697[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[2024-12-19T22:12:24.367Z] [1;32m    698[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[2024-12-19T22:12:24.367Z] [0;32m--> 700[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[2024-12-19T22:12:24.367Z] [1;32m    702[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[2024-12-19T22:12:24.367Z] [1;32m    703[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] [0;31mConnectionError[0m: HTTPSConnectionPool(host='pavics.ouranos.ca', port=443): Max retries exceeded with url: /twitcher/ows/proxy/raven/wps (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f70b769edd0>: Failed to establish a new connection: [Errno 111] Connection refused'))
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 9 _
[2024-12-19T22:12:24.367Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.367Z] [94mCell 9: Cell execution caused an exception
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] Input:
[2024-12-19T22:12:24.367Z] [0mall_properties = {**shape_info, **land_use, **terrain}
[2024-12-19T22:12:24.367Z] display(all_properties)
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] [94mTraceback:[0m
[2024-12-19T22:12:24.367Z] 
[2024-12-19T22:12:24.367Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.367Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.367Z] Cell [0;32mIn[1], line 1[0m
[2024-12-19T22:12:24.368Z] [0;32m----> 1[0m all_properties [38;5;241m=[39m {[38;5;241m*[39m[38;5;241m*[39mshape_info, [38;5;241m*[39m[38;5;241m*[39m[43mland_use[49m, [38;5;241m*[39m[38;5;241m*[39mterrain}
[2024-12-19T22:12:24.368Z] [1;32m      2[0m display(all_properties)
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] [0;31mNameError[0m: name 'land_use' is not defined
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 10 _
[2024-12-19T22:12:24.368Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.368Z] [94mCell 10: Cell execution caused an exception
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] Input:
[2024-12-19T22:12:24.368Z] [0m# Get the ERA5 data from the Wasabi/Amazon S3 server.
[2024-12-19T22:12:24.368Z] catalog_name = "https://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml"
[2024-12-19T22:12:24.368Z] cat = intake.open_catalog(catalog_name)
[2024-12-19T22:12:24.368Z] ds = cat.era5_reanalysis_single_levels.to_dask()
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] # Set the date to the midnight of the given day.
[2024-12-19T22:12:24.368Z] ds = ds.assign_coords(time=ds.time.dt.floor("D"))
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] """
[2024-12-19T22:12:24.368Z] Get the ERA5 data. 
[2024-12-19T22:12:24.368Z] We will rechunk it to a single chunk to make it compatible with other codes on the platform especially bias-correction.
[2024-12-19T22:12:24.368Z] We are also taking the daily min and max temperatures as well as the daily total precipitation.
[2024-12-19T22:12:24.368Z] """
[2024-12-19T22:12:24.368Z] # We will add a wrapper to ensure that the following operations will preserve the original data attributes,
[2024-12-19T22:12:24.368Z] # such as units and variable names.
[2024-12-19T22:12:24.368Z] with xr.set_options(keep_attrs=True):
[2024-12-19T22:12:24.368Z]     ERA5_reference = subset.subset_shape(
[2024-12-19T22:12:24.368Z]         ds.sel(time=slice(reference_start_day, reference_end_day)), basin_contour
[2024-12-19T22:12:24.368Z]     )
[2024-12-19T22:12:24.368Z]     ERA5_tmin = ERA5_reference.t2m.resample(time="1D").min().chunk(time=-1)
[2024-12-19T22:12:24.368Z]     ERA5_tmax = ERA5_reference.t2m.resample(time="1D").max().chunk(time=-1)
[2024-12-19T22:12:24.368Z]     ERA5_pr = ERA5_reference.tp.resample(time="1D").sum().chunk(time=-1)
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     # Change the units
[2024-12-19T22:12:24.368Z]     ERA5_tmin = ERA5_tmin - 273.15  # K to ��C
[2024-12-19T22:12:24.368Z]     ERA5_tmin.attrs["units"] = "degC"
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     ERA5_tmax = ERA5_tmax - 273.15  # K to ��C
[2024-12-19T22:12:24.368Z]     ERA5_tmax.attrs["units"] = "degC"
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     ERA5_pr = ERA5_pr * 1000  # m to mm
[2024-12-19T22:12:24.368Z]     ERA5_pr.attrs["units"] = "mm"
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     # Average the variables spatially
[2024-12-19T22:12:24.368Z]     ERA5_tmin = ERA5_tmin.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.368Z]     ERA5_tmax = ERA5_tmax.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.368Z]     ERA5_pr = ERA5_pr.mean({"latitude", "longitude"})
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     # Ensure that the precipitation is non-negative, which can happen with some reanalysis models.
[2024-12-19T22:12:24.368Z]     ERA5_pr = np.maximum(ERA5_pr, 0)
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     # Transform them to a dataset such that they can be written with attributes to netcdf
[2024-12-19T22:12:24.368Z]     ERA5_tmin = ERA5_tmin.to_dataset(name="tmin", promote_attrs=True)
[2024-12-19T22:12:24.368Z]     ERA5_tmax = ERA5_tmax.to_dataset(name="tmax", promote_attrs=True)
[2024-12-19T22:12:24.368Z]     ERA5_pr = ERA5_pr.to_dataset(name="pr", promote_attrs=True)
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z]     # Write to disk.
[2024-12-19T22:12:24.368Z]     # Here is where we write to disk and where the notebook will fail if running it from the original location on the server (which is read-only).
[2024-12-19T22:12:24.368Z]     # Please move the notebooks to your writable-workspace.
[2024-12-19T22:12:24.368Z]     ERA5_weather = xr.merge([ERA5_tmin, ERA5_tmax, ERA5_pr])
[2024-12-19T22:12:24.368Z]     ERA5_weather.to_netcdf(tmp / "ERA5_meteo_data.nc")
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] [94mTraceback:[0m
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.368Z] [0;31mImportError[0m                               Traceback (most recent call last)
[2024-12-19T22:12:24.368Z] Cell [0;32mIn[1], line 3[0m
[2024-12-19T22:12:24.368Z] [1;32m      1[0m [38;5;66;03m# Get the ERA5 data from the Wasabi/Amazon S3 server.[39;00m
[2024-12-19T22:12:24.368Z] [1;32m      2[0m catalog_name [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttps://raw.githubusercontent.com/hydrocloudservices/catalogs/main/catalogs/atmosphere.yaml[39m[38;5;124m"[39m
[2024-12-19T22:12:24.368Z] [0;32m----> 3[0m cat [38;5;241m=[39m [43mintake[49m[38;5;241;43m.[39;49m[43mopen_catalog[49m[43m([49m[43mcatalog_name[49m[43m)[49m
[2024-12-19T22:12:24.368Z] [1;32m      4[0m ds [38;5;241m=[39m cat[38;5;241m.[39mera5_reanalysis_single_levels[38;5;241m.[39mto_dask()
[2024-12-19T22:12:24.368Z] [1;32m      6[0m [38;5;66;03m# Set the date to the midnight of the given day.[39;00m
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py:163[0m, in [0;36mopen_catalog[0;34m(uri, **kwargs)[0m
[2024-12-19T22:12:24.368Z] [1;32m    156[0m [38;5;28;01mif[39;00m driver [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.368Z] [1;32m    157[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[2024-12-19T22:12:24.368Z] [1;32m    158[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnknown catalog driver [39m[38;5;124m'[39m[38;5;132;01m{[39;00mdriver[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m. [39m[38;5;124m"[39m
[2024-12-19T22:12:24.368Z] [1;32m    159[0m         [38;5;124m"[39m[38;5;124mDo you need to install a new driver from the plugin directory? [39m[38;5;124m"[39m
[2024-12-19T22:12:24.368Z] [1;32m    160[0m         [38;5;124m"[39m[38;5;124mhttps://intake.readthedocs.io/en/latest/plugin-directory.html[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.368Z] [1;32m    161[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mCurrent registry: [39m[38;5;132;01m{[39;00m[38;5;28mlist[39m([38;5;28msorted[39m(registry))[38;5;132;01m}[39;00m[38;5;124m"[39m
[2024-12-19T22:12:24.368Z] [1;32m    162[0m     )
[2024-12-19T22:12:24.368Z] [0;32m--> 163[0m [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mdriver[49m[43m][49m[43m([49m[43muri[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:549[0m, in [0;36mYAMLFileCatalog.__init__[0;34m(self, path, text, autoreload, **kwargs)[0m
[2024-12-19T22:12:24.368Z] [1;32m    547[0m [38;5;28mself[39m[38;5;241m.[39mfilesystem [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mfs[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[2024-12-19T22:12:24.368Z] [1;32m    548[0m [38;5;28mself[39m[38;5;241m.[39maccess [38;5;241m=[39m [38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m kwargs
[2024-12-19T22:12:24.368Z] [0;32m--> 549[0m [38;5;28;43msuper[39;49m[43m([49m[43mYAMLFileCatalog[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[2024-12-19T22:12:24.368Z] 
[2024-12-19T22:12:24.368Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:121[0m, in [0;36mCatalog.__init__[0;34m(self, entries, name, description, metadata, ttl, getenv, getshell, persist_mode, storage_options, user_parameters)[0m
[2024-12-19T22:12:24.368Z] [1;32m    119[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.369Z] [1;32m    120[0m [38;5;28mself[39m[38;5;241m.[39m_entries [38;5;241m=[39m entries [38;5;28;01mif[39;00m entries [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39m_make_entries_container()
[2024-12-19T22:12:24.369Z] [0;32m--> 121[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mforce_reload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/base.py:179[0m, in [0;36mCatalog.force_reload[0;34m(self)[0m
[2024-12-19T22:12:24.369Z] [1;32m    177[0m [38;5;250m[39m[38;5;124;03m"""Imperative reload data now"""[39;00m
[2024-12-19T22:12:24.369Z] [1;32m    178[0m [38;5;28mself[39m[38;5;241m.[39mupdated [38;5;241m=[39m time[38;5;241m.[39mtime()
[2024-12-19T22:12:24.369Z] [0;32m--> 179[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:582[0m, in [0;36mYAMLFileCatalog._load[0;34m(self, reload)[0m
[2024-12-19T22:12:24.369Z] [1;32m    580[0m     logger[38;5;241m.[39mwarning([38;5;124m"[39m[38;5;124mUse of [39m[38;5;124m'[39m[38;5;124m!template[39m[38;5;124m'[39m[38;5;124m deprecated - fixing[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.369Z] [1;32m    581[0m     text [38;5;241m=[39m text[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124m!template [39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.369Z] [0;32m--> 582[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparse[49m[43m([49m[43mtext[49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:658[0m, in [0;36mYAMLFileCatalog.parse[0;34m(self, text)[0m
[2024-12-19T22:12:24.369Z] [1;32m    656[0m [38;5;66;03m# Second, we validate the schema and semantics[39;00m
[2024-12-19T22:12:24.369Z] [1;32m    657[0m context [38;5;241m=[39m [38;5;28mdict[39m(root[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_dir)
[2024-12-19T22:12:24.369Z] [0;32m--> 658[0m result [38;5;241m=[39m [43mCatalogParser[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mcontext[49m[38;5;241;43m=[39;49m[43mcontext[49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m)[49m
[2024-12-19T22:12:24.369Z] [1;32m    659[0m [38;5;28;01mif[39;00m result[38;5;241m.[39merrors:
[2024-12-19T22:12:24.369Z] [1;32m    660[0m     [38;5;28;01mraise[39;00m exceptions[38;5;241m.[39mValidationError([38;5;124m"[39m[38;5;124mCatalog [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m has validation errors:[39m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;28mself[39m[38;5;241m.[39mpath, [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(result[38;5;241m.[39merrors)), result[38;5;241m.[39merrors)
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:302[0m, in [0;36mCatalogParser.__init__[0;34m(self, data, getenv, getshell, context)[0m
[2024-12-19T22:12:24.369Z] [1;32m    300[0m [38;5;28mself[39m[38;5;241m.[39mgetenv [38;5;241m=[39m getenv
[2024-12-19T22:12:24.369Z] [1;32m    301[0m [38;5;28mself[39m[38;5;241m.[39mgetshell [38;5;241m=[39m getshell
[2024-12-19T22:12:24.369Z] [0;32m--> 302[0m [38;5;28mself[39m[38;5;241m.[39m_data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse[49m[43m([49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:488[0m, in [0;36mCatalogParser._parse[0;34m(self, data)[0m
[2024-12-19T22:12:24.369Z] [1;32m    483[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mcatalog must be a dictionary[39m[38;5;124m"[39m, data)
[2024-12-19T22:12:24.369Z] [1;32m    484[0m     [38;5;28;01mreturn[39;00m
[2024-12-19T22:12:24.369Z] [1;32m    486[0m [38;5;28;01mreturn[39;00m [38;5;28mdict[39m(
[2024-12-19T22:12:24.369Z] [1;32m    487[0m     plugin_sources[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_parse_plugins(data),
[2024-12-19T22:12:24.369Z] [0;32m--> 488[0m     data_sources[38;5;241m=[39m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_sources[49m[43m([49m[43mdata[49m[43m)[49m,
[2024-12-19T22:12:24.369Z] [1;32m    489[0m     metadata[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mmetadata[39m[38;5;124m"[39m, {}),
[2024-12-19T22:12:24.369Z] [1;32m    490[0m     name[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mname[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.369Z] [1;32m    491[0m     description[38;5;241m=[39mdata[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mdescription[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.369Z] [1;32m    492[0m )
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:475[0m, in [0;36mCatalogParser._parse_data_sources[0;34m(self, data)[0m
[2024-12-19T22:12:24.369Z] [1;32m    472[0m     [38;5;28mself[39m[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mvalue of key [39m[38;5;124m'[39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;124m must be a dictionary[39m[38;5;124m"[39m [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat(name), data[[38;5;124m"[39m[38;5;124msources[39m[38;5;124m"[39m], name)
[2024-12-19T22:12:24.369Z] [1;32m    473[0m     [38;5;28;01mcontinue[39;00m
[2024-12-19T22:12:24.369Z] [0;32m--> 475[0m obj [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43msource[49m[43m)[49m
[2024-12-19T22:12:24.369Z] [1;32m    476[0m [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.369Z] [1;32m    477[0m     sources[38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:411[0m, in [0;36mCatalogParser._parse_data_source[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.369Z] [1;32m    409[0m     [38;5;28;01mreturn[39;00m remake_instance(data)
[2024-12-19T22:12:24.369Z] [1;32m    410[0m [38;5;28;01melse[39;00m:
[2024-12-19T22:12:24.369Z] [0;32m--> 411[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_data_source_local[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.369Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:450[0m, in [0;36mCatalogParser._parse_data_source_local[0;34m(self, name, data)[0m
[2024-12-19T22:12:24.369Z] [1;32m    447[0m         [38;5;28;01mif[39;00m obj:
[2024-12-19T22:12:24.369Z] [1;32m    448[0m             ds[[38;5;124m"[39m[38;5;124mparameters[39m[38;5;124m"[39m][38;5;241m.[39mappend(obj)
[2024-12-19T22:12:24.369Z] [0;32m--> 450[0m [38;5;28;01mreturn[39;00m [43mLocalCatalogEntry[49m[43m([49m[43mcatalog_dir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_context[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mroot[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m[43m [49m[43mgetenv[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetenv[49m[43m,[49m[43m [49m[43mgetshell[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgetshell[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mds[49m[43m)[49m
[2024-12-19T22:12:24.369Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/catalog/local.py:177[0m, in [0;36mLocalCatalogEntry.__init__[0;34m(self, name, description, driver, direct_access, args, cache, parameters, metadata, catalog_dir, getenv, getshell, catalog)[0m
[2024-12-19T22:12:24.370Z] [1;32m    175[0m [38;5;28mself[39m[38;5;241m.[39m_catalog [38;5;241m=[39m catalog
[2024-12-19T22:12:24.370Z] [1;32m    176[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(driver, [38;5;28mstr[39m):
[2024-12-19T22:12:24.370Z] [0;32m--> 177[0m     dr [38;5;241m=[39m [43mget_plugin_class[49m[43m([49m[43mdriver[49m[43m)[49m
[2024-12-19T22:12:24.370Z] [1;32m    178[0m     [38;5;28mself[39m[38;5;241m.[39m_plugin [38;5;241m=[39m [dr] [38;5;28;01mif[39;00m dr [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m []
[2024-12-19T22:12:24.370Z] [1;32m    179[0m     containers [38;5;241m=[39m [38;5;28mset[39m(p[38;5;241m.[39mcontainer [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_plugin)
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:82[0m, in [0;36mget_plugin_class[0;34m(name)[0m
[2024-12-19T22:12:24.370Z] [1;32m     80[0m [38;5;28;01mdef[39;00m [38;5;21mget_plugin_class[39m(name):
[2024-12-19T22:12:24.370Z] [1;32m     81[0m     [38;5;28;01mif[39;00m name [38;5;129;01min[39;00m registry:
[2024-12-19T22:12:24.370Z] [0;32m---> 82[0m         [38;5;28;01mreturn[39;00m [43mregistry[49m[43m[[49m[43mname[49m[43m][49m
[2024-12-19T22:12:24.370Z] [1;32m     83[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124m.[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m name:
[2024-12-19T22:12:24.370Z] [1;32m     84[0m         logger[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mPlugin name [39m[38;5;124m"[39m[38;5;132;01m%s[39;00m[38;5;124m"[39m[38;5;124m not known[39m[38;5;124m'[39m [38;5;241m%[39m name)
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/source/__init__.py:32[0m, in [0;36mDriverRegistry.__getitem__[0;34m(self, item)[0m
[2024-12-19T22:12:24.370Z] [1;32m     30[0m it [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mdrivers[38;5;241m.[39menabled_plugins()[item]
[2024-12-19T22:12:24.370Z] [1;32m     31[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(it, entrypoints[38;5;241m.[39mEntryPoint):
[2024-12-19T22:12:24.370Z] [0;32m---> 32[0m     [38;5;28;01mreturn[39;00m [43mit[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43m)[49m
[2024-12-19T22:12:24.370Z] [1;32m     33[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(it, [38;5;28mstr[39m):
[2024-12-19T22:12:24.370Z] [1;32m     34[0m     [38;5;28;01mreturn[39;00m import_name(it)
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/entrypoints.py:79[0m, in [0;36mEntryPoint.load[0;34m(self)[0m
[2024-12-19T22:12:24.370Z] [1;32m     76[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m([38;5;28mself[39m):
[2024-12-19T22:12:24.370Z] [1;32m     77[0m [38;5;250m    [39m[38;5;124;03m"""Load the object to which this entry point refers.[39;00m
[2024-12-19T22:12:24.370Z] [1;32m     78[0m [38;5;124;03m    """[39;00m
[2024-12-19T22:12:24.370Z] [0;32m---> 79[0m     mod [38;5;241m=[39m [43mimport_module[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmodule_name[49m[43m)[49m
[2024-12-19T22:12:24.370Z] [1;32m     80[0m     obj [38;5;241m=[39m mod
[2024-12-19T22:12:24.370Z] [1;32m     81[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mobject_name:
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/importlib/__init__.py:126[0m, in [0;36mimport_module[0;34m(name, package)[0m
[2024-12-19T22:12:24.370Z] [1;32m    124[0m             [38;5;28;01mbreak[39;00m
[2024-12-19T22:12:24.370Z] [1;32m    125[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[2024-12-19T22:12:24.370Z] [0;32m--> 126[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1126[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1204[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1176[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:1147[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:690[0m, in [0;36m_load_unlocked[0;34m(spec)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap_external>:940[0m, in [0;36mexec_module[0;34m(self, module)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m<frozen importlib._bootstrap>:241[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/__init__.py:7[0m
[2024-12-19T22:12:24.370Z] [1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m
[2024-12-19T22:12:24.370Z] [1;32m      6[0m [38;5;28;01mimport[39;00m [38;5;21;01mintake[39;00m
[2024-12-19T22:12:24.370Z] [0;32m----> 7[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mnetcdf[39;00m [38;5;28;01mimport[39;00m NetCDFSource
[2024-12-19T22:12:24.370Z] [1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mopendap[39;00m [38;5;28;01mimport[39;00m OpenDapSource
[2024-12-19T22:12:24.370Z] [1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mraster[39;00m [38;5;28;01mimport[39;00m RasterIOSource
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] File [0;32m/opt/conda/envs/birdy/lib/python3.11/site-packages/intake_xarray/netcdf.py:2[0m
[2024-12-19T22:12:24.370Z] [1;32m      1[0m [38;5;66;03m# -*- coding: utf-8 -*-[39;00m
[2024-12-19T22:12:24.370Z] [0;32m----> 2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake[39;00m [38;5;28;01mimport[39;00m readers
[2024-12-19T22:12:24.370Z] [1;32m      4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mintake_xarray[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbase[39;00m [38;5;28;01mimport[39;00m IntakeXarraySourceAdapter
[2024-12-19T22:12:24.370Z] [1;32m      7[0m [38;5;28;01mclass[39;00m [38;5;21;01mNetCDFSource[39;00m(IntakeXarraySourceAdapter):
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] [0;31mImportError[0m: cannot import name 'readers' from 'intake' (/opt/conda/envs/birdy/lib/python3.11/site-packages/intake/__init__.py)
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 13 _
[2024-12-19T22:12:24.370Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.370Z] [94mCell 13: Cell execution caused an exception
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] Input:
[2024-12-19T22:12:24.370Z] [0m# Use xclim utilities (SDBA) to give information on the type of window used for the bias correction.
[2024-12-19T22:12:24.370Z] group_month_window = sdba.utils.Grouper("time.dayofyear", window=15)
[2024-12-19T22:12:24.370Z] 
[2024-12-19T22:12:24.370Z] # This is an adjusting function.
[2024-12-19T22:12:24.370Z] # It builds the tool that will perform the corrections.
[2024-12-19T22:12:24.371Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.371Z]     ref=ERA5_weather.pr,
[2024-12-19T22:12:24.371Z]     hist=historical_pr,
[2024-12-19T22:12:24.371Z]     nquantiles=50,
[2024-12-19T22:12:24.371Z]     kind="+",
[2024-12-19T22:12:24.371Z]     group=group_month_window,
[2024-12-19T22:12:24.371Z] )
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the reference period.
[2024-12-19T22:12:24.371Z] corrected_ref_precip = Adjustment.adjust(historical_pr, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the future period.
[2024-12-19T22:12:24.371Z] corrected_fut_precip = Adjustment.adjust(future_pr, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Ensure that the precipitation is non-negative, which can happen with some climate models.
[2024-12-19T22:12:24.371Z] corrected_ref_precip = corrected_ref_precip.where(corrected_ref_precip > 0, 0)
[2024-12-19T22:12:24.371Z] corrected_fut_precip = corrected_fut_precip.where(corrected_fut_precip > 0, 0)
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Train the model to find the correction factors for the maximum temperature (tasmax) data.
[2024-12-19T22:12:24.371Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.371Z]     ref=ERA5_weather.tmax,
[2024-12-19T22:12:24.371Z]     hist=historical_tasmax,
[2024-12-19T22:12:24.371Z]     nquantiles=50,
[2024-12-19T22:12:24.371Z]     kind="+",
[2024-12-19T22:12:24.371Z]     group=group_month_window,
[2024-12-19T22:12:24.371Z] )
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the reference period.
[2024-12-19T22:12:24.371Z] corrected_ref_tasmax = Adjustment.adjust(historical_tasmax, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the future period.
[2024-12-19T22:12:24.371Z] corrected_fut_tasmax = Adjustment.adjust(future_tasmax, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Train the model to find the correction factors for the minimum temperature (tasmin) data.
[2024-12-19T22:12:24.371Z] Adjustment = sdba.DetrendedQuantileMapping.train(
[2024-12-19T22:12:24.371Z]     ref=ERA5_weather.tmin,
[2024-12-19T22:12:24.371Z]     hist=historical_tasmin,
[2024-12-19T22:12:24.371Z]     nquantiles=50,
[2024-12-19T22:12:24.371Z]     kind="+",
[2024-12-19T22:12:24.371Z]     group=group_month_window,
[2024-12-19T22:12:24.371Z] )
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the reference period.
[2024-12-19T22:12:24.371Z] corrected_ref_tasmin = Adjustment.adjust(historical_tasmin, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Apply the correction factors on the future period.
[2024-12-19T22:12:24.371Z] corrected_fut_tasmin = Adjustment.adjust(future_tasmin, interp="linear")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [94mTraceback:[0m
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.371Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.371Z] Cell [0;32mIn[1], line 7[0m
[2024-12-19T22:12:24.371Z] [1;32m      2[0m group_month_window [38;5;241m=[39m sdba[38;5;241m.[39mutils[38;5;241m.[39mGrouper([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m, window[38;5;241m=[39m[38;5;241m15[39m)
[2024-12-19T22:12:24.371Z] [1;32m      4[0m [38;5;66;03m# This is an adjusting function.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m      5[0m [38;5;66;03m# It builds the tool that will perform the corrections.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m      6[0m Adjustment [38;5;241m=[39m sdba[38;5;241m.[39mDetrendedQuantileMapping[38;5;241m.[39mtrain(
[2024-12-19T22:12:24.371Z] [0;32m----> 7[0m     ref[38;5;241m=[39m[43mERA5_weather[49m[38;5;241m.[39mpr,
[2024-12-19T22:12:24.371Z] [1;32m      8[0m     hist[38;5;241m=[39mhistorical_pr,
[2024-12-19T22:12:24.371Z] [1;32m      9[0m     nquantiles[38;5;241m=[39m[38;5;241m50[39m,
[2024-12-19T22:12:24.371Z] [1;32m     10[0m     kind[38;5;241m=[39m[38;5;124m"[39m[38;5;124m+[39m[38;5;124m"[39m,
[2024-12-19T22:12:24.371Z] [1;32m     11[0m     group[38;5;241m=[39mgroup_month_window,
[2024-12-19T22:12:24.371Z] [1;32m     12[0m )
[2024-12-19T22:12:24.371Z] [1;32m     14[0m [38;5;66;03m# Apply the correction factors on the reference period.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m     15[0m corrected_ref_precip [38;5;241m=[39m Adjustment[38;5;241m.[39madjust(historical_pr, interp[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlinear[39m[38;5;124m"[39m)
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [0;31mNameError[0m: name 'ERA5_weather' is not defined
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 14 _
[2024-12-19T22:12:24.371Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.371Z] [94mCell 14: Cell execution caused an exception
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] Input:
[2024-12-19T22:12:24.371Z] [0m# Convert the reference corrected data into netCDF file.
[2024-12-19T22:12:24.371Z] # We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.
[2024-12-19T22:12:24.371Z] ref_dataset = xr.merge(
[2024-12-19T22:12:24.371Z]     [
[2024-12-19T22:12:24.371Z]         corrected_ref_precip.to_dataset(name="pr"),
[2024-12-19T22:12:24.371Z]         corrected_ref_tasmax.to_dataset(name="tasmax"),
[2024-12-19T22:12:24.371Z]         corrected_ref_tasmin.to_dataset(name="tasmin"),
[2024-12-19T22:12:24.371Z]     ]
[2024-12-19T22:12:24.371Z] )
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Write to temporary folder.
[2024-12-19T22:12:24.371Z] fn_tmp_ref = tmp / "reference_dataset_tmp.nc"
[2024-12-19T22:12:24.371Z] ref_dataset.to_netcdf(fn_tmp_ref)
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] # Convert the future corrected data into netCDF file.
[2024-12-19T22:12:24.371Z] fut_dataset = xr.merge(
[2024-12-19T22:12:24.371Z]     [
[2024-12-19T22:12:24.371Z]         corrected_fut_precip.to_dataset(name="pr"),
[2024-12-19T22:12:24.371Z]         corrected_fut_tasmax.to_dataset(name="tasmax"),
[2024-12-19T22:12:24.371Z]         corrected_fut_tasmin.to_dataset(name="tasmin"),
[2024-12-19T22:12:24.371Z]     ]
[2024-12-19T22:12:24.371Z] )
[2024-12-19T22:12:24.371Z] # Write to temporary folder.
[2024-12-19T22:12:24.371Z] with ProgressBar():
[2024-12-19T22:12:24.371Z]     fn_tmp_fut = tmp / "future_dataset_tmp.nc"
[2024-12-19T22:12:24.371Z]     fut_dataset.to_netcdf(fn_tmp_fut)
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z]     # Write the data to disk to a temporary location for future use.
[2024-12-19T22:12:24.371Z]     ref_dataset = xr.open_dataset(fn_tmp_ref)
[2024-12-19T22:12:24.371Z]     ref_dataset.isel(geom=0).squeeze().to_netcdf(tmp / "reference_dataset.nc")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z]     fut_dataset = xr.open_dataset(fn_tmp_fut)
[2024-12-19T22:12:24.371Z]     fut_dataset.isel(geom=0).squeeze().to_netcdf(tmp / "future_dataset.nc")
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [94mTraceback:[0m
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.371Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.371Z] Cell [0;32mIn[1], line 5[0m
[2024-12-19T22:12:24.371Z] [1;32m      1[0m [38;5;66;03m# Convert the reference corrected data into netCDF file.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m      2[0m [38;5;66;03m# We will then apply a special code to remove a dimension in the dataset to make it applicable to the RAVEN models.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m      3[0m ref_dataset [38;5;241m=[39m xr[38;5;241m.[39mmerge(
[2024-12-19T22:12:24.371Z] [1;32m      4[0m     [
[2024-12-19T22:12:24.371Z] [0;32m----> 5[0m         [43mcorrected_ref_precip[49m[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mpr[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.371Z] [1;32m      6[0m         corrected_ref_tasmax[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmax[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.371Z] [1;32m      7[0m         corrected_ref_tasmin[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtasmin[39m[38;5;124m"[39m),
[2024-12-19T22:12:24.371Z] [1;32m      8[0m     ]
[2024-12-19T22:12:24.371Z] [1;32m      9[0m )
[2024-12-19T22:12:24.371Z] [1;32m     11[0m [38;5;66;03m# Write to temporary folder.[39;00m
[2024-12-19T22:12:24.371Z] [1;32m     12[0m fn_tmp_ref [38;5;241m=[39m tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mreference_dataset_tmp.nc[39m[38;5;124m"[39m
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] [0;31mNameError[0m: name 'corrected_ref_precip' is not defined
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 15 _
[2024-12-19T22:12:24.371Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.371Z] [94mCell 15: Cell execution caused an exception
[2024-12-19T22:12:24.371Z] 
[2024-12-19T22:12:24.371Z] Input:
[2024-12-19T22:12:24.371Z] [0m# Define the hydrological response unit.
[2024-12-19T22:12:24.372Z] # We can use the geographic information we gathered previously to populate the fields for the HRU.
[2024-12-19T22:12:24.372Z] hru = {
[2024-12-19T22:12:24.372Z]     "area": all_properties["area"],
[2024-12-19T22:12:24.372Z]     "elevation": all_properties["elevation"],
[2024-12-19T22:12:24.372Z]     "latitude": all_properties["latitude"],
[2024-12-19T22:12:24.372Z]     "longitude": all_properties["longitude"],
[2024-12-19T22:12:24.372Z]     "hru_type": "land",
[2024-12-19T22:12:24.372Z] }
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Establish the start date for the calibration.
[2024-12-19T22:12:24.372Z] # This is set in the model configuration, so the calibrator will simply execute the model which has been pre-configured to run on this period.
[2024-12-19T22:12:24.372Z] start_date = dt.datetime(1981, 1, 1)
[2024-12-19T22:12:24.372Z] end_date = dt.datetime(1985, 12, 31)
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # The data types available in the forcing netcdf file from ERA5, as per the tutorials.
[2024-12-19T22:12:24.372Z] data_type = ["TEMP_MAX", "TEMP_MIN", "PRECIP"]
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Alternative variable names as described in the tutorial.
[2024-12-19T22:12:24.372Z] alt_names = {
[2024-12-19T22:12:24.372Z]     "TEMP_MIN": "tmin",
[2024-12-19T22:12:24.372Z]     "TEMP_MAX": "tmax",
[2024-12-19T22:12:24.372Z]     "PRECIP": "pr",
[2024-12-19T22:12:24.372Z] }
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # The data keywords necessary to indicate the elevation, latitude and longitude of the ERA5 forcing data.
[2024-12-19T22:12:24.372Z] # Here we use the information for the basin average as the ERA5 data is averaged on the watershed.
[2024-12-19T22:12:24.372Z] data_kwds = {
[2024-12-19T22:12:24.372Z]     "ALL": {
[2024-12-19T22:12:24.372Z]         "elevation": hru["elevation"],
[2024-12-19T22:12:24.372Z]         "latitude": hru["latitude"],
[2024-12-19T22:12:24.372Z]         "longitude": hru["longitude"],
[2024-12-19T22:12:24.372Z]     }
[2024-12-19T22:12:24.372Z] }
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Give a name to the simulation.
[2024-12-19T22:12:24.372Z] run_name = "Paper_example_simulation"
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Set up the gauge object that includes meteorological data from ERA5.
[2024-12-19T22:12:24.372Z] gauge = [
[2024-12-19T22:12:24.372Z]     rc.Gauge.from_nc(
[2024-12-19T22:12:24.372Z]         tmp
[2024-12-19T22:12:24.372Z]         / "ERA5_meteo_data.nc",  # Path to the ERA5 file containing all three meteorological variables
[2024-12-19T22:12:24.372Z]         data_type=data_type,  # Note that this is the list of all the variables
[2024-12-19T22:12:24.372Z]         alt_names=alt_names,  # Note that all variables here are mapped to their names in the netcdf file.
[2024-12-19T22:12:24.372Z]         data_kwds=data_kwds,
[2024-12-19T22:12:24.372Z]     )
[2024-12-19T22:12:24.372Z] ]
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Read the streamflow from the HYSETS catchment data for this basin
[2024-12-19T22:12:24.372Z] discharge_data = [rc.ObservationData.from_nc(streamflow_file, alt_names="discharge")]
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Which evaluation metric do we want to use for calibration.
[2024-12-19T22:12:24.372Z] # Raven will return this by default after each run, and the optimizer will read it directly to calibrate.
[2024-12-19T22:12:24.372Z] eval_metrics = ("NASH_SUTCLIFFE",)
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Build the model configuration according to user preferences and inputs
[2024-12-19T22:12:24.372Z] model_config = GR4JCN(
[2024-12-19T22:12:24.372Z]     ObservationData=discharge_data,
[2024-12-19T22:12:24.372Z]     Gauge=gauge,
[2024-12-19T22:12:24.372Z]     HRUs=[hru],
[2024-12-19T22:12:24.372Z]     StartDate=start_date,
[2024-12-19T22:12:24.372Z]     EndDate=end_date,
[2024-12-19T22:12:24.372Z]     RunName=run_name,
[2024-12-19T22:12:24.372Z]     EvaluationMetrics=eval_metrics,  # We add this code to tell Raven which objective function we want to pass.
[2024-12-19T22:12:24.372Z]     SuppressOutput=True,  # This stops Raven from generating the output .nc files at each iteration.
[2024-12-19T22:12:24.372Z] )
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] [94mTraceback:[0m
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.372Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.372Z] Cell [0;32mIn[1], line 4[0m
[2024-12-19T22:12:24.372Z] [1;32m      1[0m [38;5;66;03m# Define the hydrological response unit.[39;00m
[2024-12-19T22:12:24.372Z] [1;32m      2[0m [38;5;66;03m# We can use the geographic information we gathered previously to populate the fields for the HRU.[39;00m
[2024-12-19T22:12:24.372Z] [1;32m      3[0m hru [38;5;241m=[39m {
[2024-12-19T22:12:24.372Z] [0;32m----> 4[0m     [38;5;124m"[39m[38;5;124marea[39m[38;5;124m"[39m: [43mall_properties[49m[[38;5;124m"[39m[38;5;124marea[39m[38;5;124m"[39m],
[2024-12-19T22:12:24.372Z] [1;32m      5[0m     [38;5;124m"[39m[38;5;124melevation[39m[38;5;124m"[39m: all_properties[[38;5;124m"[39m[38;5;124melevation[39m[38;5;124m"[39m],
[2024-12-19T22:12:24.372Z] [1;32m      6[0m     [38;5;124m"[39m[38;5;124mlatitude[39m[38;5;124m"[39m: all_properties[[38;5;124m"[39m[38;5;124mlatitude[39m[38;5;124m"[39m],
[2024-12-19T22:12:24.372Z] [1;32m      7[0m     [38;5;124m"[39m[38;5;124mlongitude[39m[38;5;124m"[39m: all_properties[[38;5;124m"[39m[38;5;124mlongitude[39m[38;5;124m"[39m],
[2024-12-19T22:12:24.372Z] [1;32m      8[0m     [38;5;124m"[39m[38;5;124mhru_type[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mland[39m[38;5;124m"[39m,
[2024-12-19T22:12:24.372Z] [1;32m      9[0m }
[2024-12-19T22:12:24.372Z] [1;32m     11[0m [38;5;66;03m# Establish the start date for the calibration.[39;00m
[2024-12-19T22:12:24.372Z] [1;32m     12[0m [38;5;66;03m# This is set in the model configuration, so the calibrator will simply execute the model which has been pre-configured to run on this period.[39;00m
[2024-12-19T22:12:24.372Z] [1;32m     13[0m start_date [38;5;241m=[39m dt[38;5;241m.[39mdatetime([38;5;241m1981[39m, [38;5;241m1[39m, [38;5;241m1[39m)
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] [0;31mNameError[0m: name 'all_properties' is not defined
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 16 _
[2024-12-19T22:12:24.372Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.372Z] [94mCell 16: Cell execution caused an exception
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] Input:
[2024-12-19T22:12:24.372Z] [0m# In order to calibrate your model, you need to give the lower and higher bounds of the model.
[2024-12-19T22:12:24.372Z] # In this case, we are passing the boundaries for a GR4JCN, but it's important to change them, if you are using another model.
[2024-12-19T22:12:24.372Z] low = (0.01, -15.0, 10.0, 0.0, 1.0, 0.0)
[2024-12-19T22:12:24.372Z] high = (2.5, 10.0, 700.0, 7.0, 30.0, 1.0)
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Random seed.
[2024-12-19T22:12:24.372Z] # We will provide one for consistency purposes, but operationally this should not be provided.
[2024-12-19T22:12:24.372Z] # FIXME: This will change in numpy v2.0, so we will need to update this code then.
[2024-12-19T22:12:24.372Z] random_seed = 42
[2024-12-19T22:12:24.372Z] np.random.seed(random_seed)
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Build the optimizer object
[2024-12-19T22:12:24.372Z] spot_setup = SpotSetup(
[2024-12-19T22:12:24.372Z]     config=model_config,
[2024-12-19T22:12:24.372Z]     low=low,
[2024-12-19T22:12:24.372Z]     high=high,
[2024-12-19T22:12:24.372Z] )
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Maximum number of model evaluations.
[2024-12-19T22:12:24.372Z] # We only use 200 here to keep the computation time as low as possible, but you will want to increase this for operational use, perhaps to 2000-5000 depending on the model.
[2024-12-19T22:12:24.372Z] max_iterations = 200
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Set up the spotpy sampler with the method, the setup configuration, a run name and other options.
[2024-12-19T22:12:24.372Z] # Please refer to the spotpy documentation for more options.
[2024-12-19T22:12:24.372Z] # We recommend sticking to this format for efficiency of most applications.
[2024-12-19T22:12:24.372Z] # Here we use DDS as the optimization algorithm. More are available: see the Spotpy documentation for more information.
[2024-12-19T22:12:24.372Z] # Here, DDS is used as it is powerful and particularly useful for optimizations with small evaluation budgets.
[2024-12-19T22:12:24.372Z] # For more details on DDS, see:
[2024-12-19T22:12:24.372Z] #
[2024-12-19T22:12:24.372Z] # Tolson, B.A. and Shoemaker, C.A., 2007. Dynamically dimensioned search algorithm for computationally efficient watershed model calibration. Water Resources Research, 43(1)
[2024-12-19T22:12:24.372Z] sampler = spotpy.algorithms.dds(
[2024-12-19T22:12:24.372Z]     spot_setup, dbname="RAVEN_model_run", dbformat="ram", save_sim=False
[2024-12-19T22:12:24.372Z] )
[2024-12-19T22:12:24.372Z] 
[2024-12-19T22:12:24.372Z] # Launch the actual optimization.
[2024-12-19T22:12:24.372Z] # Multiple trials can be launched, where the entire process is repeated and the best overall value from all trials is returned.
[2024-12-19T22:12:24.373Z] sampler.sample(max_iterations, trials=1)
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Get the model diagnostics.
[2024-12-19T22:12:24.373Z] diag = spot_setup.diagnostics
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Get all the values of each iteration.
[2024-12-19T22:12:24.373Z] results = sampler.getdata()
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Get the raw results directly in an array.
[2024-12-19T22:12:24.373Z] bestindex, bestobjfun = spotpy.analyser.get_maxlikeindex(
[2024-12-19T22:12:24.373Z]     results
[2024-12-19T22:12:24.373Z] )  # Want to get the MAX NSE (change for min for RMSE).
[2024-12-19T22:12:24.373Z] best_model_run = list(
[2024-12-19T22:12:24.373Z]     results[bestindex][0]
[2024-12-19T22:12:24.373Z] )  # Get the parameter set returning the best NSE.
[2024-12-19T22:12:24.373Z] optimized_parameters = best_model_run[
[2024-12-19T22:12:24.373Z]     1:-1
[2024-12-19T22:12:24.373Z] ]  # Remove the NSE value (position 0) and the ID at the last position to get the actual parameter set.
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Display the parameter set ready to use in a future run:
[2024-12-19T22:12:24.373Z] print(optimized_parameters)
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [94mTraceback:[0m
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.373Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.373Z] Cell [0;32mIn[1], line 14[0m
[2024-12-19T22:12:24.373Z] [1;32m     10[0m np[38;5;241m.[39mrandom[38;5;241m.[39mseed(random_seed)
[2024-12-19T22:12:24.373Z] [1;32m     12[0m [38;5;66;03m# Build the optimizer object[39;00m
[2024-12-19T22:12:24.373Z] [1;32m     13[0m spot_setup [38;5;241m=[39m SpotSetup(
[2024-12-19T22:12:24.373Z] [0;32m---> 14[0m     config[38;5;241m=[39m[43mmodel_config[49m,
[2024-12-19T22:12:24.373Z] [1;32m     15[0m     low[38;5;241m=[39mlow,
[2024-12-19T22:12:24.373Z] [1;32m     16[0m     high[38;5;241m=[39mhigh,
[2024-12-19T22:12:24.373Z] [1;32m     17[0m )
[2024-12-19T22:12:24.373Z] [1;32m     19[0m [38;5;66;03m# Maximum number of model evaluations.[39;00m
[2024-12-19T22:12:24.373Z] [1;32m     20[0m [38;5;66;03m# We only use 200 here to keep the computation time as low as possible, but you will want to increase this for operational use, perhaps to 2000-5000 depending on the model.[39;00m
[2024-12-19T22:12:24.373Z] [1;32m     21[0m max_iterations [38;5;241m=[39m [38;5;241m200[39m
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [0;31mNameError[0m: name 'model_config' is not defined
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 17 _
[2024-12-19T22:12:24.373Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.373Z] [94mCell 17: Cell execution caused an exception
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] Input:
[2024-12-19T22:12:24.373Z] [0m# Copy the configuration of the previous model that we will modify for our validation:
[2024-12-19T22:12:24.373Z] model_validation = model_config.duplicate(
[2024-12-19T22:12:24.373Z]     StartDate=dt.datetime(1986, 1, 1),
[2024-12-19T22:12:24.373Z]     EndDate=dt.datetime(1990, 12, 31),
[2024-12-19T22:12:24.373Z]     SuppressOutput=False,
[2024-12-19T22:12:24.373Z] ).set_params(optimized_parameters)
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] sim_output = Emulator(config=model_validation).run()
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Get validation NSE (note we are counting the first year without warm-up).
[2024-12-19T22:12:24.373Z] NSE = sim_output.diagnostics["DIAG_NASH_SUTCLIFFE"]
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Plot the model output.
[2024-12-19T22:12:24.373Z] sim_output.hydrograph.q_sim.plot(color="blue", label="Simulation")
[2024-12-19T22:12:24.373Z] sim_output.hydrograph.q_obs.plot(color="black", label="Observation")
[2024-12-19T22:12:24.373Z] plt.legend()
[2024-12-19T22:12:24.373Z] plt.title("Validation period - NSE=" + str(NSE[0]))
[2024-12-19T22:12:24.373Z] plt.ylabel("Streamflow (m��/s)")
[2024-12-19T22:12:24.373Z] plt.grid()
[2024-12-19T22:12:24.373Z] plt.show()
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [94mTraceback:[0m
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.373Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.373Z] Cell [0;32mIn[1], line 2[0m
[2024-12-19T22:12:24.373Z] [1;32m      1[0m [38;5;66;03m# Copy the configuration of the previous model that we will modify for our validation:[39;00m
[2024-12-19T22:12:24.373Z] [0;32m----> 2[0m model_validation [38;5;241m=[39m [43mmodel_config[49m[38;5;241m.[39mduplicate(
[2024-12-19T22:12:24.373Z] [1;32m      3[0m     StartDate[38;5;241m=[39mdt[38;5;241m.[39mdatetime([38;5;241m1986[39m, [38;5;241m1[39m, [38;5;241m1[39m),
[2024-12-19T22:12:24.373Z] [1;32m      4[0m     EndDate[38;5;241m=[39mdt[38;5;241m.[39mdatetime([38;5;241m1990[39m, [38;5;241m12[39m, [38;5;241m31[39m),
[2024-12-19T22:12:24.373Z] [1;32m      5[0m     SuppressOutput[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[2024-12-19T22:12:24.373Z] [1;32m      6[0m )[38;5;241m.[39mset_params(optimized_parameters)
[2024-12-19T22:12:24.373Z] [1;32m      8[0m sim_output [38;5;241m=[39m Emulator(config[38;5;241m=[39mmodel_validation)[38;5;241m.[39mrun()
[2024-12-19T22:12:24.373Z] [1;32m     10[0m [38;5;66;03m# Get validation NSE (note we are counting the first year without warm-up).[39;00m
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [0;31mNameError[0m: name 'model_config' is not defined
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 18 _
[2024-12-19T22:12:24.373Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.373Z] [94mCell 18: Cell execution caused an exception
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] Input:
[2024-12-19T22:12:24.373Z] [0m# Set up a gauge for Raven to read-in the reference climate data, just like for ERA5.
[2024-12-19T22:12:24.373Z] gauge_ref = [
[2024-12-19T22:12:24.373Z]     rc.Gauge.from_nc(
[2024-12-19T22:12:24.373Z]         tmp
[2024-12-19T22:12:24.373Z]         / "reference_dataset.nc",  # Path to the CMIP6 model reference data netcdf file.
[2024-12-19T22:12:24.373Z]         data_type=data_type,
[2024-12-19T22:12:24.373Z]         alt_names=alt_names,
[2024-12-19T22:12:24.373Z]         data_kwds=data_kwds,
[2024-12-19T22:12:24.373Z]     )
[2024-12-19T22:12:24.373Z] ]
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Copy the configuration of the previous model that we will modify for our simulation on the reference period.
[2024-12-19T22:12:24.373Z] model_config_reference = model_validation.duplicate(
[2024-12-19T22:12:24.373Z]     Gauge=gauge_ref,
[2024-12-19T22:12:24.373Z]     StartDate=reference_start_day
[2024-12-19T22:12:24.373Z]     + dt.timedelta(days=1),  # Add a day here to account for the UTC lag in ERA5.
[2024-12-19T22:12:24.373Z]     EndDate=reference_end_day,
[2024-12-19T22:12:24.373Z] )
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Run the model from the configuration and get the outputs.
[2024-12-19T22:12:24.373Z] ref_output = Emulator(config=model_config_reference).run()
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] # Plot the model output.
[2024-12-19T22:12:24.373Z] # Note that both simulations should have similar hydrological regime but day-to-day variability is not expected to match.
[2024-12-19T22:12:24.373Z] ref_output.hydrograph.q_sim.plot(color="blue", label="Reference period simulation")
[2024-12-19T22:12:24.373Z] ref_output.hydrograph.q_obs.plot(color="black", label="Observation")
[2024-12-19T22:12:24.373Z] plt.legend()
[2024-12-19T22:12:24.373Z] plt.title("Reference period")
[2024-12-19T22:12:24.373Z] plt.ylabel("Streamflow (m��/s)")
[2024-12-19T22:12:24.373Z] plt.grid()
[2024-12-19T22:12:24.373Z] plt.show()
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [94mTraceback:[0m
[2024-12-19T22:12:24.373Z] 
[2024-12-19T22:12:24.373Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.373Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.373Z] Cell [0;32mIn[1], line 6[0m
[2024-12-19T22:12:24.373Z] [1;32m      1[0m [38;5;66;03m# Set up a gauge for Raven to read-in the reference climate data, just like for ERA5.[39;00m
[2024-12-19T22:12:24.373Z] [1;32m      2[0m gauge_ref [38;5;241m=[39m [
[2024-12-19T22:12:24.373Z] [1;32m      3[0m     rc[38;5;241m.[39mGauge[38;5;241m.[39mfrom_nc(
[2024-12-19T22:12:24.373Z] [1;32m      4[0m         tmp
[2024-12-19T22:12:24.373Z] [1;32m      5[0m         [38;5;241m/[39m [38;5;124m"[39m[38;5;124mreference_dataset.nc[39m[38;5;124m"[39m,  [38;5;66;03m# Path to the CMIP6 model reference data netcdf file.[39;00m
[2024-12-19T22:12:24.373Z] [0;32m----> 6[0m         data_type[38;5;241m=[39m[43mdata_type[49m,
[2024-12-19T22:12:24.373Z] [1;32m      7[0m         alt_names[38;5;241m=[39malt_names,
[2024-12-19T22:12:24.373Z] [1;32m      8[0m         data_kwds[38;5;241m=[39mdata_kwds,
[2024-12-19T22:12:24.373Z] [1;32m      9[0m     )
[2024-12-19T22:12:24.373Z] [1;32m     10[0m ]
[2024-12-19T22:12:24.374Z] [1;32m     12[0m [38;5;66;03m# Copy the configuration of the previous model that we will modify for our simulation on the reference period.[39;00m
[2024-12-19T22:12:24.374Z] [1;32m     13[0m model_config_reference [38;5;241m=[39m model_validation[38;5;241m.[39mduplicate(
[2024-12-19T22:12:24.374Z] [1;32m     14[0m     Gauge[38;5;241m=[39mgauge_ref,
[2024-12-19T22:12:24.374Z] [1;32m     15[0m     StartDate[38;5;241m=[39mreference_start_day
[2024-12-19T22:12:24.374Z] [1;32m     16[0m     [38;5;241m+[39m dt[38;5;241m.[39mtimedelta(days[38;5;241m=[39m[38;5;241m1[39m),  [38;5;66;03m# Add a day here to account for the UTC lag in ERA5.[39;00m
[2024-12-19T22:12:24.374Z] [1;32m     17[0m     EndDate[38;5;241m=[39mreference_end_day,
[2024-12-19T22:12:24.374Z] [1;32m     18[0m )
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] [0;31mNameError[0m: name 'data_type' is not defined
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 19 _
[2024-12-19T22:12:24.374Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.374Z] [94mCell 19: Cell execution caused an exception
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] Input:
[2024-12-19T22:12:24.374Z] [0m# Set up a gauge for Raven to read-in the future climate data, just like for the reference data.
[2024-12-19T22:12:24.374Z] gauge_fut = [
[2024-12-19T22:12:24.374Z]     rc.Gauge.from_nc(
[2024-12-19T22:12:24.374Z]         tmp / "future_dataset.nc",  # Path to the CMIP6 model reference data netcdf file
[2024-12-19T22:12:24.374Z]         data_type=data_type,
[2024-12-19T22:12:24.374Z]         alt_names=alt_names,
[2024-12-19T22:12:24.374Z]         data_kwds=data_kwds,
[2024-12-19T22:12:24.374Z]     )
[2024-12-19T22:12:24.374Z] ]
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] # Copy the configuration of the previous model that we will modify for our simulation on the reference period.
[2024-12-19T22:12:24.374Z] model_config_future = model_validation.duplicate(
[2024-12-19T22:12:24.374Z]     Gauge=gauge_fut,
[2024-12-19T22:12:24.374Z]     StartDate=future_start_day + dt.timedelta(days=1),
[2024-12-19T22:12:24.374Z]     EndDate=future_end_day,
[2024-12-19T22:12:24.374Z]     ObservationData=None,  # There are no observations for the future period.
[2024-12-19T22:12:24.374Z] )
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] # Run the model and get the outputs and hydrographs.
[2024-12-19T22:12:24.374Z] fut_output = Emulator(config=model_config_future).run()
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] # Plot the model output.
[2024-12-19T22:12:24.374Z] fut_output.hydrograph.q_sim.plot(color="blue", label="Future simulation")
[2024-12-19T22:12:24.374Z] plt.legend()
[2024-12-19T22:12:24.374Z] plt.title("Future period")
[2024-12-19T22:12:24.374Z] plt.ylabel("Streamflow (m��/s)")
[2024-12-19T22:12:24.374Z] plt.grid()
[2024-12-19T22:12:24.374Z] plt.show()
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] [94mTraceback:[0m
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.374Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.374Z] Cell [0;32mIn[1], line 5[0m
[2024-12-19T22:12:24.374Z] [1;32m      1[0m [38;5;66;03m# Set up a gauge for Raven to read-in the future climate data, just like for the reference data.[39;00m
[2024-12-19T22:12:24.374Z] [1;32m      2[0m gauge_fut [38;5;241m=[39m [
[2024-12-19T22:12:24.374Z] [1;32m      3[0m     rc[38;5;241m.[39mGauge[38;5;241m.[39mfrom_nc(
[2024-12-19T22:12:24.374Z] [1;32m      4[0m         tmp [38;5;241m/[39m [38;5;124m"[39m[38;5;124mfuture_dataset.nc[39m[38;5;124m"[39m,  [38;5;66;03m# Path to the CMIP6 model reference data netcdf file[39;00m
[2024-12-19T22:12:24.374Z] [0;32m----> 5[0m         data_type[38;5;241m=[39m[43mdata_type[49m,
[2024-12-19T22:12:24.374Z] [1;32m      6[0m         alt_names[38;5;241m=[39malt_names,
[2024-12-19T22:12:24.374Z] [1;32m      7[0m         data_kwds[38;5;241m=[39mdata_kwds,
[2024-12-19T22:12:24.374Z] [1;32m      8[0m     )
[2024-12-19T22:12:24.374Z] [1;32m      9[0m ]
[2024-12-19T22:12:24.374Z] [1;32m     11[0m [38;5;66;03m# Copy the configuration of the previous model that we will modify for our simulation on the reference period.[39;00m
[2024-12-19T22:12:24.374Z] [1;32m     12[0m model_config_future [38;5;241m=[39m model_validation[38;5;241m.[39mduplicate(
[2024-12-19T22:12:24.374Z] [1;32m     13[0m     Gauge[38;5;241m=[39mgauge_fut,
[2024-12-19T22:12:24.374Z] [1;32m     14[0m     StartDate[38;5;241m=[39mfuture_start_day [38;5;241m+[39m dt[38;5;241m.[39mtimedelta(days[38;5;241m=[39m[38;5;241m1[39m),
[2024-12-19T22:12:24.374Z] [1;32m     15[0m     EndDate[38;5;241m=[39mfuture_end_day,
[2024-12-19T22:12:24.374Z] [1;32m     16[0m     ObservationData[38;5;241m=[39m[38;5;28;01mNone[39;00m,  [38;5;66;03m# There are no observations for the future period.[39;00m
[2024-12-19T22:12:24.374Z] [1;32m     17[0m )
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] [0;31mNameError[0m: name 'data_type' is not defined
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] _ RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 20 _
[2024-12-19T22:12:24.374Z] [91mNotebook cell execution failed[0m
[2024-12-19T22:12:24.374Z] [94mCell 20: Cell execution caused an exception
[2024-12-19T22:12:24.374Z] 
[2024-12-19T22:12:24.374Z] Input:
[2024-12-19T22:12:24.374Z] [0m# Extract the mean annual hydrograph for each simulation.
[2024-12-19T22:12:24.374Z] observed_flows = ref_output.hydrograph.q_obs.groupby("time.dayofyear").mean()
[2024-12-19T22:12:24.375Z] simulated_flows = sim_output.hydrograph.q_obs.groupby("time.dayofyear").mean()
[2024-12-19T22:12:24.375Z] reference_flows = ref_output.hydrograph.q_sim.groupby("time.dayofyear").mean()
[2024-12-19T22:12:24.375Z] future_flows = fut_output.hydrograph.q_sim.groupby("time.dayofyear").mean()
[2024-12-19T22:12:24.375Z] 
[2024-12-19T22:12:24.375Z] # Plot the model output.
[2024-12-19T22:12:24.375Z] observed_flows.plot(color="black", label="Observation", x="dayofyear")
[2024-12-19T22:12:24.375Z] simulated_flows.plot(color="green", label="Simulation", x="dayofyear")
[2024-12-19T22:12:24.375Z] reference_flows.plot(color="blue", label="Reference", x="dayofyear")
[2024-12-19T22:12:24.375Z] future_flows.plot(color="red", label="Future", x="dayofyear")
[2024-12-19T22:12:24.375Z] plt.legend()
[2024-12-19T22:12:24.375Z] plt.ylabel("Streamflow (m��/s)")
[2024-12-19T22:12:24.375Z] plt.xlabel("Day of year")
[2024-12-19T22:12:24.375Z] plt.xlim([0, 365])
[2024-12-19T22:12:24.375Z] plt.title("Comparison of mean annual hydrographs")
[2024-12-19T22:12:24.375Z] plt.grid()
[2024-12-19T22:12:24.375Z] plt.show()
[2024-12-19T22:12:24.375Z] 
[2024-12-19T22:12:24.375Z] [94mTraceback:[0m
[2024-12-19T22:12:24.375Z] 
[2024-12-19T22:12:24.375Z] [0;31m---------------------------------------------------------------------------[0m
[2024-12-19T22:12:24.375Z] [0;31mNameError[0m                                 Traceback (most recent call last)
[2024-12-19T22:12:24.375Z] Cell [0;32mIn[1], line 2[0m
[2024-12-19T22:12:24.375Z] [1;32m      1[0m [38;5;66;03m# Extract the mean annual hydrograph for each simulation.[39;00m
[2024-12-19T22:12:24.375Z] [0;32m----> 2[0m observed_flows [38;5;241m=[39m [43mref_output[49m[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-12-19T22:12:24.375Z] [1;32m      3[0m simulated_flows [38;5;241m=[39m sim_output[38;5;241m.[39mhydrograph[38;5;241m.[39mq_obs[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-12-19T22:12:24.375Z] [1;32m      4[0m reference_flows [38;5;241m=[39m ref_output[38;5;241m.[39mhydrograph[38;5;241m.[39mq_sim[38;5;241m.[39mgroupby([38;5;124m"[39m[38;5;124mtime.dayofyear[39m[38;5;124m"[39m)[38;5;241m.[39mmean()
[2024-12-19T22:12:24.375Z] 
[2024-12-19T22:12:24.375Z] [0;31mNameError[0m: name 'ref_output' is not defined
[2024-12-19T22:12:24.375Z] 
[2024-12-19T22:12:24.375Z] =========================== short test summary info ============================
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 2
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 3
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 4
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 5
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 6
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 7
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 8
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 9
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb::Cell 10
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 10
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 11
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 12
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 13
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 14
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb::Cell 15
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 0
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 1
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 2
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/HydroShare_integration.ipynb::Cell 3
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 7
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 8
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 9
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 10
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 13
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 14
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 15
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 16
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 17
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 18
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 19
[2024-12-19T22:12:24.375Z] FAILED RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb::Cell 20
[2024-12-19T22:12:24.375Z] ================== 31 failed, 211 passed in 562.78s (0:09:22) ==================
[2024-12-19T22:12:24.375Z] + EXIT_CODE=1
[2024-12-19T22:12:24.375Z] + echo true
[2024-12-19T22:12:24.375Z] + tr [:upper:] [:lower:]
[2024-12-19T22:12:24.375Z] + SAVE_RESULTING_NOTEBOOK=true
[2024-12-19T22:12:24.375Z] + [ xtrue = xtrue ]
[2024-12-19T22:12:24.375Z] + mkdir -p buildout
[2024-12-19T22:12:24.375Z] + basename raven-main/docs/source/notebooks/Region_selection.ipynb
[2024-12-19T22:12:24.375Z] + filename=Region_selection.ipynb
[2024-12-19T22:12:24.375Z] + echo Region_selection.ipynb
[2024-12-19T22:12:24.375Z] + sed s/.ipynb$//
[2024-12-19T22:12:24.375Z] + filename=Region_selection
[2024-12-19T22:12:24.375Z] + [ -e buildout/Region_selection.output.ipynb ]
[2024-12-19T22:12:24.375Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Region_selection.output.ipynb raven-main/docs/source/notebooks/Region_selection.ipynb
[2024-12-19T22:12:25.301Z] [NbConvertApp] Converting notebook raven-main/docs/source/notebooks/Region_selection.ipynb to notebook
[2024-12-19T22:12:40.150Z] [NbConvertApp] Writing 107224 bytes to buildout/Region_selection.output.ipynb
[2024-12-19T22:12:40.150Z] + basename raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb
[2024-12-19T22:12:40.150Z] + filename=Subset_climate_data_over_watershed.ipynb
[2024-12-19T22:12:40.150Z] + + echo Subset_climate_data_over_watershed.ipynb
[2024-12-19T22:12:40.150Z] sed s/.ipynb$//
[2024-12-19T22:12:40.150Z] + filename=Subset_climate_data_over_watershed
[2024-12-19T22:12:40.150Z] + [ -e buildout/Subset_climate_data_over_watershed.output.ipynb ]
[2024-12-19T22:12:40.150Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Subset_climate_data_over_watershed.output.ipynb raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb
[2024-12-19T22:12:40.150Z] [NbConvertApp] Converting notebook raven-main/docs/source/notebooks/Subset_climate_data_over_watershed.ipynb to notebook
[2024-12-19T22:12:58.181Z] [NbConvertApp] Writing 95104 bytes to buildout/Subset_climate_data_over_watershed.output.ipynb
[2024-12-19T22:12:58.181Z] + basename RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb
[2024-12-19T22:12:58.181Z] + filename=00_Introduction_to_JupyterLab.ipynb
[2024-12-19T22:12:58.181Z] + echo 00_Introduction_to_JupyterLab.ipynb
[2024-12-19T22:12:58.181Z] + sed s/.ipynb$//
[2024-12-19T22:12:58.181Z] + filename=00_Introduction_to_JupyterLab
[2024-12-19T22:12:58.181Z] + [ -e buildout/00_Introduction_to_JupyterLab.output.ipynb ]
[2024-12-19T22:12:58.181Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 00_Introduction_to_JupyterLab.output.ipynb RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb
[2024-12-19T22:12:58.745Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/00_Introduction_to_JupyterLab.ipynb to notebook
[2024-12-19T22:13:01.265Z] [NbConvertApp] Writing 13181 bytes to buildout/00_Introduction_to_JupyterLab.output.ipynb
[2024-12-19T22:13:01.520Z] + basename RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb
[2024-12-19T22:13:01.521Z] + filename=01_Getting_watershed_boundaries.ipynb
[2024-12-19T22:13:01.521Z] + echo 01_Getting_watershed_boundaries.ipynb
[2024-12-19T22:13:01.521Z] + sed s/.ipynb$//
[2024-12-19T22:13:01.521Z] + filename=01_Getting_watershed_boundaries
[2024-12-19T22:13:01.521Z] + [ -e buildout/01_Getting_watershed_boundaries.output.ipynb ]
[2024-12-19T22:13:01.521Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 01_Getting_watershed_boundaries.output.ipynb RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb
[2024-12-19T22:13:02.883Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/01_Getting_watershed_boundaries.ipynb to notebook
[2024-12-19T22:13:17.757Z] [NbConvertApp] Writing 109427 bytes to buildout/01_Getting_watershed_boundaries.output.ipynb
[2024-12-19T22:13:17.757Z] + basename RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb
[2024-12-19T22:13:17.757Z] + filename=02_Extract_geographical_watershed_properties.ipynb
[2024-12-19T22:13:17.757Z] + echo 02_Extract_geographical_watershed_properties.ipynb
[2024-12-19T22:13:17.757Z] + sed s/.ipynb$//
[2024-12-19T22:13:17.757Z] + filename=02_Extract_geographical_watershed_properties
[2024-12-19T22:13:17.757Z] + [ -e buildout/02_Extract_geographical_watershed_properties.output.ipynb ]
[2024-12-19T22:13:17.757Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 02_Extract_geographical_watershed_properties.output.ipynb RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb
[2024-12-19T22:13:17.758Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/02_Extract_geographical_watershed_properties.ipynb to notebook
[2024-12-19T22:13:35.787Z] [NbConvertApp] Writing 279636 bytes to buildout/02_Extract_geographical_watershed_properties.output.ipynb
[2024-12-19T22:13:35.787Z] + basename RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb
[2024-12-19T22:13:35.787Z] + filename=03_Extracting_forcing_data.ipynb
[2024-12-19T22:13:35.787Z] + echo 03_Extracting_forcing_data.ipynb
[2024-12-19T22:13:35.787Z] + sed s/.ipynb$//
[2024-12-19T22:13:35.787Z] + filename=03_Extracting_forcing_data
[2024-12-19T22:13:35.787Z] + [ -e buildout/03_Extracting_forcing_data.output.ipynb ]
[2024-12-19T22:13:35.787Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 03_Extracting_forcing_data.output.ipynb RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb
[2024-12-19T22:13:35.787Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/03_Extracting_forcing_data.ipynb to notebook
[2024-12-19T22:13:45.720Z] [NbConvertApp] Writing 48816 bytes to buildout/03_Extracting_forcing_data.output.ipynb
[2024-12-19T22:13:45.720Z] + basename RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb
[2024-12-19T22:13:45.720Z] + filename=04_Emulating_hydrological_models.ipynb
[2024-12-19T22:13:45.720Z] + echo 04_Emulating_hydrological_models.ipynb
[2024-12-19T22:13:45.720Z] + sed s/.ipynb$//
[2024-12-19T22:13:45.720Z] + filename=04_Emulating_hydrological_models
[2024-12-19T22:13:45.720Z] + [ -e buildout/04_Emulating_hydrological_models.output.ipynb ]
[2024-12-19T22:13:45.720Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 04_Emulating_hydrological_models.output.ipynb RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb
[2024-12-19T22:13:47.084Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/04_Emulating_hydrological_models.ipynb to notebook
[2024-12-19T22:14:01.931Z] [NbConvertApp] Writing 395904 bytes to buildout/04_Emulating_hydrological_models.output.ipynb
[2024-12-19T22:14:01.931Z] + basename RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb
[2024-12-19T22:14:01.931Z] + filename=05_Advanced_RavenPy_configuration.ipynb
[2024-12-19T22:14:01.931Z] + echo 05_Advanced_RavenPy_configuration.ipynb
[2024-12-19T22:14:01.931Z] + sed s/.ipynb$//
[2024-12-19T22:14:01.931Z] + filename=05_Advanced_RavenPy_configuration
[2024-12-19T22:14:01.931Z] + [ -e buildout/05_Advanced_RavenPy_configuration.output.ipynb ]
[2024-12-19T22:14:01.931Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 05_Advanced_RavenPy_configuration.output.ipynb RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb
[2024-12-19T22:14:03.295Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/05_Advanced_RavenPy_configuration.ipynb to notebook
[2024-12-19T22:14:25.170Z] [NbConvertApp] Writing 305148 bytes to buildout/05_Advanced_RavenPy_configuration.output.ipynb
[2024-12-19T22:14:25.170Z] + basename RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb
[2024-12-19T22:14:25.170Z] + filename=06_Raven_calibration.ipynb
[2024-12-19T22:14:25.170Z] + echo 06_Raven_calibration.ipynb
[2024-12-19T22:14:25.170Z] + sed s/.ipynb$//
[2024-12-19T22:14:25.170Z] + filename=06_Raven_calibration
[2024-12-19T22:14:25.170Z] + [ -e buildout/06_Raven_calibration.output.ipynb ]
[2024-12-19T22:14:25.170Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 06_Raven_calibration.output.ipynb RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb
[2024-12-19T22:14:25.170Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/06_Raven_calibration.ipynb to notebook
[2024-12-19T22:14:37.324Z] [NbConvertApp] Writing 18799 bytes to buildout/06_Raven_calibration.output.ipynb
[2024-12-19T22:14:37.324Z] + basename RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb
[2024-12-19T22:14:37.324Z] + filename=07_Making_and_using_hotstart_files.ipynb
[2024-12-19T22:14:37.324Z] + echo 07_Making_and_using_hotstart_files.ipynb
[2024-12-19T22:14:37.324Z] + sed s/.ipynb$//
[2024-12-19T22:14:37.324Z] + filename=07_Making_and_using_hotstart_files
[2024-12-19T22:14:37.324Z] + [ -e buildout/07_Making_and_using_hotstart_files.output.ipynb ]
[2024-12-19T22:14:37.324Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 07_Making_and_using_hotstart_files.output.ipynb RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb
[2024-12-19T22:14:37.324Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/07_Making_and_using_hotstart_files.ipynb to notebook
[2024-12-19T22:14:49.510Z] [NbConvertApp] Writing 193897 bytes to buildout/07_Making_and_using_hotstart_files.output.ipynb
[2024-12-19T22:14:49.510Z] + basename RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-12-19T22:14:49.510Z] + filename=08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-12-19T22:14:49.510Z] + echo 08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-12-19T22:14:49.510Z] + sed s/.ipynb$//
[2024-12-19T22:14:49.510Z] + filename=08_Getting_and_bias_correcting_CMIP6_data
[2024-12-19T22:14:49.510Z] + [ -e buildout/08_Getting_and_bias_correcting_CMIP6_data.output.ipynb ]
[2024-12-19T22:14:49.510Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 08_Getting_and_bias_correcting_CMIP6_data.output.ipynb RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb
[2024-12-19T22:14:49.510Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/08_Getting_and_bias_correcting_CMIP6_data.ipynb to notebook
[2024-12-19T22:15:45.663Z] [NbConvertApp] Writing 196653 bytes to buildout/08_Getting_and_bias_correcting_CMIP6_data.output.ipynb
[2024-12-19T22:15:45.663Z] + basename RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb
[2024-12-19T22:15:45.663Z] + filename=09_Hydrological_impacts_of_climate_change.ipynb
[2024-12-19T22:15:45.663Z] + echo 09_Hydrological_impacts_of_climate_change.ipynb
[2024-12-19T22:15:45.663Z] + sed s/.ipynb$//
[2024-12-19T22:15:45.663Z] + filename=09_Hydrological_impacts_of_climate_change
[2024-12-19T22:15:45.663Z] + [ -e buildout/09_Hydrological_impacts_of_climate_change.output.ipynb ]
[2024-12-19T22:15:45.663Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 09_Hydrological_impacts_of_climate_change.output.ipynb RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb
[2024-12-19T22:15:45.663Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/09_Hydrological_impacts_of_climate_change.ipynb to notebook
[2024-12-19T22:15:57.822Z] [NbConvertApp] Writing 124107 bytes to buildout/09_Hydrological_impacts_of_climate_change.output.ipynb
[2024-12-19T22:15:57.822Z] + basename RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb
[2024-12-19T22:15:57.822Z] + filename=10_Data_assimilation.ipynb
[2024-12-19T22:15:57.822Z] + echo 10_Data_assimilation.ipynb
[2024-12-19T22:15:57.822Z] + sed s/.ipynb$//
[2024-12-19T22:15:57.822Z] + filename=10_Data_assimilation
[2024-12-19T22:15:57.822Z] + [ -e buildout/10_Data_assimilation.output.ipynb ]
[2024-12-19T22:15:57.822Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 10_Data_assimilation.output.ipynb RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb
[2024-12-19T22:15:59.182Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/10_Data_assimilation.ipynb to notebook
[2024-12-19T22:16:55.362Z] [NbConvertApp] Writing 381190 bytes to buildout/10_Data_assimilation.output.ipynb
[2024-12-19T22:16:55.362Z] + basename RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb
[2024-12-19T22:16:55.362Z] + filename=11_Climatological_ESP_forecasting.ipynb
[2024-12-19T22:16:55.362Z] + echo 11_Climatological_ESP_forecasting.ipynb
[2024-12-19T22:16:55.362Z] + sed s/.ipynb$//
[2024-12-19T22:16:55.362Z] + filename=11_Climatological_ESP_forecasting
[2024-12-19T22:16:55.362Z] + [ -e buildout/11_Climatological_ESP_forecasting.output.ipynb ]
[2024-12-19T22:16:55.362Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 11_Climatological_ESP_forecasting.output.ipynb RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb
[2024-12-19T22:16:55.362Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/11_Climatological_ESP_forecasting.ipynb to notebook
[2024-12-19T22:17:34.209Z] [NbConvertApp] Writing 175701 bytes to buildout/11_Climatological_ESP_forecasting.output.ipynb
[2024-12-19T22:17:34.209Z] + basename RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb
[2024-12-19T22:17:34.209Z] + filename=12_Performing_hindcasting_experiments.ipynb
[2024-12-19T22:17:34.209Z] + echo 12_Performing_hindcasting_experiments.ipynb
[2024-12-19T22:17:34.209Z] + sed s/.ipynb$//
[2024-12-19T22:17:34.209Z] + filename=12_Performing_hindcasting_experiments
[2024-12-19T22:17:34.209Z] + [ -e buildout/12_Performing_hindcasting_experiments.output.ipynb ]
[2024-12-19T22:17:34.209Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output 12_Performing_hindcasting_experiments.output.ipynb RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb
[2024-12-19T22:17:35.573Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/12_Performing_hindcasting_experiments.ipynb to notebook
[2024-12-19T22:18:07.997Z] [NbConvertApp] Writing 148645 bytes to buildout/12_Performing_hindcasting_experiments.output.ipynb
[2024-12-19T22:18:07.997Z] + basename RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb
[2024-12-19T22:18:07.997Z] + filename=Assess_probabilistic_flood_risk.ipynb
[2024-12-19T22:18:07.997Z] + echo Assess_probabilistic_flood_risk.ipynb
[2024-12-19T22:18:07.997Z] + sed s/.ipynb$//
[2024-12-19T22:18:07.997Z] + filename=Assess_probabilistic_flood_risk
[2024-12-19T22:18:07.997Z] + [ -e buildout/Assess_probabilistic_flood_risk.output.ipynb ]
[2024-12-19T22:18:07.997Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Assess_probabilistic_flood_risk.output.ipynb RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb
[2024-12-19T22:18:07.997Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Assess_probabilistic_flood_risk.ipynb to notebook
[2024-12-19T22:18:47.482Z] [NbConvertApp] Writing 158839 bytes to buildout/Assess_probabilistic_flood_risk.output.ipynb
[2024-12-19T22:18:47.482Z] + basename RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-12-19T22:18:47.482Z] + filename=Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-12-19T22:18:47.482Z] + + echo Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-12-19T22:18:47.482Z] sed s/.ipynb$//
[2024-12-19T22:18:47.482Z] + filename=Comparing_hindcasts_and_ESP_forecasts
[2024-12-19T22:18:47.482Z] + [ -e buildout/Comparing_hindcasts_and_ESP_forecasts.output.ipynb ]
[2024-12-19T22:18:47.482Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Comparing_hindcasts_and_ESP_forecasts.output.ipynb RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb
[2024-12-19T22:18:47.482Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Comparing_hindcasts_and_ESP_forecasts.ipynb to notebook
[2024-12-19T22:19:26.136Z] [NbConvertApp] Writing 302917 bytes to buildout/Comparing_hindcasts_and_ESP_forecasts.output.ipynb
[2024-12-19T22:19:26.136Z] + basename RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb
[2024-12-19T22:19:26.136Z] + filename=Distributed_hydrological_modelling.ipynb
[2024-12-19T22:19:26.136Z] + echo Distributed_hydrological_modelling.ipynb
[2024-12-19T22:19:26.136Z] + sed s/.ipynb$//
[2024-12-19T22:19:26.136Z] + filename=Distributed_hydrological_modelling
[2024-12-19T22:19:26.136Z] + [ -e buildout/Distributed_hydrological_modelling.output.ipynb ]
[2024-12-19T22:19:26.136Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Distributed_hydrological_modelling.output.ipynb RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb
[2024-12-19T22:19:26.136Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Distributed_hydrological_modelling.ipynb to notebook
[2024-12-19T22:19:52.631Z] [NbConvertApp] Writing 101017 bytes to buildout/Distributed_hydrological_modelling.output.ipynb
[2024-12-19T22:19:52.631Z] + basename RavenPy-master/docs/notebooks/HydroShare_integration.ipynb
[2024-12-19T22:19:52.631Z] + filename=HydroShare_integration.ipynb
[2024-12-19T22:19:52.631Z] + echo HydroShare_integration.ipynb
[2024-12-19T22:19:52.631Z] + sed s/.ipynb$//
[2024-12-19T22:19:52.631Z] + filename=HydroShare_integration
[2024-12-19T22:19:52.631Z] + [ -e buildout/HydroShare_integration.output.ipynb ]
[2024-12-19T22:19:52.632Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output HydroShare_integration.output.ipynb RavenPy-master/docs/notebooks/HydroShare_integration.ipynb
[2024-12-19T22:19:52.632Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/HydroShare_integration.ipynb to notebook
[2024-12-19T22:19:55.900Z] [NbConvertApp] Writing 13049 bytes to buildout/HydroShare_integration.output.ipynb
[2024-12-19T22:19:55.900Z] + basename RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb
[2024-12-19T22:19:55.900Z] + filename=Hydrological_realtime_forecasting.ipynb
[2024-12-19T22:19:55.900Z] + echo Hydrological_realtime_forecasting.ipynb
[2024-12-19T22:19:55.900Z] + sed s/.ipynb$//
[2024-12-19T22:19:55.900Z] + filename=Hydrological_realtime_forecasting
[2024-12-19T22:19:55.900Z] + [ -e buildout/Hydrological_realtime_forecasting.output.ipynb ]
[2024-12-19T22:19:55.900Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Hydrological_realtime_forecasting.output.ipynb RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb
[2024-12-19T22:19:57.266Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Hydrological_realtime_forecasting.ipynb to notebook
[2024-12-19T22:20:29.274Z] [NbConvertApp] Writing 120679 bytes to buildout/Hydrological_realtime_forecasting.output.ipynb
[2024-12-19T22:20:29.274Z] + basename RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb
[2024-12-19T22:20:29.274Z] + filename=Managing_Jupyter_Environments.ipynb
[2024-12-19T22:20:29.274Z] + echo Managing_Jupyter_Environments.ipynb
[2024-12-19T22:20:29.274Z] + sed s/.ipynb$//
[2024-12-19T22:20:29.274Z] + filename=Managing_Jupyter_Environments
[2024-12-19T22:20:29.274Z] + [ -e buildout/Managing_Jupyter_Environments.output.ipynb ]
[2024-12-19T22:20:29.274Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Managing_Jupyter_Environments.output.ipynb RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb
[2024-12-19T22:20:29.274Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Managing_Jupyter_Environments.ipynb to notebook
[2024-12-19T22:20:32.551Z] [NbConvertApp] Writing 6148 bytes to buildout/Managing_Jupyter_Environments.output.ipynb
[2024-12-19T22:20:32.551Z] + basename RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb
[2024-12-19T22:20:32.551Z] + filename=Perform_Regionalization.ipynb
[2024-12-19T22:20:32.551Z] + echo Perform_Regionalization.ipynb
[2024-12-19T22:20:32.551Z] + sed s/.ipynb$//
[2024-12-19T22:20:32.551Z] + filename=Perform_Regionalization
[2024-12-19T22:20:32.551Z] + [ -e buildout/Perform_Regionalization.output.ipynb ]
[2024-12-19T22:20:32.551Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Perform_Regionalization.output.ipynb RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb
[2024-12-19T22:20:33.913Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Perform_Regionalization.ipynb to notebook
[2024-12-19T22:21:05.941Z] [NbConvertApp] Writing 119590 bytes to buildout/Perform_Regionalization.output.ipynb
[2024-12-19T22:21:05.941Z] + basename RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-12-19T22:21:05.941Z] + filename=Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-12-19T22:21:05.941Z] + echo Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-12-19T22:21:05.941Z] + sed s/.ipynb$//
[2024-12-19T22:21:05.941Z] + filename=Running_HMETS_with_CANOPEX_dataset
[2024-12-19T22:21:05.941Z] + [ -e buildout/Running_HMETS_with_CANOPEX_dataset.output.ipynb ]
[2024-12-19T22:21:05.942Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Running_HMETS_with_CANOPEX_dataset.output.ipynb RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb
[2024-12-19T22:21:05.942Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Running_HMETS_with_CANOPEX_dataset.ipynb to notebook
[2024-12-19T22:21:18.106Z] [NbConvertApp] Writing 101600 bytes to buildout/Running_HMETS_with_CANOPEX_dataset.output.ipynb
[2024-12-19T22:21:18.106Z] + basename RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb
[2024-12-19T22:21:18.106Z] + filename=Sensitivity_analysis.ipynb
[2024-12-19T22:21:18.106Z] + echo Sensitivity_analysis.ipynb
[2024-12-19T22:21:18.106Z] + sed s/.ipynb$//
[2024-12-19T22:21:18.106Z] + filename=Sensitivity_analysis
[2024-12-19T22:21:18.106Z] + [ -e buildout/Sensitivity_analysis.output.ipynb ]
[2024-12-19T22:21:18.106Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Sensitivity_analysis.output.ipynb RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb
[2024-12-19T22:21:19.476Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/Sensitivity_analysis.ipynb to notebook
[2024-12-19T22:21:37.529Z] [NbConvertApp] Writing 28199 bytes to buildout/Sensitivity_analysis.output.ipynb
[2024-12-19T22:21:37.529Z] + basename RavenPy-master/docs/notebooks/time_series_analysis.ipynb
[2024-12-19T22:21:37.529Z] + filename=time_series_analysis.ipynb
[2024-12-19T22:21:37.529Z] + echo time_series_analysis.ipynb
[2024-12-19T22:21:37.529Z] + sed s/.ipynb$//
[2024-12-19T22:21:37.529Z] + filename=time_series_analysis
[2024-12-19T22:21:37.529Z] + [ -e buildout/time_series_analysis.output.ipynb ]
[2024-12-19T22:21:37.529Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output time_series_analysis.output.ipynb RavenPy-master/docs/notebooks/time_series_analysis.ipynb
[2024-12-19T22:21:38.092Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/time_series_analysis.ipynb to notebook
[2024-12-19T22:21:48.032Z] [NbConvertApp] Writing 187526 bytes to buildout/time_series_analysis.output.ipynb
[2024-12-19T22:21:48.032Z] + basename RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-12-19T22:21:48.032Z] + filename=Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-12-19T22:21:48.032Z] + echo Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-12-19T22:21:48.032Z] + sed s/.ipynb$//
[2024-12-19T22:21:48.032Z] + filename=Perform_a_climate_change_impact_study_on_a_watershed
[2024-12-19T22:21:48.032Z] + [ -e buildout/Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb ]
[2024-12-19T22:21:48.032Z] + jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 --allow-errors --output-dir buildout --output Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb
[2024-12-19T22:21:48.595Z] [NbConvertApp] Converting notebook RavenPy-master/docs/notebooks/paper/Perform_a_climate_change_impact_study_on_a_watershed.ipynb to notebook
[2024-12-19T22:22:56.236Z] [NbConvertApp] Writing 122420 bytes to buildout/Perform_a_climate_change_impact_study_on_a_watershed.output.ipynb
[2024-12-19T22:22:56.236Z] + exit 1
[2024-12-19T22:22:56.236Z] + EXIT_CODE=1
[2024-12-19T22:22:56.236Z] + ENV_DUMP_DIR=buildout/env-dump
[2024-12-19T22:22:56.236Z] + mkdir -p buildout/env-dump
[2024-12-19T22:22:56.236Z] + ENV_EXPORT_FILE=buildout/env-dump/environment-export-birdy.yml
[2024-12-19T22:22:56.236Z] + rm -fv buildout/env-dump/environment-export-birdy.yml
[2024-12-19T22:22:56.236Z] + conda env export -n birdy
[2024-12-19T22:23:04.315Z] + LIST_EXPLICIT_FILE=buildout/env-dump/conda-list-explicit-birdy.txt
[2024-12-19T22:23:04.315Z] + rm -fv buildout/env-dump/conda-list-explicit-birdy.txt
[2024-12-19T22:23:04.315Z] + conda list -n birdy --explicit
[2024-12-19T22:23:09.557Z] + PIP_FREEZE_FILE=buildout/env-dump/pip-freeze-birdy-requirements.txt
[2024-12-19T22:23:09.557Z] + rm -fv buildout/env-dump/pip-freeze-birdy-requirements.txt
[2024-12-19T22:23:09.557Z] + pip freeze
[2024-12-19T22:23:10.483Z] + exit 1
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] archiveArtifacts
[2024-12-19T22:23:10.771Z] Archiving artifacts
[2024-12-19T22:23:10.793Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:10.816Z] Archiving artifacts
[2024-12-19T22:23:11.312Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.515Z] Archiving artifacts
[2024-12-19T22:23:12.565Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.583Z] Archiving artifacts
[2024-12-19T22:23:12.596Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.616Z] Archiving artifacts
[2024-12-19T22:23:12.690Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.711Z] Archiving artifacts
[2024-12-19T22:23:12.744Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.828Z] Archiving artifacts
[2024-12-19T22:23:12.840Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.859Z] Archiving artifacts
[2024-12-19T22:23:12.891Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:12.957Z] Archiving artifacts
[2024-12-19T22:23:13.383Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:13.437Z] Archiving artifacts
[2024-12-19T22:23:13.756Z] Recording fingerprints
[Pipeline] archiveArtifacts
[2024-12-19T22:23:13.883Z] Archiving artifacts
[2024-12-19T22:23:13.895Z] Recording fingerprints
[Pipeline] emailextrecipients
[Pipeline] step
[2024-12-19T22:23:13.962Z] Sending e-mails to: vu.long@ouranos.ca
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // timeout
[Pipeline] }
[Pipeline] // timestamps
[Pipeline] }
[Pipeline] // ansiColor
[Pipeline] }
$ docker stop --time=1 b31780001746f09d8f4bf69b2ac5de1a3bcbc9aa2aec178666a4af1cdfe9cf8f
$ docker rm -f b31780001746f09d8f4bf69b2ac5de1a3bcbc9aa2aec178666a4af1cdfe9cf8f
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
