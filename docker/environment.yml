# conda env create -f environment.yml
name: birdy
channels:
  - conda-forge
  - cdat
  - bokeh

dependencies:
  - python >= 3.10

  # Do not put xclim and ravenpy direct dependencies here to let xclim and ravenpy manage their own dependencies pinning.

  # clisops direct dependencies: https://github.com/conda-forge/clisops-feedstock/blob/master/recipe/meta.yaml
  # ravenpy direct dependencies: https://github.com/conda-forge/ravenpy-feedstock/blob/master/recipe/meta.yaml
  # xclim direct dependencies: https://github.com/conda-forge/xclim-feedstock/blob/master/recipe/meta.yaml
  # xscen direct dependencies: https://github.com/conda-forge/xscen-feedstock/blob/main/recipe/meta.yaml
  # xsdba direct dependencies: https://github.com/conda-forge/xsdba-feedstock/blob/main/recipe/meta.yaml

  # Pin latest clisops, ravenpy, xclim, and xscen to avoid downgrading during the second installation phase.
  # Mamba is quicker to solve dependencies than conda, but it is less precise so accidental downgrades can happen.

  ## CORE LIBRARIES

  # clisops: Data reduction operations on xarray climate data
  - clisops >= 0.16.1
  # RavenPy: A Python wrapper for configuring and running the hydrologic modelling framework Raven.
  - ravenpy >= 0.18.0
  # xclim: Climate indices computation package based on Xarray.
  - xclim >= 0.56.0
  # xscen: A climate change scenario-building analysis framework, built with xclim/xarray.
  - xscen >= 0.12.1
  # xsdba: Statistical correction and bias adjustment tools for xarray.
  - xsdba >= 0.4.0

  # Add pins here as needed

  # dask: parallel computing with task scheduling
  - dask != 2024.11.0  # bug in this specific version broke Raven nb
  # matplotlib: 2D plotting library
  - matplotlib
  # numpy: fundamental package for scientific computing with Python
  - numpy
  # pandas: data structures and data analysis tools for Python
  - pandas
  # scipy: scientific computing library for Python
  - scipy >= 1.11.0
  # xarray: N-D labeled arrays and datasets in Python
  - xarray

  ## COMMON LIBRARIES

  # flox: fast & furious GroupBy reductions for dask.array
  # https://anaconda.org/conda-forge/flox
  - flox
  # cf-xarray: xarray extension for CF-compliant data
  # https://anaconda.org/conda-forge/cf-xarray
  - cf_xarray != 0.8.1
  - birdy >= 0.8.7
    # - owslib>=0.23.0  # from ravenpy
    # - netcdf4  # from ravenpy
  - libnetcdf
  # cfgrib: Python interface to map GRIB files to the Unidata's Common Data Model v4 following the CF Conventions.
  # https://github.com/ecmwf/cfgrib
  - cfgrib
  - pydap
  # cartopy: Python library for cartographic projections and geospatial data visualization
  # https://anaconda.org/conda-forge/cartopy
  # - cartopy >= 0.23.0 # provided by xscen
  # pykdtree: Fast kd-tree implementation with OpenMP-enabled queries
  # Fixes cartopy bug arising with scipy 1.11.
  # https://github.com/Ouranosinc/pavics-sdi/pull/298
  # https://github.com/Ouranosinc/pavics-sdi/issues/294
  - pykdtree
  # pyogrio: Vectorized vector I/O using GDAL
  # https://anaconda.org/conda-forge/pyogrio
  - pyogrio
  - scikit-image
  - threddsclient >= 0.4.5
  - bokeh
  - regionmask
  - siphon
  - pscript
  - h5netcdf
  - panel >= 1.2.2
  # https://github.com/holoviz/panel
  - pyviz_comms  # (was labextension pyviz/jupyterlab_pyviz in jupyterlab v2)
  - holoviews
  - geoviews >= 1.9.6
  # this might still be relevant https://github.com/holoviz/hvplot/issues/498
  # (violin plot not working with hvplot 0.6.0).
  # Per this comment
  # https://github.com/bird-house/birdhouse-deploy/pull/63#issuecomment-668270608
  # pinning hvplot did not solve the problem with violin plot.
  - hvplot
  # dash: A web application framework for building data visualization interfaces.
  # https://anaconda.org/conda-forge/dash
  - dash >= 2.16.1
  # streamlit: For creating web apps for data science and machine learning projects.
  # https://streamlit.io/
  # https://anaconda.org/conda-forge/streamlit
  - streamlit
  # Seaborn: Statistical data visualization
  # https://anaconda.org/conda-forge/seaborn
  - seaborn
  # python-pptx is a Python library for creating and updating PowerPoint (.pptx) files.
  # https://python-pptx.readthedocs.io/en/latest/
  # https://anaconda.org/conda-forge/python-pptx
  - python-pptx
  # openpyxl: library to read/write Excel 2010 xlsx/xlsm files
  # https://anaconda.org/conda-forge/openpyxl
  - openpyxl
  - nc-time-axis
    # - cftime  # from xclim and ravenpy
    # - statsmodels  # for ravenpy
  # for error 'ImportError: HTTPFileSystem requires "requests" and "aiohttp" to
  # be installed' with call 'fsspec.filesystem('https')'
  - aiohttp
    # - pydantic  # from ravenpy
  # Intake is a lightweight set of tools for loading and sharing data in data science projects
  # https://intake.readthedocs.io/en/latest/
  - intake
  # https://intake.readthedocs.io/en/latest/plugin-directory.html
  # intake-esm: Plugin for building and loading intake catalogs for earth system data sets
  # holdings, such as CMIP (Coupled Model Intercomparison Project) and CESM Large Ensemble datasets.
  - intake-esm >= 2025.2.3
  # intake-xarray: Plugin for loading and saving xarray datasets load netCDF, Zarr and other
  # multidimensional data (xarray_image, netcdf, grib, opendap, rasterio, remote-xarray, zarr)
  # https://intake-xarray.readthedocs.io/en/latest/
  - intake-xarray
  # load from ESRI Shape Files, GeoJSON, and geospatial databases with geopandas
  # (geojson, postgis, shapefile, spatialite) and regionmask for opening shapefiles into regionmask.
  # https://github.com/intake/intake_geopandas
  - intake-geopandas
  # Intake interface to THREDDS data catalogs (thredds_cat, thredds_merged_source)
  # https://github.com/intake/intake-thredds
  - intake-thredds
  # gcsfs: Google Cloud Storage File System
  # https://anaconda.org/conda-forge/gcsfs
  - gcsfs
  # zarr: Python implementation of Zarr, a format for chunked, compressed, N-dimensional arrays
  # https://anaconda.org/conda-forge/zarr
  # - zarr # provided by xscen
  # s3fs: Convenient Filesystem interface over S3
  # https://github.com/dask/s3fs/
  - s3fs
    # - shapely  # from ravenpy
  # xesmf: Universal Regridder for Geospatial Data
  - xesmf >= 0.7.0  # Needed for xscen 0.12.1
  # salib: Sensitivity Analysis Library
  # https://anaconda.org/conda-forge/salib
  - salib
  # geopy: Python Geocoding Toolbox
  # https://anaconda.org/conda-forge/geopy
  - geopy
  # Monitor memory consumption of a process as well as line-by-line analysis of memory consumption for Python programs.
  # https://anaconda.org/anaconda/memory_profiler
  - memory_profiler
  # for esgf notebooks
  - esgf-compute-api
  # esgf-pyclient: Python client for the Earth System Grid Federation (ESGF) web services.
  # https://anaconda.org/conda-forge/esgf-pyclient (for pavics-sdi esgf-dap.ipynb)
  - esgf-pyclient
  # mesalib: open-source implementation of the OpenGL specification
  - mesalib
  # TESTING LIBRARIES
  - pytest
  - pytest-xdist >= 3.2.0  # Needed for xclim
  - nbval
  # to edit .ipynb
  - jupyter
  # to be launched by image jupyterhub/jupyterhub
  - notebook
  # JupyterLab computational environment
  - jupyterlab
  # JupyterHub: A multi-user server for Jupyter notebooks
  - jupyterhub
  # https://ipywidgets.readthedocs.io/en/latest/user_install.html
  - ipywidgets
  # https://github.com/jupyter-widgets/ipyleaflet
  - ipyleaflet
  # https://github.com/mamba-org/gator (was jupyter_conda)
  - mamba_gator
  # to diff .ipynb files
  - nbdime
  # for rendering Bokeh content
  - jupyter_bokeh
  # extension to produce .py files from notebook .ipynb files
  - jupytext
  # jupyterlab extension for git
  - jupyterlab-git >= 0.44.0
  # Voil√† turns Jupyter notebooks into standalone web applications
  - voila
  # TODO: UNPIN jupyter-archive due to
  # https://github.com/jupyterlab-contrib/jupyter-archive/issues/132
  - jupyter-archive <= 3.3.4
  # https://github.com/jtpio/jupyterlab-topbar
  - jupyterlab-topbar
  # https://github.com/jtpio/jupyterlab-system-monitor (was from jupyterlab-topbar)
  - jupyterlab-system-monitor
  - jupyter-resource-usage  # needed by jupyterlab-system-monitor
  - nbresuse  # needed by jupyterlab-system-monitor
  # xeus-python: back-end kernel implementing the Jupyter Debug Protocol
  # https://github.com/jupyter-xeus/xeus-python
  - xeus-python
  # jupyter-server-proxy: run arbitrary external processes alongside your notebook server
  # https:://github.com/jupyterhub/jupyter-server-proxy
  - jupyter-server-proxy
  # dask-labextension: A JupyterLab extension for Dask.
  # https://github.com/dask/dask-labextension
  - dask-labextension
  # https://github.com/holoviz/jupyter-panel-proxy
  # DISABLE: seems to interfere with 'panel serve' command
  # - jupyter-panel-proxy >= 0.2.0a2
  # Force newer nodejs for 'jupyter lab build' issue
  # https://github.com/jupyterlab/jupyterlab/issues/11726#issuecomment-998901247
  # TODO: remove nodejs once all extensions move to prebuilt extensions, see comment
  # https://github.com/jupyterlab/jupyterlab/issues/11726#issuecomment-998917305
  - nodejs >= 16.0
  # utilities
  - curl
  - wget
  - nested_dict
  - paramiko
  - pymetalink  # for Raven notebook Extract_geographical_watershed_properties.ipynb
  - requests-magpie
  - scp
  - selenium
  - geckodriver
  - xlrd
  - pre-commit
  # for pip packages
  - pip
  - pip:
    # figanos: Outils pour produire des graphiques informatifs sur les impacts des changements climatiques.
    # https://pypi.org/project/figanos/
    - figanos >= 0.4.0
    # xncml: Tools for manipulating and opening NCML (NetCDF Markup) files with/for xarray
    # https://pypi.org/project/xncml/
    - xncml
    # hsclient: A python client for managing HydroShare resources, replaces hs_restclient
    # https://pypi.org/project/hsclient/
    - hsclient
    # fstd2nc: Converts RPN standard files (from Environment Canada) to netCDF files.
    # https://pypi.org/project/fstd2nc/
    - fstd2nc
    # ipython_blocking: block execution of 'run_all_cells' until user input finished
    - ipython_blocking
    # handcalcs: Mimics how one might format their calculation if it were written with a
    # pencil: write the symbolic formula, followed by numeric substitutions,
    # and then the result.
    # DISABLE handcalcs, interfere with "Panel preview" button
    # See comment https://github.com/holoviz/panel/issues/3440#issuecomment-1112182170
    # - handcalcs
    # jupyternotify: Jupyter Magic For Browser Notifications of Cell Completion.
    # https://github.com/ShopRunner/jupyter-notify
    - jupyternotify
    # jupyterlab-logout: JupyterLab extension to log out of JupyterHub
    # https://github.com/jupyterlab-contrib/jupyterlab-logout (was from jupyterlab-topbar)
    # - jupyterlab-logout
    # jupyterlab-tabular-data-editor: JupyterLab extension for editing tabular data
    # https://github.com/jupytercalpoly/jupyterlab-tabular-data-editor
    - jupyterlab-tabular-data-editor
    # Needed to run notebook tests
    # Missing indirect recursive dependencies somewhere, should not need to manually add it here.
    - pytest-tornasync
